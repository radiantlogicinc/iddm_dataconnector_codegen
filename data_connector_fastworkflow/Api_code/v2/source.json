{
  "v2": {
    "methods": {
      "/api/atlas/v2": {
        "verb": "get",
        "operation": "getSystemStatus",
        "tags": [
          "Root"
        ],
        "description": "This resource returns information about the MongoDB application along with API key meta data.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "fieldNames": {
    "methods": {
      "/api/atlas/v2/alertConfigs/matchers/fieldNames": {
        "verb": "get",
        "operation": "listAlertConfigMatcherFieldNames",
        "tags": [
          "Alert Configurations"
        ],
        "description": "Get all field names that the `matchers.fieldName` parameter accepts when you create or update an Alert Configuration. You can successfully call this endpoint with any assigned role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "clusters": {
    "methods": {
      "/api/atlas/v2/clusters": {
        "verb": "get",
        "operation": "listClusterDetails",
        "tags": [
          "Clusters"
        ],
        "description": "Returns the details for all clusters in all projects to which you have access. Clusters contain a group of hosts that maintain the same data set. The response does not include multi-cloud clusters. To use this resource, the requesting Service Account or API Key can have any cluster-level role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters": {
        "verb": "post",
        "operation": "createGroupCluster",
        "tags": [
          "Clusters"
        ],
        "description": "Creates one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. This resource can create clusters with asymmetrically-sized shards. Each project supports up to 25 database deployments. To use this resource, the requesting Service Account or API Key must have the Project Owner role. This feature is not available for serverless clusters.\n\nPlease note that using an instanceSize of M2 or M5 will create a Flex cluster instead. Support for the instanceSize of M2 or M5 will be discontinued in January 2026. We recommend using the createFlexCluster API for such configurations moving forward.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}": {
        "verb": "patch",
        "operation": "updateGroupCluster",
        "tags": [
          "Clusters"
        ],
        "description": "Updates the details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. This resource can update clusters with asymmetrically-sized shards. To update a cluster's termination protection, the requesting Service Account or API Key must have the Project Owner role. For all other updates, the requesting Service Account or API Key must have the Project Cluster Manager role. You can't modify a paused cluster (`paused : true`). You must call this endpoint to set `paused : false`. After this endpoint responds with `paused : false`, you can call it again with the changes you want to make to the cluster. This feature is not available for serverless clusters.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}": {
        "verb": "get",
        "operation": "getGroupDbAccessHistoryCluster",
        "tags": [
          "Access Tracking"
        ],
        "description": "Returns the access logs of one cluster identified by the cluster's name. Access logs contain a list of authentication requests made against your cluster. You can't use this feature on tenant-tier clusters (M0, M2, M5). To use this resource, the requesting Service Account or API Key must have the Project Monitoring Admin role or the Project Database Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Flag that indicates whether the response returns the successful authentication attempts only.",
            "in": "query",
            "name": "authResult",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Date and time when to stop retrieving database history. If you specify **end**, you must also specify **start**. This parameter uses UNIX epoch time in milliseconds.",
            "in": "query",
            "name": "end",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "One Internet Protocol address that attempted to authenticate with the database.",
            "in": "query",
            "name": "ipAddress",
            "schema": {
              "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
              "type": "string"
            }
          },
          {
            "description": "Maximum number of lines from the log to return.",
            "in": "query",
            "name": "nLogs",
            "schema": {
              "default": 20000,
              "format": "int32",
              "maximum": 20000,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Date and time when MongoDB Cloud begins retrieving database history. If you specify **start**, you must also specify **end**. This parameter uses UNIX epoch time in milliseconds.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ]
      }
    }
  },
  "eventTypes": {
    "methods": {
      "/api/atlas/v2/eventTypes": {
        "verb": "get",
        "operation": "listEventTypes",
        "tags": [
          "Events"
        ],
        "description": "Returns a list of all event types, along with a description and additional metadata about each event.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "federationSettings": {
    "methods": {
      "/api/atlas/v2/federationSettings/{federationSettingsId}": {
        "verb": "delete",
        "operation": "deleteFederationSetting",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Deletes the federation settings instance and all associated data, including identity providers and domains. To use this resource, the requesting Service Account or API Key must have the Organization Owner role in the last remaining connected organization. **Note**: requests to this resource will fail if there is more than one connected organization in the federation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/federationSettings": {
        "verb": "get",
        "operation": "getOrgFederationSettings",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Returns information about the federation settings for the specified organization. To use this resource, the requesting Service Account or API Key must have the Organization Owner role in the connected org.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "connectedOrgConfigs": {
    "methods": {
      "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs": {
        "verb": "get",
        "operation": "listFederationSettingConnectedOrgConfigs",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Returns all connected org configs in the specified federation. To use this resource, the requesting Service Account or API Key must have the Organization Owner role in one of the connected orgs.",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          }
        ]
      },
      "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}": {
        "verb": "patch",
        "operation": "updateFederationSettingConnectedOrgConfig",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Updates one connected organization configuration from the specified federation. To use this resource, the requesting Service Account or API Key must have the Organization Owner role. \n\n**Note** If the organization configuration has no associated identity provider, you can't use this resource to update role mappings or post authorization role grants.  \n\n**Note**: The domainRestrictionEnabled field defaults to false if not provided in the request. \n\n**Note**: If the identityProviderId field is not provided, you will disconnect the organization and the identity provider. \n\n**Note**: Currently connected data access identity providers missing from the dataAccessIdentityProviderIds field will be disconnected.",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the connected organization configuration to update.",
            "in": "path",
            "name": "orgId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "roleMappings": {
    "methods": {
      "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings": {
        "verb": "post",
        "operation": "createFederationSettingConnectedOrgConfigRoleMapping",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Adds one role mapping to the specified organization in the specified federation. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ]
      },
      "/api/atlas/v2/federationSettings/{federationSettingsId}/connectedOrgConfigs/{orgId}/roleMappings/{id}": {
        "verb": "put",
        "operation": "updateFederationSettingConnectedOrgConfigRoleMapping",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Updates one role mapping in the specified organization in the specified federation. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the role mapping that you want to update.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ]
      }
    }
  },
  "identityProviders": {
    "methods": {
      "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders": {
        "verb": "post",
        "operation": "createFederationSettingIdentityProvider",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Creates one identity provider within the specified federation. To use this resource, the requesting Service Account or API Key must have the Organization Owner role in one of the connected organizations.\n\n**Note**: This resource only supports the creation of OIDC identity providers.",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      },
      "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}": {
        "verb": "patch",
        "operation": "updateFederationSettingIdentityProvider",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Updates one identity provider in the specified federation. To use this resource, the requesting Service Account or API Key must have the Organization Owner role in one of the connected organizations.\n\n**Note**: Changing authorization types and/or updating authorization claims can prevent current users and/or groups from accessing the database.",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "description": "Unique string that identifies the identity provider to connect. If using an API version before 11-15-2023, use the legacy 20-hexadecimal digit id. This id can be found within the Federation Management Console > Identity Providers tab by clicking the info icon in the IdP ID row of a configured identity provider. For all other versions, use the 24-hexadecimal digit id.",
            "in": "path",
            "name": "identityProviderId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      }
    }
  },
  "jwks": {
    "methods": {
      "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}/jwks": {
        "verb": "delete",
        "operation": "revokeFederationSettingIdentityProviderJwks",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Revokes the JWKS tokens from the requested OIDC identity provider. To use this resource, the requesting Service Account or API Key must have the Organization Owner role in one of the connected organizations. \n\n**Note**: Revoking your JWKS tokens immediately refreshes your IdP public keys from all your Atlas clusters, invalidating previously signed access tokens and logging out all users. You may need to restart your MongoDB clients. All organizations connected to the identity provider will be affected.",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the identity provider to connect.",
            "in": "path",
            "name": "identityProviderId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      }
    }
  },
  "metadata.xml": {
    "methods": {
      "/api/atlas/v2/federationSettings/{federationSettingsId}/identityProviders/{identityProviderId}/metadata.xml": {
        "verb": "get",
        "operation": "getFederationSettingIdentityProviderMetadata",
        "tags": [
          "Federated Authentication"
        ],
        "description": "Returns the metadata of one identity provider in the specified federation. To use this resource, the requesting Service Account or API Key must have the Organization Owner role in one of the connected organizations.",
        "parameters": [
          {
            "$ref": "#/components/parameters/federationSettingsId"
          },
          {
            "$ref": "#/components/parameters/identityProviderId"
          }
        ]
      }
    }
  },
  "groups": {
    "methods": {
      "/api/atlas/v2/groups": {
        "verb": "post",
        "operation": "createGroup",
        "tags": [
          "Projects"
        ],
        "description": "Creates one project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting Service Account or API Key must have the Read Write role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user to whom to grant the Project Owner role on the specified project. If you set this parameter, it overrides the default value of the oldest Organization Owner.",
            "in": "query",
            "name": "projectOwnerId",
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}": {
        "verb": "patch",
        "operation": "updateGroup",
        "tags": [
          "Projects"
        ],
        "description": "Updates the human-readable label that identifies the specified project, or the tags associated with the project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/groups": {
        "verb": "get",
        "operation": "getOrgGroups",
        "tags": [
          "Organizations"
        ],
        "description": "Returns multiple projects in the specified organization. Each organization can have multiple projects. Use projects to:\n\n- Isolate different environments, such as development, test, or production environments, from each other.\n- Associate different MongoDB Cloud users or teams with different environments, or give different permission to MongoDB Cloud users in different environments.\n- Maintain separate cluster security configurations.\n- Create different alert settings.\n\nTo use this resource, the requesting Service Account or API Key must have the Organization Member role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label of the project to use to filter the returned list. Performs a case-insensitive search for a project within the organization which is prefixed by the specified name.",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/groups": {
        "verb": "get",
        "operation": "getOrgServiceAccountGroups",
        "tags": [
          "Service Accounts"
        ],
        "description": "Returns a list of all projects the specified Service Account is a part of.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      }
    }
  },
  "access": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/access": {
        "verb": "post",
        "operation": "addGroupAccessUser",
        "tags": [
          "Projects"
        ],
        "description": "Adds one MongoDB Cloud user to the specified project. If the MongoDB Cloud user is not a member of the project's organization, then the user must accept their invitation to the organization to access information within the specified project. If the MongoDB Cloud User is already a member of the project's organization, then they will be added to the project immediately and an invitation will not be returned by this resource. To use this resource, the requesting Service Account or API Key must have the Group User Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      }
    }
  },
  "accessList": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/accessList": {
        "verb": "post",
        "operation": "createGroupAccessListEntry",
        "tags": [
          "Project IP Access List"
        ],
        "description": "Adds one or more access list entries to the specified project. MongoDB Cloud only allows client connections to the cluster from entries in the project's IP access list. Write each entry as either one IP address or one CIDR-notated block of IP addresses. To use this resource, the requesting Service Account or API Key must have the Project Owner or Project Charts Admin roles. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. The `/groups/{GROUP-ID}/accessList` endpoint manages the database IP access list. This endpoint is distinct from the `orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist` endpoint, which manages the access list for MongoDB Cloud organizations. This endpoint doesn't support concurrent `POST` requests. You must submit multiple `POST` requests synchronously.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/accessList/{entryValue}": {
        "verb": "get",
        "operation": "getGroupAccessListEntry",
        "tags": [
          "Project IP Access List"
        ],
        "description": "Returns one access list entry from the specified project's IP access list. Each entry in the project's IP access list contains either one IP address or one CIDR-notated block of IP addresses. MongoDB Cloud only allows client connections to the cluster from entries in the project's IP access list. To use this resource, the requesting Service Account or API Key must have the Project Read Only or Project Charts Admin roles. This resource replaces the whitelist resource. MongoDB Cloud removed whitelists in July 2021. Update your applications to use this new resource. This endpoint (`/groups/{GROUP-ID}/accessList`) manages the Project IP Access List. It doesn't manage the access list for MongoDB Cloud organizations. TheProgrammatic API Keys endpoint (`/orgs/{ORG-ID}/apiKeys/{API-KEY-ID}/accesslist`) manages those access lists.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Access list entry that you want to return from the project's IP access list. This value can use one of the following: one AWS security group ID, one IP address, or one CIDR block of addresses. For CIDR blocks that use a subnet mask, replace the forward slash (`/`) with its URL-encoded value (`%2F`).",
            "in": "path",
            "name": "entryValue",
            "required": true,
            "schema": {
              "example": "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS SG: sg-903004f8",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})|(sg\\-[a-f0-9]{8})?$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}/accessList": {
        "verb": "post",
        "operation": "createGroupServiceAccountAccessList",
        "tags": [
          "Service Accounts"
        ],
        "description": "Add Access List Entries for the specified Service Account for the project. Resources require all API requests to originate from IP addresses on the API access list.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}/accessList/{ipAddress}": {
        "verb": "delete",
        "operation": "deleteGroupServiceAccountAccessListEntry",
        "tags": [
          "Service Accounts"
        ],
        "description": "Removes the specified access list entry from the specified Service Account for the project. You can't remove the requesting IP address from the access list.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "description": "One IP address or multiple IP addresses represented as one CIDR block. When specifying a CIDR block with a subnet mask, such as 192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.",
            "in": "path",
            "name": "ipAddress",
            "required": true,
            "schema": {
              "example": "192.0.2.0%2F24",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})?$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList": {
        "verb": "post",
        "operation": "createOrgApiKeyAccessListEntry",
        "tags": [
          "Programmatic API Keys"
        ],
        "description": "Creates the access list entries for the specified organization API key. Resources require all API requests originate from IP addresses on the API access list. To use this resource, the requesting Service Account or API Key must have the Read Write role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for which you want to create a new access list entry.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}/accessList/{ipAddress}": {
        "verb": "get",
        "operation": "getOrgApiKeyAccessListEntry",
        "tags": [
          "Programmatic API Keys"
        ],
        "description": "Returns one access list entry for the specified organization API key. Resources require  all API requests originate from IP addresses on the API access list. To use this resource, the requesting Service Account or API Key must have the Organization Member role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "One IP address or multiple IP addresses represented as one CIDR block to limit  requests to API resources in the specified organization. When adding a CIDR block with a subnet mask, such as  192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.",
            "in": "path",
            "name": "ipAddress",
            "required": true,
            "schema": {
              "example": "192.0.2.0%2F24",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})?$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key for  which you want to return access list entries.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/accessList": {
        "verb": "post",
        "operation": "createOrgServiceAccountAccessList",
        "tags": [
          "Service Accounts"
        ],
        "description": "Add Access List Entries for the specified Service Account for the organization. Resources require all API requests to originate from IP addresses on the API access list.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/accessList/{ipAddress}": {
        "verb": "delete",
        "operation": "deleteOrgServiceAccountAccessListEntry",
        "tags": [
          "Service Accounts"
        ],
        "description": "Removes the specified access list entry from the specified Service Account for the organization. You can't remove the requesting IP address from the access list.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "description": "One IP address or multiple IP addresses represented as one CIDR block. When specifying a CIDR block with a subnet mask, such as 192.0.2.0/24, use the URL-encoded value %2F for the forward slash /.",
            "in": "path",
            "name": "ipAddress",
            "required": true,
            "schema": {
              "example": "192.0.2.0%2F24",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})?$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "status": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/accessList/{entryValue}/status": {
        "verb": "get",
        "operation": "getGroupAccessListStatus",
        "tags": [
          "Project IP Access List"
        ],
        "description": "Returns the status of one project IP access list entry. This resource checks if the provided project IP access list entry applies to all cloud providers serving clusters from the specified project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Network address or cloud provider security construct that identifies which project access list entry to be verified.",
            "in": "path",
            "name": "entryValue",
            "required": true,
            "schema": {
              "example": "IPv4: 192.0.2.0%2F24 or IPv6: 2001:db8:85a3:8d3:1319:8a2e:370:7348 or IPv4 CIDR: 198.51.100.0%2f24 or IPv6 CIDR: 2001:db8::%2f58 or AWS SG: sg-903004f8",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){7}[0-9a-f]{1,4}(%2[fF][0-9]{1,3})?|([0-9a-f]{1,4}\\:){1,6}\\:(%2[fF][0-9]{1,3})|(sg\\-[a-f0-9]{8})?$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/status": {
        "verb": "get",
        "operation": "getGroupClusterStatus",
        "tags": [
          "Clusters"
        ],
        "description": "Returns the status of all changes that you made to the specified cluster in the specified project. Use this resource to check the progress MongoDB Cloud has made in processing your changes. The response does not include the deployment of new dedicated clusters. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "alertConfigs": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/alertConfigs": {
        "verb": "post",
        "operation": "createGroupAlertConfig",
        "tags": [
          "Alert Configurations"
        ],
        "description": "Creates one alert configuration for the specified project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting Service Account or API Key must have the Organization Owner or Project Owner role.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}": {
        "verb": "put",
        "operation": "updateGroupAlertConfig",
        "tags": [
          "Alert Configurations"
        ],
        "description": "Updates one alert configuration in the specified project. Alert configurations define the triggers and notification methods for alerts. To use this resource, the requesting Service Account or API Key must have the Organization Owner or Project Owner role.\n\n**NOTE**: To enable or disable the alert configuration, see Toggle One State of One Alert Configuration in One Project.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration.",
            "in": "path",
            "name": "alertConfigId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/alerts/{alertId}/alertConfigs": {
        "verb": "get",
        "operation": "getGroupAlertAlertConfigs",
        "tags": [
          "Alert Configurations"
        ],
        "description": "Returns all alert configurations set for the specified alert. To use this resource, the requesting Service Account or API Key must have the Project Read Only role. Use the Return All Alerts from One Project endpoint to retrieve all alerts to which the authenticated user has access.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "alerts": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/alertConfigs/{alertConfigId}/alerts": {
        "verb": "get",
        "operation": "getGroupAlertConfigAlerts",
        "tags": [
          "Alerts"
        ],
        "description": "Returns all open alerts that the specified alert configuration triggers. These alert configurations apply to the specified project only. Alert configurations define the triggers and notification methods for alerts. Open alerts have been triggered but remain unacknowledged. To use this resource, the requesting Service Account or API Key must have the Project Read Only role. Use the Return All Alert Configurations for One Project endpoint to retrieve all alert configurations to which the authenticated user has access.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert configuration.",
            "in": "path",
            "name": "alertConfigId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/alerts": {
        "verb": "get",
        "operation": "listGroupAlerts",
        "tags": [
          "Alerts"
        ],
        "description": "Returns all alerts. These alerts apply to all components in one project. You receive an alert when a monitored component meets or exceeds a value you set. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Status of the alerts to return. Omit this parameter to return all alerts in all statuses. TRACKING indicates the alert condition exists but has not persisted for the minimum notification delay. OPEN indicates the alert condition currently exists. CLOSED indicates the alert condition has been resolved.",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "OPEN",
                "TRACKING",
                "CLOSED"
              ],
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/alerts/{alertId}": {
        "verb": "patch",
        "operation": "acknowledgeGroupAlert",
        "tags": [
          "Alerts"
        ],
        "description": "Confirms receipt of one existing alert. This alert applies to any component in one project. Acknowledging an alert prevents successive notifications. You receive an alert when a monitored component meets or exceeds a value you set until you acknowledge the alert. To use this resource, the requesting Service Account or API Key must have the Organization Owner or Project Owner role. Use the Return All Alerts from One Project endpoint to retrieve all alerts to which the  authenticated user has access.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the alert.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "apiKeys": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/apiKeys": {
        "verb": "post",
        "operation": "createGroupApiKey",
        "tags": [
          "Programmatic API Keys"
        ],
        "description": "Creates and assigns the specified organization API key to the specified project. Users with the Project Owner role in the project associated with the API key can use the organization API key to access the resources. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/apiKeys/{apiUserId}": {
        "verb": "post",
        "operation": "addGroupApiKey",
        "tags": [
          "Programmatic API Keys"
        ],
        "description": "Assigns the specified organization API key to the specified project. Users with the Project Owner role in the project associated with the API key can then use the organization API key to access the resources. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key that you want to assign to one project.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/apiKeys": {
        "verb": "post",
        "operation": "createOrgApiKey",
        "tags": [
          "Programmatic API Keys"
        ],
        "description": "Creates one API key for the specified organization. An organization API key grants programmatic access to an organization. You can't use the API key to log into the console. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/apiKeys/{apiUserId}": {
        "verb": "patch",
        "operation": "updateOrgApiKey",
        "tags": [
          "Programmatic API Keys"
        ],
        "description": "Updates one organization API key in the specified organization. The organization API keys  grant programmatic access to an organization. To use this resource, the requesting  API Key must have the Organization Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this organization API key you  want to update.",
            "in": "path",
            "name": "apiUserId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "auditLog": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/auditLog": {
        "verb": "patch",
        "operation": "updateGroupAuditLog",
        "tags": [
          "Auditing"
        ],
        "description": "Updates the auditing configuration for the specified project. The auditing configuration defines the events that MongoDB Cloud records in the audit log. To use this resource, the requesting Service Account or API Key must have the Project Owner role. This feature isn't available for `M0`, `M2`, `M5`, or serverless clusters.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "awsCustomDNS": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/awsCustomDNS": {
        "verb": "patch",
        "operation": "toggleGroupAwsCustomDns",
        "tags": [
          "AWS Clusters DNS"
        ],
        "description": "Enables or disables the custom DNS configuration for AWS clusters in the specified project. Enable custom DNS if you use AWS VPC peering and use your own DNS servers. To use this resource, the requesting Service Account or API Key must have the Project Atlas Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "exportBuckets": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/backup/exportBuckets": {
        "verb": "post",
        "operation": "createGroupBackupExportBucket",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Creates a Snapshot Export Bucket for an AWS S3 Bucket, Azure Blob Storage Container, or Google Cloud Storage Bucket. Once created, an snapshots can be exported to the Export Bucket and its referenced AWS S3 Bucket, Azure Blob Storage Container, or Google Cloud Storage Bucket. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/backup/exportBuckets/{exportBucketId}": {
        "verb": "get",
        "operation": "getGroupBackupExportBucket",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Returns one Export Bucket associated with the specified Project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal character string that identifies the Export Bucket.",
            "in": "path",
            "name": "exportBucketId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "backupCompliancePolicy": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/backupCompliancePolicy": {
        "verb": "put",
        "operation": "updateGroupBackupCompliancePolicy",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Updates the Backup Compliance Policy settings for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Flag that indicates whether to overwrite non complying backup policies with the new data protection settings or not.",
            "in": "query",
            "name": "overwriteBackupPolicies",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "cloudProviderAccess": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/cloudProviderAccess": {
        "verb": "post",
        "operation": "createGroupCloudProviderAccess",
        "tags": [
          "Cloud Provider Access"
        ],
        "description": "Creates one access role for the specified cloud provider. Some MongoDB Cloud features use these cloud provider access roles for authentication. To use this resource, the requesting Service Account or API Key must have the Project Owner role. For the GCP provider, if the project folder is not yet provisioned, Atlas will now create the role asynchronously. An intermediate role with status `IN_PROGRESS` will be returned, and the final service account will be provisioned. Once the GCP project is set up, subsequent requests will create the service account synchronously.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/cloudProviderAccess/{cloudProvider}/{roleId}": {
        "verb": "delete",
        "operation": "deauthorizeGroupCloudProviderAccessRole",
        "tags": [
          "Cloud Provider Access"
        ],
        "description": "Revokes access to the specified project for the specified access role. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cloud provider of the role to deauthorize.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ],
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/cloudProviderAccess/{roleId}": {
        "verb": "patch",
        "operation": "authorizeGroupCloudProviderAccessRole",
        "tags": [
          "Cloud Provider Access"
        ],
        "description": "Grants access to the specified project for the specified access role. To use this resource, the requesting Service Account or API Key must have the Project Owner role. This API endpoint is one step in a procedure to create unified access for MongoDB Cloud services. This is not required for GCP service account access.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the role.",
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "measurements": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/{clusterView}/{databaseName}/{collectionName}/collStats/measurements": {
        "verb": "get",
        "operation": "listGroupClusterCollStatMeasurements",
        "tags": [
          "Collection Level Metrics"
        ],
        "description": "Get a list of the Coll Stats Latency cluster-level measurements for the given namespace.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster to retrieve metrics for.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster topology to retrieve metrics for.",
            "in": "path",
            "name": "clusterView",
            "required": true,
            "schema": {
              "enum": [
                "PRIMARY",
                "SECONDARY",
                "INDIVIDUAL_PROCESS"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "List that contains the metrics that you want to retrieve for the associated data series. If you don't set this parameter, this resource returns data series for all Coll Stats Latency metrics.",
            "explode": true,
            "in": "query",
            "name": "metrics",
            "schema": {
              "items": {
                "description": "Metric requested for the given cluster",
                "enum": [
                  "READS_OPS",
                  "READS_LATENCY",
                  "AVERAGE_READS_LATENCY",
                  "READS_P50_VALUE",
                  "READS_P95_VALUE",
                  "READS_P99_VALUE",
                  "WRITES_OPS",
                  "WRITES_LATENCY",
                  "AVERAGE_WRITES_LATENCY",
                  "WRITES_P50_VALUE",
                  "WRITES_P95_VALUE",
                  "WRITES_P99_VALUE",
                  "COMMANDS_OPS",
                  "COMMANDS_LATENCY",
                  "AVERAGE_COMMANDS_LATENCY",
                  "COMMANDS_P50_VALUE",
                  "COMMANDS_P95_VALUE",
                  "COMMANDS_P99_VALUE",
                  "TOTAL_OPS",
                  "TOTAL_LATENCY",
                  "AVERAGE_TOTAL_OPS_LATENCY",
                  "TOTAL_OPS_P50_VALUE",
                  "TOTAL_OPS_P95_VALUE",
                  "TOTAL_OPS_P99_VALUE"
                ],
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/period"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/{indexName}/measurements": {
        "verb": "get",
        "operation": "getGroupHostFtsMetricIndexMeasurements",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns the Atlas Search metrics data series within the provided time range for one namespace and index name on the specified process. You must have the Project Read Only or higher role to view the Atlas Search metric types.",
        "parameters": [
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/indexName"
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
            "in": "query",
            "name": "metrics",
            "required": true,
            "schema": {
              "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
              "items": {
                "enum": [
                  "INDEX_SIZE_ON_DISK",
                  "NUMBER_OF_DELETES",
                  "NUMBER_OF_ERROR_QUERIES",
                  "NUMBER_OF_GETMORE_COMMANDS",
                  "NUMBER_OF_INDEX_FIELDS",
                  "NUMBER_OF_INSERTS",
                  "NUMBER_OF_SUCCESS_QUERIES",
                  "NUMBER_OF_UPDATES",
                  "REPLICATION_LAG",
                  "TOTAL_NUMBER_OF_QUERIES"
                ],
                "type": "string"
              },
              "maxItems": 10,
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/indexes/{databaseName}/{collectionName}/measurements": {
        "verb": "get",
        "operation": "listGroupHostFtsMetricIndexMeasurements",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns the Atlas Search index metrics within the specified time range for one namespace in the specified process.",
        "parameters": [
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
            "in": "query",
            "name": "metrics",
            "required": true,
            "schema": {
              "description": "List that contains the measurements that MongoDB Atlas reports for the associated data series.",
              "items": {
                "enum": [
                  "INDEX_SIZE_ON_DISK",
                  "NUMBER_OF_DELETES",
                  "NUMBER_OF_ERROR_QUERIES",
                  "NUMBER_OF_GETMORE_COMMANDS",
                  "NUMBER_OF_INDEX_FIELDS",
                  "NUMBER_OF_INSERTS",
                  "NUMBER_OF_SUCCESS_QUERIES",
                  "NUMBER_OF_UPDATES",
                  "REPLICATION_LAG",
                  "TOTAL_NUMBER_OF_QUERIES"
                ],
                "type": "string"
              },
              "maxItems": 10,
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics/measurements": {
        "verb": "get",
        "operation": "listGroupHostFtsMetricMeasurements",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns the Atlas Search hardware and status data series within the provided time range for one process in the specified project. You must have the Project Read Only or higher role to view the Atlas Search metric types.",
        "parameters": [
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "List that contains the metrics that you want MongoDB Atlas to report for the associated data series. If you don't set this parameter, this resource returns all hardware and status metrics for the associated data series.",
            "in": "query",
            "name": "metrics",
            "required": true,
            "schema": {
              "description": "List that contains the metrics that you want MongoDB Atlas to report for the associated data series. If you don't set this parameter, this resource returns all hardware and status metrics for the associated data series.",
              "items": {
                "enum": [
                  "FTS_DISK_USAGE",
                  "FTS_PROCESS_CPU_KERNEL",
                  "FTS_PROCESS_CPU_USER",
                  "FTS_PROCESS_NORMALIZED_CPU_KERNEL",
                  "FTS_PROCESS_NORMALIZED_CPU_USER",
                  "FTS_PROCESS_RESIDENT_MEMORY",
                  "FTS_PROCESS_SHARED_MEMORY",
                  "FTS_PROCESS_VIRTUAL_MEMORY",
                  "JVM_CURRENT_MEMORY",
                  "JVM_MAX_MEMORY",
                  "PAGE_FAULTS"
                ],
                "type": "string"
              },
              "maxItems": 10,
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/{databaseName}/{collectionName}/collStats/measurements": {
        "verb": "get",
        "operation": "listGroupProcessCollStatMeasurements",
        "tags": [
          "Collection Level Metrics"
        ],
        "description": "Get a list of the Coll Stats Latency process-level measurements for the given namespace.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/databaseName"
          },
          {
            "$ref": "#/components/parameters/collectionName"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "List that contains the metrics that you want to retrieve for the associated data series. If you don't set this parameter, this resource returns data series for all Coll Stats Latency metrics.",
            "in": "query",
            "name": "metrics",
            "schema": {
              "items": {
                "description": "Metric requested for the given process",
                "enum": [
                  "READS_OPS",
                  "READS_LATENCY",
                  "AVERAGE_READS_LATENCY",
                  "READS_P50_VALUE",
                  "READS_P95_VALUE",
                  "READS_P99_VALUE",
                  "WRITES_OPS",
                  "WRITES_LATENCY",
                  "AVERAGE_WRITES_LATENCY",
                  "WRITES_P50_VALUE",
                  "WRITES_P95_VALUE",
                  "WRITES_P99_VALUE",
                  "COMMANDS_OPS",
                  "COMMANDS_LATENCY",
                  "AVERAGE_COMMANDS_LATENCY",
                  "COMMANDS_P50_VALUE",
                  "COMMANDS_P95_VALUE",
                  "COMMANDS_P99_VALUE",
                  "TOTAL_OPS",
                  "TOTAL_LATENCY",
                  "AVERAGE_TOTAL_OPS_LATENCY",
                  "TOTAL_OPS_P50_VALUE",
                  "TOTAL_OPS_P95_VALUE",
                  "TOTAL_OPS_P99_VALUE"
                ],
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/period"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/databases/{databaseName}/measurements": {
        "verb": "get",
        "operation": "getGroupProcessDatabaseMeasurements",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns the measurements of one database for the specified host for the specified project. Returns the database's on-disk storage space based on the MongoDB `dbStats` command output. To calculate some metric series, Atlas takes the rate between every two adjacent points. For these metric series, the first data point has a null value because Atlas can't calculate a rate for the first data point given the query time range. Atlas retrieves database metrics every 20 minutes but reduces frequency when necessary to optimize database performance. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for `m`, repeat the `m` parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.",
            "in": "query",
            "name": "m",
            "schema": {
              "items": {
                "description": "One measurement requested for this MongoDB process.",
                "enum": [
                  "DATABASE_AVERAGE_OBJECT_SIZE",
                  "DATABASE_COLLECTION_COUNT",
                  "DATABASE_DATA_SIZE",
                  "DATABASE_STORAGE_SIZE",
                  "DATABASE_INDEX_SIZE",
                  "DATABASE_INDEX_COUNT",
                  "DATABASE_EXTENT_COUNT",
                  "DATABASE_OBJECT_COUNT",
                  "DATABASE_VIEW_COUNT"
                ],
                "type": "string"
              },
              "maxItems": 10,
              "minItems": 1,
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/disks/{partitionName}/measurements": {
        "verb": "get",
        "operation": "getGroupProcessDiskMeasurements",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns the measurements of one disk or partition for the specified host for the specified project. Returned value can be one of the following:\n- Throughput of I/O operations for the disk partition used for the MongoDB process\n- Percentage of time during which requests the partition issued and serviced\n- Latency per operation type of the disk partition used for the MongoDB process\n- Amount of free and used disk space on the disk partition used for the MongoDB process\n\nTo use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for `m`, repeat the `m` parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.",
            "in": "query",
            "name": "m",
            "schema": {
              "items": {
                "description": "One measurement requested for this MongoDB process.",
                "enum": [
                  "DISK_PARTITION_IOPS_READ",
                  "MAX_DISK_PARTITION_IOPS_READ",
                  "DISK_PARTITION_IOPS_WRITE",
                  "MAX_DISK_PARTITION_IOPS_WRITE",
                  "DISK_PARTITION_IOPS_TOTAL",
                  "MAX_DISK_PARTITION_IOPS_TOTAL",
                  "DISK_PARTITION_LATENCY_READ",
                  "MAX_DISK_PARTITION_LATENCY_READ",
                  "DISK_PARTITION_LATENCY_WRITE",
                  "MAX_DISK_PARTITION_LATENCY_WRITE",
                  "DISK_PARTITION_SPACE_FREE",
                  "MAX_DISK_PARTITION_SPACE_FREE",
                  "DISK_PARTITION_SPACE_USED",
                  "MAX_DISK_PARTITION_SPACE_USED",
                  "DISK_PARTITION_SPACE_PERCENT_FREE",
                  "MAX_DISK_PARTITION_SPACE_PERCENT_FREE",
                  "DISK_PARTITION_SPACE_PERCENT_USED",
                  "MAX_DISK_PARTITION_SPACE_PERCENT_USED",
                  "DISK_PARTITION_THROUGHPUT_READ",
                  "DISK_PARTITION_THROUGHPUT_WRITE",
                  "DISK_QUEUE_DEPTH"
                ],
                "type": "string"
              },
              "maxItems": 10,
              "minItems": 1,
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "in": "path",
            "name": "partitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/measurements": {
        "verb": "get",
        "operation": "getGroupProcessMeasurements",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns disk, partition, or host measurements per process for the specified host for the specified project. Returned value can be one of the following:\n- Throughput of I/O operations for the disk partition used for the MongoDB process\n- Percentage of time during which requests the partition issued and serviced\n- Latency per operation type of the disk partition used for the MongoDB process\n- Amount of free and used disk space on the disk partition used for the MongoDB process\n- Measurements for the host, such as CPU usage or number of I/O operations\n\nTo use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "One or more types of measurement to request for this MongoDB process. If omitted, the resource returns all measurements. To specify multiple values for `m`, repeat the `m` parameter for each value. Specify measurements that apply to the specified host. MongoDB Cloud returns an error if you specified any invalid measurements.",
            "in": "query",
            "name": "m",
            "schema": {
              "items": {
                "description": "One measurement requested for this MongoDB process.",
                "enum": [
                  "ASSERT_MSG",
                  "ASSERT_REGULAR",
                  "ASSERT_USER",
                  "ASSERT_WARNING",
                  "BACKGROUND_FLUSH_AVG",
                  "CACHE_BYTES_READ_INTO",
                  "CACHE_BYTES_WRITTEN_FROM",
                  "CACHE_DIRTY_BYTES",
                  "CACHE_USED_BYTES",
                  "CACHE_FILL_RATIO",
                  "DIRTY_FILL_RATIO",
                  "COMPUTED_MEMORY",
                  "CONNECTIONS",
                  "CURSORS_TOTAL_OPEN",
                  "CURSORS_TOTAL_TIMED_OUT",
                  "DB_DATA_SIZE_TOTAL",
                  "DB_STORAGE_TOTAL",
                  "DOCUMENT_METRICS_DELETED",
                  "DOCUMENT_METRICS_INSERTED",
                  "DOCUMENT_METRICS_RETURNED",
                  "DOCUMENT_METRICS_UPDATED",
                  "EXTRA_INFO_PAGE_FAULTS",
                  "FTS_DISK_UTILIZATION",
                  "FTS_MEMORY_MAPPED",
                  "FTS_MEMORY_RESIDENT",
                  "FTS_MEMORY_VIRTUAL",
                  "FTS_PROCESS_CPU_KERNEL",
                  "FTS_PROCESS_CPU_USER",
                  "FTS_PROCESS_NORMALIZED_CPU_KERNEL",
                  "FTS_PROCESS_NORMALIZED_CPU_USER",
                  "GLOBAL_ACCESSES_NOT_IN_MEMORY",
                  "GLOBAL_LOCK_CURRENT_QUEUE_READERS",
                  "GLOBAL_LOCK_CURRENT_QUEUE_TOTAL",
                  "GLOBAL_LOCK_CURRENT_QUEUE_WRITERS",
                  "GLOBAL_PAGE_FAULT_EXCEPTIONS_THROWN",
                  "INDEX_COUNTERS_BTREE_ACCESSES",
                  "INDEX_COUNTERS_BTREE_HITS",
                  "INDEX_COUNTERS_BTREE_MISS_RATIO",
                  "INDEX_COUNTERS_BTREE_MISSES",
                  "JOURNALING_COMMITS_IN_WRITE_LOCK",
                  "JOURNALING_MB",
                  "JOURNALING_WRITE_DATA_FILES_MB",
                  "MAX_PROCESS_CPU_CHILDREN_KERNEL",
                  "MAX_PROCESS_CPU_CHILDREN_USER",
                  "MAX_PROCESS_CPU_KERNEL",
                  "MAX_PROCESS_CPU_USER",
                  "MAX_PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL",
                  "MAX_PROCESS_NORMALIZED_CPU_CHILDREN_USER",
                  "MAX_PROCESS_NORMALIZED_CPU_KERNEL",
                  "MAX_PROCESS_NORMALIZED_CPU_USER",
                  "MAX_SWAP_USAGE_FREE",
                  "MAX_SWAP_USAGE_USED",
                  "MAX_SYSTEM_CPU_GUEST",
                  "MAX_SYSTEM_CPU_IOWAIT",
                  "MAX_SYSTEM_CPU_IRQ",
                  "MAX_SYSTEM_CPU_KERNEL",
                  "MAX_SYSTEM_CPU_SOFTIRQ",
                  "MAX_SYSTEM_CPU_STEAL",
                  "MAX_SYSTEM_CPU_USER",
                  "MAX_SYSTEM_MEMORY_AVAILABLE",
                  "MAX_SYSTEM_MEMORY_FREE",
                  "MAX_SYSTEM_MEMORY_USED",
                  "MAX_SYSTEM_NETWORK_IN",
                  "MAX_SYSTEM_NETWORK_OUT",
                  "MAX_SYSTEM_NORMALIZED_CPU_GUEST",
                  "MAX_SYSTEM_NORMALIZED_CPU_IOWAIT",
                  "MAX_SYSTEM_NORMALIZED_CPU_IRQ",
                  "MAX_SYSTEM_NORMALIZED_CPU_KERNEL",
                  "MAX_SYSTEM_NORMALIZED_CPU_NICE",
                  "MAX_SYSTEM_NORMALIZED_CPU_SOFTIRQ",
                  "MAX_SYSTEM_NORMALIZED_CPU_STEAL",
                  "MAX_SYSTEM_NORMALIZED_CPU_USER",
                  "MEMORY_MAPPED",
                  "MEMORY_RESIDENT",
                  "MEMORY_VIRTUAL",
                  "NETWORK_BYTES_IN",
                  "NETWORK_BYTES_OUT",
                  "NETWORK_NUM_REQUESTS",
                  "OP_EXECUTION_TIME_COMMANDS",
                  "OP_EXECUTION_TIME_READS",
                  "OP_EXECUTION_TIME_WRITES",
                  "OPCOUNTER_CMD",
                  "OPCOUNTER_DELETE",
                  "OPCOUNTER_TTL_DELETED",
                  "OPCOUNTER_GETMORE",
                  "OPCOUNTER_INSERT",
                  "OPCOUNTER_QUERY",
                  "OPCOUNTER_REPL_CMD",
                  "OPCOUNTER_REPL_DELETE",
                  "OPCOUNTER_REPL_INSERT",
                  "OPCOUNTER_REPL_UPDATE",
                  "OPCOUNTER_UPDATE",
                  "OPERATIONS_SCAN_AND_ORDER",
                  "OPERATIONS_QUERIES_KILLED",
                  "OPLOG_MASTER_LAG_TIME_DIFF",
                  "OPLOG_MASTER_TIME",
                  "OPLOG_RATE_GB_PER_HOUR",
                  "OPLOG_SLAVE_LAG_MASTER_TIME",
                  "OPLOG_REPLICATION_LAG",
                  "PROCESS_CPU_CHILDREN_KERNEL",
                  "PROCESS_CPU_CHILDREN_USER",
                  "PROCESS_CPU_KERNEL",
                  "PROCESS_CPU_USER",
                  "PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL",
                  "PROCESS_NORMALIZED_CPU_CHILDREN_USER",
                  "PROCESS_NORMALIZED_CPU_KERNEL",
                  "PROCESS_NORMALIZED_CPU_USER",
                  "QUERY_EXECUTOR_SCANNED",
                  "QUERY_EXECUTOR_SCANNED_OBJECTS",
                  "QUERY_TARGETING_SCANNED_OBJECTS_PER_RETURNED",
                  "QUERY_TARGETING_SCANNED_PER_RETURNED",
                  "RESTARTS_IN_LAST_HOUR",
                  "SWAP_USAGE_FREE",
                  "SWAP_USAGE_USED",
                  "SYSTEM_CPU_GUEST",
                  "SYSTEM_CPU_IOWAIT",
                  "SYSTEM_CPU_IRQ",
                  "SYSTEM_CPU_KERNEL",
                  "SYSTEM_CPU_NICE",
                  "SYSTEM_CPU_SOFTIRQ",
                  "SYSTEM_CPU_STEAL",
                  "SYSTEM_CPU_USER",
                  "SYSTEM_MEMORY_AVAILABLE",
                  "SYSTEM_MEMORY_FREE",
                  "SYSTEM_MEMORY_USED",
                  "SYSTEM_NETWORK_IN",
                  "SYSTEM_NETWORK_OUT",
                  "SYSTEM_NORMALIZED_CPU_GUEST",
                  "SYSTEM_NORMALIZED_CPU_IOWAIT",
                  "SYSTEM_NORMALIZED_CPU_IRQ",
                  "SYSTEM_NORMALIZED_CPU_KERNEL",
                  "SYSTEM_NORMALIZED_CPU_NICE",
                  "SYSTEM_NORMALIZED_CPU_SOFTIRQ",
                  "SYSTEM_NORMALIZED_CPU_STEAL",
                  "SYSTEM_NORMALIZED_CPU_USER",
                  "TICKETS_AVAILABLE_READS",
                  "TICKETS_AVAILABLE_WRITE",
                  "OPERATION_THROTTLING_REJECTED_OPERATIONS",
                  "QUERY_SPILL_TO_DISK_DURING_SORT"
                ],
                "type": "string"
              },
              "maxItems": 10,
              "minItems": 1,
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "$ref": "#/components/parameters/period"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/granularity"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          }
        ]
      }
    }
  },
  "namespaces": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/{clusterView}/collStats/namespaces": {
        "verb": "get",
        "operation": "getGroupClusterCollStatNamespaces",
        "tags": [
          "Collection Level Metrics"
        ],
        "description": "Return the subset of namespaces from the given cluster sorted by highest total execution time (descending) within the given time window.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster to pin namespaces to.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster topology to retrieve metrics for.",
            "in": "path",
            "name": "clusterView",
            "required": true,
            "schema": {
              "enum": [
                "PRIMARY",
                "SECONDARY",
                "INDIVIDUAL_PROCESS"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/period"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/collStats/namespaces": {
        "verb": "get",
        "operation": "getGroupProcessCollStatNamespaces",
        "tags": [
          "Collection Level Metrics"
        ],
        "description": "Return the subset of namespaces from the given process ranked by highest total execution time (descending) within the given time window.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/end"
          },
          {
            "$ref": "#/components/parameters/period"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/namespaces": {
        "verb": "get",
        "operation": "listGroupProcessPerformanceAdvisorNamespaces",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Returns up to 20 namespaces for collections experiencing slow queries on the specified host. If you specify a secondary member of a replica set that hasn't received any database read operations, the endpoint doesn't return any namespaces. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.\n\n- If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.\n- If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "duration",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          },
          {
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "since",
            "schema": {
              "format": "int64",
              "minimum": 1199145600000.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          }
        ]
      }
    }
  },
  "autoScalingConfiguration": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/autoScalingConfiguration": {
        "verb": "get",
        "operation": "autoGroupClusterScalingConfiguration",
        "tags": [
          "Clusters"
        ],
        "description": "Returns the internal configuration of AutoScaling for sharded clusters. This endpoint can be used for diagnostic purposes to ensure that sharded clusters updated from older APIs have gained support for AutoScaling each shard independently.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "exports": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/exports": {
        "verb": "post",
        "operation": "createGroupClusterBackupExport",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Exports one backup Snapshot for dedicated Atlas cluster using Cloud Backups to an Export Bucket. To use this resource, the requesting Service Account or API Key must have the Project Atlas Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/exports/{exportId}": {
        "verb": "get",
        "operation": "getGroupClusterBackupExport",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Returns one Cloud Backup Snapshot Export Job associated with the specified Atlas cluster. To use this resource, the requesting Service Account or API Key must have the Project Atlas Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal character string that identifies the Export Job.",
            "in": "path",
            "name": "exportId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "restoreJobs": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs": {
        "verb": "post",
        "operation": "createGroupClusterBackupRestoreJob",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Restores one snapshot of one cluster from the specified project. Atlas takes on-demand snapshots immediately and scheduled snapshots at regular intervals. If an on-demand snapshot with a status of **queued** or **inProgress** exists, before taking another snapshot, wait until Atlas completes completes processing the previously taken on-demand snapshot.\n\n To use this resource, the requesting Service Account or API Key must have the Project Backup Manager role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/restoreJobs/{restoreJobId}": {
        "verb": "get",
        "operation": "getGroupClusterBackupRestoreJob",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Returns one cloud backup restore job for one cluster from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Backup Manager role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster with the restore jobs you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "in": "path",
            "name": "restoreJobId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restoreJobs": {
        "verb": "post",
        "operation": "createGroupClusterRestoreJob",
        "tags": [
          "Legacy Backup"
        ],
        "description": "Restores one legacy backup for one cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation. This endpoint doesn't support creating checkpoint restore jobs for sharded clusters, or creating restore jobs for queryable backup snapshots. If you create an automated restore job by specifying `delivery.methodName` of `AUTOMATED_RESTORE` in your request body, MongoDB Cloud removes all existing data on the target cluster prior to the restore.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restoreJobs/{jobId}": {
        "verb": "get",
        "operation": "getGroupClusterRestoreJob",
        "tags": [
          "Legacy Backup"
        ],
        "description": "Returns one legacy backup restore job for one cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\n Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/restoreJobs": {
        "verb": "post",
        "operation": "createGroupFlexClusterBackupRestoreJob",
        "tags": [
          "Flex Restore Jobs"
        ],
        "description": "Restores one snapshot of one flex cluster from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the flex cluster whose snapshot you want to restore.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/restoreJobs/{restoreJobId}": {
        "verb": "get",
        "operation": "getGroupFlexClusterBackupRestoreJob",
        "tags": [
          "Flex Restore Jobs"
        ],
        "description": "Returns one restore job for one flex cluster from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the flex cluster.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "in": "path",
            "name": "restoreJobId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs": {
        "verb": "post",
        "operation": "createGroupServerlessBackupRestoreJob",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Restores one snapshot of one serverless instance from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\nThis API can also be used on Flex clusters that were created with the [createServerlessInstance](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Serverless-Instances/operation/createServerlessInstance) endpoint or Flex clusters that were migrated from Serverless instances. This endpoint will be sunset in January 2026. Please use the createFlexBackupRestoreJob endpoint instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the serverless instance whose snapshot you want to restore.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/restoreJobs/{restoreJobId}": {
        "verb": "get",
        "operation": "getGroupServerlessBackupRestoreJob",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Returns one restore job for one serverless instance from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\nThis API can also be used on Flex clusters that were created with the [createServerlessInstance](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Serverless-Instances/operation/createServerlessInstance) endpoint or Flex clusters that were migrated from Serverless instances. This endpoint will be sunset in January 2026. Please use the getFlexBackupRestoreJob endpoint instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "in": "path",
            "name": "restoreJobId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "schedule": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/schedule": {
        "verb": "patch",
        "operation": "updateGroupClusterBackupSchedule",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Updates the cloud backup schedule for one cluster within the specified project. This schedule defines when MongoDB Cloud takes scheduled snapshots and how long it stores those snapshots. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "snapshots": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots": {
        "verb": "post",
        "operation": "takeGroupClusterBackupSnapshots",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Takes one on-demand snapshot for the specified cluster. Atlas takes on-demand snapshots immediately and scheduled snapshots at regular intervals. If an on-demand snapshot with a status of **queued** or **inProgress** exists, before taking another snapshot, wait until Atlas completes completes processing the previously taken on-demand snapshot.\n\n To use this resource, the requesting Service Account or API Key must have the Project Backup Manager role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/{snapshotId}": {
        "verb": "patch",
        "operation": "updateGroupClusterBackupSnapshot",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Changes the expiration date for one cloud backup snapshot for one cluster in the specified project, the requesting Service Account or API Key must have the Project Backup Manager role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots": {
        "verb": "get",
        "operation": "listGroupClusterBackupTenantSnapshots",
        "tags": [
          "Shared-Tier Snapshots"
        ],
        "description": "Returns details for all snapshots for the specified shared cluster. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\nThis API also works for Flex clusters that were created using the [createCluster](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/createCluster) endpoint or former M2/M5 clusters that have been migrated to Flex clusters, until January 2026, after which this endpoint will be sunset. Please use the listFlexBackups endpoint instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/snapshots/{snapshotId}": {
        "verb": "get",
        "operation": "getGroupClusterBackupTenantSnapshot",
        "tags": [
          "Shared-Tier Snapshots"
        ],
        "description": "Returns details for one snapshot for the specified shared cluster. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\nThis endpoint can also be used on Flex clusters that were created using the [createCluster](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/createCluster) endpoint or former M2/M5 clusters that have been migrated to Flex clusters until January 2026, after which this endpoint will be sunset. Please use the getFlexBackup endpoint instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots": {
        "verb": "get",
        "operation": "listGroupClusterSnapshots",
        "tags": [
          "Legacy Backup"
        ],
        "description": "Returns all legacy backup snapshots for one cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that specifies whether to return only completed, incomplete, or all snapshots. By default, MongoDB Cloud only returns completed snapshots.",
            "in": "query",
            "name": "completed",
            "schema": {
              "default": "true",
              "enum": [
                "all",
                "true",
                "false"
              ],
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshots/{snapshotId}": {
        "verb": "patch",
        "operation": "updateGroupClusterSnapshot",
        "tags": [
          "Legacy Backup"
        ],
        "description": "Changes the expiration date for one legacy backup snapshot for one cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role. Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/snapshots": {
        "verb": "get",
        "operation": "listGroupFlexClusterBackupSnapshots",
        "tags": [
          "Flex Snapshots"
        ],
        "description": "Returns all snapshots of one flex cluster from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "description": "Human-readable label that identifies the flex cluster.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/snapshots/{snapshotId}": {
        "verb": "get",
        "operation": "getGroupFlexClusterBackupSnapshot",
        "tags": [
          "Flex Snapshots"
        ],
        "description": "Returns one snapshot of one flex cluster from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the flex cluster.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/snapshots": {
        "verb": "get",
        "operation": "listGroupServerlessBackupSnapshots",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Returns all snapshots of one serverless instance from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\nThis API can also be used on Flex clusters that were created with the [createServerlessInstance](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Serverless-Instances/operation/createServerlessInstance) endpoint or Flex clusters that were migrated from Serverless instances. This endpoint will be sunset in January 2026. Please use the listFlexBackups endpoint instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/backup/snapshots/{snapshotId}": {
        "verb": "get",
        "operation": "getGroupServerlessBackupSnapshot",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Returns one snapshot of one serverless instance from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\nThis endpoint can also be used on Flex clusters that were created with the [createServerlessInstance](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Serverless-Instances/operation/createServerlessInstance) API or Flex clusters that were migrated from Serverless instances. This endpoint will be sunset in January 2026. Please use the getFlexBackup endpoint instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "shardedCluster": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedCluster/{snapshotId}": {
        "verb": "get",
        "operation": "getGroupClusterBackupSnapshotShardedCluster",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Returns one snapshot of one sharded cluster from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role or Project Backup Manager role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the desired snapshot.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "shardedClusters": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/snapshots/shardedClusters": {
        "verb": "get",
        "operation": "listGroupClusterBackupSnapshotShardedClusters",
        "tags": [
          "Cloud Backups"
        ],
        "description": "Returns all snapshots of one sharded cluster from the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role or Project Backup Manager role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "download": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/download": {
        "verb": "post",
        "operation": "downloadGroupClusterBackupTenant",
        "tags": [
          "Shared-Tier Snapshots"
        ],
        "description": "Requests one snapshot for the specified shared cluster. This resource returns a `snapshotURL` that you can use to download the snapshot. This `snapshotURL` remains active for four hours after you make the request. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\nThis endpoint can also be used on Flex clusters that were created using the [createCluster](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/createCluster) endpoint or former M2/M5 clusters that have been migrated to Flex clusters until January 2026, after which this endpoint will be sunset. Please use the downloadFlexBackup endpoint instead.",
        "parameters": [
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/flexClusters/{name}/backup/download": {
        "verb": "post",
        "operation": "downloadGroupFlexClusterBackup",
        "tags": [
          "Flex Snapshots"
        ],
        "description": "Requests one snapshot for the specified flex cluster. This resource returns a `snapshotURL` that you can use to download the snapshot. This `snapshotURL` remains active for four hours after you make the request. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "description": "Human-readable label that identifies the flex cluster.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "restore": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restore": {
        "verb": "post",
        "operation": "createGroupClusterBackupTenantRestore",
        "tags": [
          "Shared-Tier Restore Jobs"
        ],
        "description": "Restores the specified M2 or M5 cluster. MongoDB Cloud limits which clusters can be the target clusters of a restore. The target cluster can't use encryption at rest, run a major release MongoDB version different than the snapshot, or receive client requests during restores. MongoDB Cloud deletes all existing data on the target cluster prior to the restore operation. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\nThis endpoint can also be used on Flex clusters that were created using the [createCluster](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/createCluster) endpoint or former M2/M5 clusters that have been migrated to Flex clusters until January 2026, after which this endpoint will be sunset. Please use the createFlexBackupRestoreJob endpoint instead.",
        "parameters": [
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "restores": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores": {
        "verb": "get",
        "operation": "listGroupClusterBackupTenantRestores",
        "tags": [
          "Shared-Tier Restore Jobs"
        ],
        "description": "Returns all restore jobs for the specified M2 or M5 cluster. Restore jobs restore a cluster using a snapshot. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\nThis endpoint can also be used on Flex clusters that were created using the [createCluster](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/createCluster) endpoint or former M2/M5 clusters that have been migrated to Flex clusters until January 2026, after which this endpoint will be sunset. Please use the listFlexBackupRestoreJobs endpoint instead.",
        "parameters": [
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backup/tenant/restores/{restoreId}": {
        "verb": "get",
        "operation": "getGroupClusterBackupTenantRestore",
        "tags": [
          "Shared-Tier Restore Jobs"
        ],
        "description": "Returns the specified restore job for the specified M2 or M5 cluster. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\nThis endpoint can also be used on Flex clusters that were created using the [createCluster](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/createCluster) endpoint or former M2/M5 clusters that have been migrated to Flex clusters until January 2026, after which this endpoint will be sunset. Please use the getFlexBackupRestoreJob endpoint instead.",
        "parameters": [
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the restore job to return.",
            "in": "path",
            "name": "restoreId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "backupCheckpoints": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backupCheckpoints": {
        "verb": "get",
        "operation": "listGroupClusterBackupCheckpoints",
        "tags": [
          "Legacy Backup"
        ],
        "description": "Returns all legacy backup checkpoints for one cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the checkpoints that you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/backupCheckpoints/{checkpointId}": {
        "verb": "get",
        "operation": "getGroupClusterBackupCheckpoint",
        "tags": [
          "Legacy Backup"
        ],
        "description": "Returns one legacy backup checkpoint for one cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the checkpoint.",
            "in": "path",
            "name": "checkpointId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the checkpoints that you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "pinned": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/pinned": {
        "verb": "put",
        "operation": "pinGroupClusterCollStatPinnedNamespaces",
        "tags": [
          "Collection Level Metrics"
        ],
        "description": "Pin provided list of namespaces for collection-level latency metrics collection for the given Group and Cluster. This initializes a pinned namespaces list or replaces any existing pinned namespaces list for the Group and Cluster.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Human-readable label that identifies the cluster to pin namespaces to.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "unpin": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/collStats/unpin": {
        "verb": "patch",
        "operation": "unpinGroupClusterCollStatUnpinNamespaces",
        "tags": [
          "Collection Level Metrics"
        ],
        "description": "Unpin provided list of namespaces for collection-level latency metrics collection for the given Group and Cluster.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Human-readable label that identifies the cluster to unpin namespaces from.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "indexes": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes": {
        "verb": "post",
        "operation": "createGroupClusterFtsIndex",
        "tags": [
          "Atlas Search"
        ],
        "description": "Creates one Atlas Search index on the specified collection. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. Only clusters running MongoDB v4.2 or later can use Atlas Search. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection on which to create an Atlas Search index.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{databaseName}/{collectionName}": {
        "verb": "get",
        "operation": "listGroupClusterFtsIndex",
        "tags": [
          "Atlas Search"
        ],
        "description": "Returns all Atlas Search indexes on the specified collection. Atlas Search indexes contain the indexed fields and the analyzers used to create the indexes. To use this resource, the requesting Service Account or API Key must have the Project Data Access Read Write role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Name of the collection that contains one or more Atlas Search indexes.",
            "in": "path",
            "name": "collectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/fts/indexes/{indexId}": {
        "verb": "patch",
        "operation": "updateGroupClusterFtsIndex",
        "tags": [
          "Atlas Search"
        ],
        "description": "Updates one Atlas Search index that you identified with its unique ID. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection whose Atlas Search index to update.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the Atlas Search [index](https://dochub.mongodb.org/core/index-definitions-fts). Use the [Get All Atlas Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Atlas Search indexes.",
            "in": "path",
            "name": "indexId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes": {
        "verb": "post",
        "operation": "createGroupClusterSearchIndex",
        "tags": [
          "Atlas Search"
        ],
        "description": "Creates one Atlas Search index on the specified collection. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. Only clusters running MongoDB v4.2 or later can use Atlas Search. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection on which to create an Atlas Search index.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{databaseName}/{collectionName}": {
        "verb": "get",
        "operation": "listGroupClusterSearchIndex",
        "tags": [
          "Atlas Search"
        ],
        "description": "Returns all Atlas Search indexes on the specified collection. Atlas Search indexes contain the indexed fields and the analyzers used to create the indexes. To use this resource, the requesting Service Account or API Key must have the Project Data Access Read Write role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Name of the collection that contains one or more Atlas Search indexes.",
            "in": "path",
            "name": "collectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{databaseName}/{collectionName}/{indexName}": {
        "verb": "patch",
        "operation": "updateGroupClusterSearchIndexByName",
        "tags": [
          "Atlas Search"
        ],
        "description": "Updates one Atlas Search index that you identified with its database, collection name, and index name. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection whose Atlas Search index you want to update.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Name of the collection that contains one or more Atlas Search indexes.",
            "in": "path",
            "name": "collectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Label that identifies the database that contains the collection with one or more Atlas Search indexes.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Atlas Search index to update.",
            "in": "path",
            "name": "indexName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/indexes/{indexId}": {
        "verb": "patch",
        "operation": "updateGroupClusterSearchIndex",
        "tags": [
          "Atlas Search"
        ],
        "description": "Updates one Atlas Search index that you identified with its unique ID. Atlas Search indexes define the fields on which to create the index and the analyzers to use when creating the index. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the cluster that contains the collection whose Atlas Search index you want to update.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the Atlas Search [index](https://dochub.mongodb.org/core/index-definitions-fts). Use the [Get All Atlas Search Indexes for a Collection API](https://docs.atlas.mongodb.com/reference/api/fts-indexes-get-all/) endpoint to find the IDs of all Atlas Search indexes.",
            "in": "path",
            "name": "indexId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          }
        ]
      }
    }
  },
  "globalWrites": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites": {
        "verb": "get",
        "operation": "getGroupClusterGlobalWrites",
        "tags": [
          "Global Clusters"
        ],
        "description": "Returns one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "customZoneMapping": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/customZoneMapping": {
        "verb": "post",
        "operation": "createGroupClusterGlobalWriteCustomZoneMapping",
        "tags": [
          "Global Clusters"
        ],
        "description": "Creates one custom zone mapping for the specified global cluster. A custom zone mapping matches one ISO 3166-2 location code to a zone in your global cluster. By default, MongoDB Cloud maps each location code to the closest geographical zone. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "managedNamespaces": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/globalWrites/managedNamespaces": {
        "verb": "post",
        "operation": "createGroupClusterGlobalWriteManagedNamespace",
        "tags": [
          "Global Clusters"
        ],
        "description": "Creates one managed namespace within the specified global cluster. A managed namespace identifies a collection using the database name, the dot separator, and the collection name. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "index": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/index": {
        "verb": "post",
        "operation": "createGroupClusterIndexRollingIndex",
        "tags": [
          "Rolling Index"
        ],
        "description": "Creates an index on the cluster identified by its name in a rolling manner. Creating the index in this way allows index builds on one replica set member as a standalone at a time, starting with the secondary members. Creating indexes in this way requires at least one replica set election. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster on which MongoDB Cloud creates an index.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "onlineArchives": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives": {
        "verb": "post",
        "operation": "createGroupClusterOnlineArchive",
        "tags": [
          "Online Archive"
        ],
        "description": "Creates one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to create one online archive.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/{archiveId}": {
        "verb": "patch",
        "operation": "updateGroupClusterOnlineArchive",
        "tags": [
          "Online Archive"
        ],
        "description": "Updates, pauses, or resumes one online archive. This archive stores data from one cluster within one project. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the online archive to update.",
            "in": "path",
            "name": "archiveId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the specified collection from which Application created the online archive.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "queryLogs.gz": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/onlineArchives/queryLogs.gz": {
        "verb": "get",
        "operation": "downloadGroupClusterOnlineArchiveQueryLogs",
        "tags": [
          "Online Archive"
        ],
        "description": "Downloads query logs for the specified online archive. To use this resource, the requesting Service Account or API Key must have the Project Data Access Read Only or higher role. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: \"Accept: application/vnd.atlas.YYYY-MM-DD+gzip\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Date and time that specifies the starting point for the range of log messages to return. This resource expresses this value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "startDate",
            "schema": {
              "example": 1636481348.0,
              "format": "int64",
              "minimum": 1199145600.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          },
          {
            "description": "Date and time that specifies the end point for the range of log messages to return. This resource expresses this value in the number of seconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).",
            "in": "query",
            "name": "endDate",
            "schema": {
              "example": 1636481348.0,
              "format": "int64",
              "minimum": 1199145600.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          },
          {
            "description": "Human-readable label that identifies the cluster that contains the collection for which you want to return the query logs from one online archive.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Flag that indicates whether to download logs for queries against your online archive only or both your online archive and cluster.",
            "in": "query",
            "name": "archiveOnly",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/queryLogs.gz": {
        "verb": "get",
        "operation": "downloadGroupDataFederationQueryLogs",
        "tags": [
          "Data Federation"
        ],
        "description": "Downloads the query logs for the specified federated database instance. To use this resource, the requesting Service Account or API Key must have the Project Owner or Project Data Access Read Write roles. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: \"Accept: application/vnd.atlas.YYYY-MM-DD+gzip\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Timestamp that specifies the end point for the range of log messages to download.  MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "example": 1636481348.0,
              "format": "int64",
              "pattern": "1199145600",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp that specifies the starting point for the range of log messages to download. MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "example": 1636466948.0,
              "format": "int64",
              "pattern": "1199145600",
              "type": "integer"
            }
          },
          {
            "description": "Human-readable label that identifies the federated database instance for which you want to download query logs.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "outageSimulation": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/outageSimulation": {
        "verb": "post",
        "operation": "startGroupClusterOutageSimulation",
        "tags": [
          "Cluster Outage Simulation"
        ],
        "description": "Starts a cluster outage simulation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster to undergo an outage simulation.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "dropIndexSuggestions": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/performanceAdvisor/dropIndexSuggestions": {
        "verb": "get",
        "operation": "listGroupClusterPerformanceAdvisorDropIndexSuggestions",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Returns the indexes that the Performance Advisor suggests to drop. The Performance Advisor suggests dropping unused, redundant, and hidden indexes to improve write performance and increase storage space. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "schemaAdvice": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/performanceAdvisor/schemaAdvice": {
        "verb": "get",
        "operation": "listGroupClusterPerformanceAdvisorSchemaAdvice",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Returns the schema suggestions that the Performance Advisor detects. The Performance Advisor provides holistic schema recommendations for your cluster by sampling documents in your most active collections and collections with slow-running queries. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "suggestedIndexes": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/performanceAdvisor/suggestedIndexes": {
        "verb": "get",
        "operation": "listGroupClusterPerformanceAdvisorSuggestedIndexes",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Returns the indexes that the Performance Advisor suggests. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "ProcessIds from which to retrieve suggested indexes. A processId is a combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests. To include multiple processIds, pass the parameter multiple times delimited with an ampersand (`&`) between each processId.",
            "in": "query",
            "name": "processIds",
            "schema": {
              "items": {
                "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Namespaces from which to retrieve suggested indexes. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **until** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **since** nor the **until** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "since",
            "schema": {
              "format": "int64",
              "minimum": 1199145600000.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          },
          {
            "description": "Date and time up until which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you specify the **until** parameter, you must specify the **since** parameter.\n- If you specify neither the **since** nor the **until** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "until",
            "schema": {
              "format": "int64",
              "minimum": 1199145600000.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/suggestedIndexes": {
        "verb": "get",
        "operation": "listGroupProcessPerformanceAdvisorSuggestedIndexes",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Returns the indexes that the Performance Advisor suggests. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Length of time expressed during which the query finds suggested indexes among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.\n\n- If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.\n- If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "duration",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Namespaces from which to retrieve suggested indexes. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Maximum number of example queries that benefit from the suggested index.",
            "in": "query",
            "name": "nExamples",
            "schema": {
              "default": 5,
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Number that indicates the maximum indexes to suggest.",
            "in": "query",
            "name": "nIndexes",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          },
          {
            "description": "Date and time from which the query retrieves the suggested indexes. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "since",
            "schema": {
              "format": "int64",
              "minimum": 1199145600000.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          }
        ]
      }
    }
  },
  "processArgs": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/processArgs": {
        "verb": "patch",
        "operation": "updateGroupClusterProcessArgs",
        "tags": [
          "Clusters"
        ],
        "description": "Updates the advanced configuration details for one cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. Advanced configuration details include the read/write concern, index and oplog limits, and other database settings. To use this resource, the requesting Service Account or API Key must have the Project Cluster Manager role. This feature isn't available for `M0` free clusters, `M2` and `M5` shared-tier clusters, flex clusters, or serverless clusters.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "details": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/queryShapeInsights/{queryShapeHash}/details": {
        "verb": "get",
        "operation": "getGroupClusterQueryShapeInsightDetails",
        "tags": [
          "Query Shape Insights"
        ],
        "description": "Returns the metadata and statistics summary for a given query shape hash.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Date and time from which to retrieve query shape statistics. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **until** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **since** nor the **until** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "since",
            "schema": {
              "format": "int64",
              "minimum": 1199145600000.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          },
          {
            "description": "Date and time up until which to retrieve query shape statistics. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you specify the **until** parameter, you must specify the **since** parameter.\n- If you specify neither the **since** nor the **until** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "until",
            "schema": {
              "format": "int64",
              "minimum": 1199145600000.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          },
          {
            "description": "ProcessIds from which to retrieve query shape statistics. A processId is a combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests. To include multiple processIds, pass the parameter multiple times delimited with an ampersand (`&`) between each processId.",
            "in": "query",
            "name": "processIds",
            "schema": {
              "items": {
                "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
                "type": "string"
              },
              "maxItems": 10,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "A SHA256 hash of a query shape, output by MongoDB commands like $queryStats and $explain or slow query logs.",
            "in": "path",
            "name": "queryShapeHash",
            "required": true,
            "schema": {
              "pattern": "^([a-fA-F0-9]{64})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "summaries": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/queryShapeInsights/summaries": {
        "verb": "get",
        "operation": "listGroupClusterQueryShapeInsightSummaries",
        "tags": [
          "Query Shape Insights"
        ],
        "description": "Returns a list of query shape statistics summaries for a given cluster. Query shape statistics provide performance insights about MongoDB queries, helping users identify problematic query patterns and potential optimizations.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Date and time from which to retrieve query shape statistics. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **until** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **since** nor the **until** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "since",
            "schema": {
              "format": "int64",
              "minimum": 1199145600000.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          },
          {
            "description": "Date and time up until which to retrieve query shape statistics. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you specify the **until** parameter, you must specify the **since** parameter.\n- If you specify neither the **since** nor the **until** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "until",
            "schema": {
              "format": "int64",
              "minimum": 1199145600000.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          },
          {
            "description": "ProcessIds from which to retrieve query shape statistics. A processId is a combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests. To include multiple processIds, pass the parameter multiple times delimited with an ampersand (`&`) between each processId.",
            "in": "query",
            "name": "processIds",
            "schema": {
              "items": {
                "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
                "type": "string"
              },
              "maxItems": 10,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Namespaces from which to retrieve query shape statistics. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 10,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Retrieve query shape statistics matching specified MongoDB commands. To include multiple commands, pass the parameter multiple times delimited with an ampersand (`&`) between each command. The currently supported parameters are find, distinct, and aggregate. Omit this parameter to return results for all supported commands.",
            "in": "query",
            "name": "commands",
            "schema": {
              "description": "MongoDB commands from which to retrieve query statistics. To include multiple commands, pass the parameter multiple times delimited with an ampersand (`&`) between each command. Omit this parameter to return results for all supported commands.",
              "items": {
                "enum": [
                  "find",
                  "distinct",
                  "aggregate"
                ],
                "type": "string"
              },
              "maxItems": 3,
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "description": "Maximum number of query statistic summaries to return.",
            "in": "query",
            "name": "nSummaries",
            "schema": {
              "default": 100,
              "format": "int64",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Query shape statistics data series to retrieve. A series represents a specific metric about query execution. To include multiple series, pass the parameter multiple times delimited with an ampersand (`&`) between each series. Omit this parameter to return results for all available series.",
            "in": "query",
            "name": "series",
            "schema": {
              "description": "Query shape statistics data series to retrieve. A series represents a specific metric about query execution. To include multiple series, pass the parameter multiple times delimited with an ampersand (`&`) between each series. Omit this parameter to return results for all available series.",
              "items": {
                "enum": [
                  "TOTAL_EXECUTION_TIME",
                  "AVG_EXECUTION_TIME",
                  "EXECUTION_COUNT",
                  "KEYS_EXAMINED",
                  "DOCS_EXAMINED",
                  "DOCS_RETURNED",
                  "TOTAL_TIME_TO_RESPONSE",
                  "BYTES_READ",
                  "KEYS_EXAMINED_RETURNED",
                  "DOCS_EXAMINED_RETURNED",
                  "LAST_EXECUTION_TIME",
                  "P50_EXECUTION_TIME",
                  "P90_EXECUTION_TIME",
                  "P99_EXECUTION_TIME"
                ],
                "type": "string"
              },
              "maxItems": 14,
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "description": "A list of SHA256 hashes of desired query shapes, output by MongoDB commands like $queryStats and $explain or slow query logs. To include multiple series, pass the parameter multiple times delimited with an ampersand (`&`) between each series. Omit this parameter to return results for all available series.",
            "in": "query",
            "name": "queryShapeHashes",
            "schema": {
              "description": "A list of SHA256 hashes of desired query shapes, output by MongoDB commands like $queryStats and $explain or slow query logs. To include multiple series, pass the parameter multiple times delimited with an ampersand (`&`) between each series. Omit this parameter to return results for all available series.",
              "items": {
                "pattern": "^([a-fA-F0-9]{64})$",
                "type": "string"
              },
              "maxItems": 10,
              "type": "array"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "restartPrimaries": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/restartPrimaries": {
        "verb": "post",
        "operation": "restartGroupClusterPrimaries",
        "tags": [
          "Clusters"
        ],
        "description": "Starts a failover test for the specified cluster in the specified project. Clusters contain a group of hosts that maintain the same data set. A failover test checks how MongoDB Cloud handles the failure of the cluster's primary node. During the test, MongoDB Cloud shuts down the primary node and elects a new primary. To use this resource, the requesting Service Account or API Key must have the Project Cluster Manager role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "deployment": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/search/deployment": {
        "verb": "post",
        "operation": "createGroupClusterSearchDeployment",
        "tags": [
          "Atlas Search"
        ],
        "description": "Creates Search Nodes for the specified cluster.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Label that identifies the cluster to create Search Nodes for.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "snapshotSchedule": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}/snapshotSchedule": {
        "verb": "patch",
        "operation": "updateGroupClusterSnapshotSchedule",
        "tags": [
          "Legacy Backup"
        ],
        "description": "Updates the snapshot schedule for one cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\n Effective 23 March 2020, all new clusters can use only Cloud Backups. When you upgrade to 4.2, your backup system upgrades to cloud backup if it is currently set to legacy backup. After this upgrade, all your existing legacy backup snapshots remain available. They expire over time in accordance with your retention policy. Your backup policy resets to the default schedule. If you had a custom backup policy in place with legacy backups, you must re-create it with the procedure outlined in the Cloud Backup documentation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster with the snapshot you want to return.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{clusterName}:grantMongoDBEmployeeAccess": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}:grantMongoDBEmployeeAccess": {
        "verb": "post",
        "operation": "grantGroupClusterMongoDbEmployeeAccess",
        "tags": [
          "Clusters"
        ],
        "description": "Grants MongoDB employee cluster access for the given duration and at the specified level for one cluster.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{clusterName}:pinFeatureCompatibilityVersion": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}:pinFeatureCompatibilityVersion": {
        "verb": "post",
        "operation": "pinGroupClusterFeatureCompatibilityVersion",
        "tags": [
          "Clusters"
        ],
        "description": "Pins the Feature Compatibility Version (FCV) to the current MongoDB version and sets the pin expiration date. If an FCV pin already exists for the cluster, calling this method will only update the expiration date of the existing pin and will not repin the FCV.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{clusterName}:revokeMongoDBEmployeeAccess": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}:revokeMongoDBEmployeeAccess": {
        "verb": "post",
        "operation": "revokeGroupClusterMongoDbEmployeeAccess",
        "tags": [
          "Clusters"
        ],
        "description": "Revokes a previously granted MongoDB employee cluster access.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies this cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{clusterName}:unpinFeatureCompatibilityVersion": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{clusterName}:unpinFeatureCompatibilityVersion": {
        "verb": "post",
        "operation": "unpinGroupClusterFeatureCompatibilityVersion",
        "tags": [
          "Clusters"
        ],
        "description": "Unpins the current fixed Feature Compatibility Version (FCV). This feature is not available for clusters on rapid release.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies this cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{logName}.gz": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/{hostName}/logs/{logName}.gz": {
        "verb": "get",
        "operation": "downloadGroupClusterLog",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns a compressed (.gz) log file that contains a range of log messages for the specified host for the specified project. MongoDB updates process and audit logs from the cluster backend infrastructure every five minutes. Logs are stored in chunks approximately five minutes in length, but this duration may vary. If you poll the API for log files, we recommend polling every five minutes even though consecutive polls could contain some overlapping logs. This feature isn't available for `M0` free clusters, `M2`, `M5`, flex, or serverless clusters. To use this resource, the requesting Service Account or API Key must have the Project Data Access Read Only or higher role. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: \"Accept: application/vnd.atlas.YYYY-MM-DD+gzip\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the host that stores the log files that you want to download.",
            "in": "path",
            "name": "hostName",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?$",
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the log file that you want to return. To return audit logs, enable *Database Auditing* for the specified project.",
            "in": "path",
            "name": "logName",
            "required": true,
            "schema": {
              "enum": [
                "mongodb",
                "mongos",
                "mongodb-audit-log",
                "mongos-audit-log"
              ],
              "externalDocs": {
                "description": "Set up Database Auditing",
                "url": "https://docs.atlas.mongodb.com/database-auditing/"
              },
              "type": "string"
            }
          },
          {
            "description": "Specifies the date and time for the ending point of the range of log messages to retrieve, in the number of seconds that have elapsed since the UNIX epoch. This value will default to 24 hours after the start date. If the start date is also unspecified, the value will default to the time of the request.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "format": "int64",
              "minimum": 1199145600.0,
              "type": "integer"
            }
          },
          {
            "description": "Specifies the date and time for the starting point of the range of log messages to retrieve, in the number of seconds that have elapsed since the UNIX epoch. This value will default to 24 hours prior to the end date. If the end date is also unspecified, the value will default to 24 hours prior to the time of the request.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "format": "int64",
              "minimum": 1199145600.0,
              "type": "integer"
            }
          }
        ]
      }
    }
  },
  "regions": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/provider/regions": {
        "verb": "get",
        "operation": "listGroupClusterProviderRegions",
        "tags": [
          "Clusters"
        ],
        "description": "Returns the list of regions available for the specified cloud provider at the specified tier. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud providers whose regions to retrieve. When you specify multiple providers, the response can return only tiers and regions that support multi-cloud clusters.",
            "in": "query",
            "name": "providers",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Cluster tier for which to retrieve the regions.",
            "in": "query",
            "name": "tier",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "tenantUpgrade": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/tenantUpgrade": {
        "verb": "post",
        "operation": "upgradeGroupClusterTenantUpgrade",
        "tags": [
          "Clusters"
        ],
        "description": "Upgrades a shared-tier cluster to a Flex or Dedicated (M10+) cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Cluster Manager role. Each project supports up to 25 clusters. \n\nThis endpoint can also be used to upgrade Flex clusters that were created using the [createCluster](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Clusters/operation/createCluster) API or former M2/M5 clusters that have been migrated to Flex clusters, using instanceSizeName to “M2” or “M5” until January 2026. This functionality will be available until January 2026, after which it will only be available for M0 clusters. Please use the upgradeFlexCluster endpoint instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "tenantUpgradeToServerless": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/clusters/tenantUpgradeToServerless": {
        "verb": "post",
        "operation": "upgradeGroupClusterTenantUpgradeToServerless",
        "tags": [
          "Clusters"
        ],
        "description": "This endpoint has been deprecated as of February 2025 as we no longer support the creation of new serverless instances. Please use the upgradeFlexCluster endpoint to upgrade Flex clusters.\n\n Upgrades a shared-tier cluster to a serverless instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Cluster Manager role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "metrics": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/collStats/metrics": {
        "verb": "get",
        "operation": "listGroupCollStatMetrics",
        "tags": [
          "Collection Level Metrics"
        ],
        "description": "Returns all available Coll Stats Latency metric names and their respective units for the specified project at the time of request.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/hosts/{processId}/fts/metrics": {
        "verb": "get",
        "operation": "listGroupHostFtsMetrics",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns all Atlas Search metric types available for one process in the specified project. You must have the Project Read Only or higher role to view the Atlas Search metric types.",
        "parameters": [
          {
            "$ref": "#/components/parameters/processId"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      }
    }
  },
  "containers": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/containers": {
        "verb": "post",
        "operation": "createGroupContainer",
        "tags": [
          "Network Peering"
        ],
        "description": "Creates one new network peering container in the specified project. MongoDB Cloud can deploy Network Peering connections in a network peering container. GCP can have one container per project. AWS and Azure can have one container per cloud provider region. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/containers/{containerId}": {
        "verb": "patch",
        "operation": "updateGroupContainer",
        "tags": [
          "Network Peering"
        ],
        "description": "Updates the network details and labels of one specified network peering container in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud network container that you want to remove.",
            "in": "path",
            "name": "containerId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "all": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/containers/all": {
        "verb": "get",
        "operation": "listGroupContainerAll",
        "tags": [
          "Network Peering"
        ],
        "description": "Returns details about all network peering containers in the specified project. Network peering containers contain network peering connections. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "roles": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/customDBRoles/roles": {
        "verb": "post",
        "operation": "createGroupCustomDbRoleRole",
        "tags": [
          "Custom Database Roles"
        ],
        "description": "Creates one custom role in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role, Project Stream Processing Owner role, or the Project Database Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}": {
        "verb": "patch",
        "operation": "updateGroupCustomDbRoleRole",
        "tags": [
          "Custom Database Roles"
        ],
        "description": "Updates one custom role in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role, the Project Stream Processing Owner role, or the Project Database Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the role for the request. This name must beunique for this custom role in this project.",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/users/{userId}/roles": {
        "verb": "put",
        "operation": "updateGroupUserRoles",
        "tags": [
          "Projects"
        ],
        "description": "Updates the roles of the specified user in the specified project. To specify the user to update, provide the unique 24-hexadecimal digit string that identifies the user in the specified project. To use this resource, the requesting Service Account or API Key must have the Group User Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the user to modify.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/users/{userId}/roles": {
        "verb": "put",
        "operation": "updateOrgUserRoles",
        "tags": [
          "Organizations"
        ],
        "description": "Updates the roles of the specified user in the specified organization. To specify the user to update, provide the unique 24-hexadecimal digit string that identifies the user in the specified organization. To use this resource, the requesting Service Account or API Key must have the Organization User Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the user to modify.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      }
    }
  },
  "dataFederation": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/dataFederation": {
        "verb": "post",
        "operation": "createGroupDataFederation",
        "tags": [
          "Data Federation"
        ],
        "description": "Creates one federated database instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner or Project Charts Admin roles.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Flag that indicates whether this request should check if the requesting IAM role can read from the S3 bucket. AWS checks if the role can list the objects in the bucket before writing to it. Some IAM roles only need write permissions. This flag allows you to skip that check.",
            "in": "query",
            "name": "skipRoleValidation",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}": {
        "verb": "patch",
        "operation": "updateGroupDataFederation",
        "tags": [
          "Data Federation"
        ],
        "description": "Updates the details of one federated database instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner or higher role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the federated database instance to update.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flag that indicates whether this request should check if the requesting IAM role can read from the S3 bucket. AWS checks if the role can list the objects in the bucket before writing to it. Some IAM roles only need write permissions. This flag allows you to skip that check.",
            "in": "query",
            "name": "skipRoleValidation",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    }
  },
  "limits": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits": {
        "verb": "get",
        "operation": "listGroupDataFederationLimits",
        "tags": [
          "Data Federation"
        ],
        "description": "Returns query limits for a federated databases instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the federated database instance for which you want to retrieve query limits.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/dataFederation/{tenantName}/limits/{limitName}": {
        "verb": "patch",
        "operation": "setGroupDataFederationLimit",
        "tags": [
          "Data Federation"
        ],
        "description": "Creates or updates one query limit for one federated database instance. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the federated database instance to which the query limit applies.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies this data federation instance limit.\n\n| Limit Name | Description | Default |\n| --- | --- | --- |\n| bytesProcessed.query | Limit on the number of bytes processed during a single data federation query | N/A |\n| bytesProcessed.daily | Limit on the number of bytes processed for the data federation instance for the current day | N/A |\n| bytesProcessed.weekly | Limit on the number of bytes processed for the data federation instance for the current week | N/A |\n| bytesProcessed.monthly | Limit on the number of bytes processed for the data federation instance for the current month | N/A |\n",
            "in": "path",
            "name": "limitName",
            "required": true,
            "schema": {
              "enum": [
                "bytesProcessed.query",
                "bytesProcessed.daily",
                "bytesProcessed.weekly",
                "bytesProcessed.monthly"
              ],
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/limits": {
        "verb": "get",
        "operation": "listGroupLimits",
        "tags": [
          "Projects"
        ],
        "description": "Returns all the limits for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/limits/{limitName}": {
        "verb": "patch",
        "operation": "setGroupLimit",
        "tags": [
          "Projects"
        ],
        "description": "Sets the specified project limit. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\n**NOTE**: Increasing the following configuration limits might lead to slower response times in the MongoDB Cloud UI or increased user management overhead leading to authentication or authorization re-architecture. If possible, we recommend that you create additional projects to gain access to more of these resources for a more sustainable growth pattern.",
        "parameters": [
          {
            "description": "Human-readable label that identifies this project limit.\n\n| Limit Name | Description | Default | API Override Limit |\n| --- | --- | --- | --- |\n| atlas.project.deployment.clusters | Limit on the number of clusters in this project | 25 | 100 |\n| atlas.project.deployment.nodesPerPrivateLinkRegion | Limit on the number of nodes per Private Link region in this project | 50 | 90 |\n| atlas.project.security.databaseAccess.customRoles | Limit on the number of custom roles in this project | 100 | 1400 |\n| atlas.project.security.databaseAccess.users | Limit on the number of database users in this project | 100 | 100 |\n| atlas.project.security.networkAccess.crossRegionEntries | Limit on the number of cross-region network access entries in this project | 40 | 220 |\n| atlas.project.security.networkAccess.entries | Limit on the number of network access entries in this project | 200 | 20 |\n| dataFederation.bytesProcessed.query | Limit on the number of bytes processed during a single Data Federation query | N/A | N/A |\n| dataFederation.bytesProcessed.daily | Limit on the number of bytes processed across all Data Federation tenants for the current day | N/A | N/A |\n| dataFederation.bytesProcessed.weekly | Limit on the number of bytes processed across all Data Federation tenants for the current week | N/A | N/A |\n| dataFederation.bytesProcessed.monthly | Limit on the number of bytes processed across all Data Federation tenants for the current month | N/A | N/A |\n| atlas.project.deployment.privateServiceConnectionsPerRegionGroup | Number of Private Service Connections per Region Group | 50 | 100|\n| atlas.project.deployment.privateServiceConnectionsSubnetMask | Subnet mask for GCP PSC Networks. Has lower limit of 20. | 27 | 27|\n",
            "in": "path",
            "name": "limitName",
            "required": true,
            "schema": {
              "enum": [
                "atlas.project.security.databaseAccess.users",
                "atlas.project.deployment.clusters",
                "atlas.project.deployment.serverlessMTMs",
                "atlas.project.security.databaseAccess.customRoles",
                "atlas.project.security.networkAccess.entries",
                "atlas.project.security.networkAccess.crossRegionEntries",
                "atlas.project.deployment.nodesPerPrivateLinkRegion",
                "dataFederation.bytesProcessed.query",
                "dataFederation.bytesProcessed.daily",
                "dataFederation.bytesProcessed.weekly",
                "dataFederation.bytesProcessed.monthly",
                "atlas.project.deployment.privateServiceConnectionsPerRegionGroup",
                "atlas.project.deployment.privateServiceConnectionsSubnetMask"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "databaseUsers": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/databaseUsers": {
        "verb": "post",
        "operation": "createGroupDatabaseUser",
        "tags": [
          "Database Users"
        ],
        "description": "Creates one database user in the specified project. This MongoDB Cloud supports a maximum of 100 database users per project. If you require more than 100 database users on a project, contact Support. To use this resource, the requesting Service Account or API Key must have the Project Owner role, the Project Charts Admin role, Project Stream Processing Owner role, or the Project Database Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/databaseUsers/{databaseName}/{username}": {
        "verb": "patch",
        "operation": "updateGroupDatabaseUser",
        "tags": [
          "Database Users"
        ],
        "description": "Updates one database user that belongs to the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role, Project Charts Admin role, Project Stream Processing Owner role, or the Project Database Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "The database against which the database user authenticates. Database users must provide both a username and authentication database to log into MongoDB. If the user authenticates with AWS IAM, x.509, LDAP, or OIDC Workload this value should be `$external`. If the user authenticates with SCRAM-SHA or OIDC Workforce, this value should be `admin`.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that represents the user that authenticates to MongoDB. The format of this label depends on the method of authentication:\n\n| Authentication Method | Parameter Needed | Parameter Value | username Format |\n|---|---|---|---|\n| AWS IAM | awsIAMType | ROLE | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| AWS IAM | awsIAMType | USER | <abbr title=\"Amazon Resource Name\">ARN</abbr> |\n| x.509 | x509Type | CUSTOMER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| x.509 | x509Type | MANAGED | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | USER | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| LDAP | ldapAuthType | GROUP | [RFC 2253](https://tools.ietf.org/html/2253) Distinguished Name |\n| OIDC Workforce | oidcAuthType | IDP_GROUP | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP group name |\n| OIDC Workload | oidcAuthType | USER | Atlas OIDC IdP ID (found in federation settings), followed by a '/', followed by the IdP user name |\n| SCRAM-SHA | awsIAMType, x509Type, ldapAuthType, oidcAuthType | NONE | Alphanumeric string |\n",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "example": "SCRAM-SHA: dylan or AWS IAM: arn:aws:iam::123456789012:user/sales/enterprise/DylanBloggs or x.509/LDAP: CN=Dylan Bloggs,OU=Enterprise,OU=Sales,DC=Example,DC=COM or OIDC: IdPIdentifier/IdPGroupName",
              "type": "string"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-must-not-use-html": "Description predates IPA validation.",
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs",
              "xgen-IPA-117-description-should-not-use-inline-tables": "Description predates IPA validation."
            }
          }
        ]
      }
    }
  },
  "certs": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/databaseUsers/{username}/certs": {
        "verb": "post",
        "operation": "createGroupDatabaseUserCert",
        "tags": [
          "X.509 Authentication"
        ],
        "description": "Generates one X.509 certificate for the specified MongoDB user. Atlas manages the certificate and MongoDB user that belong to one project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\nTo get MongoDB Cloud to generate a managed certificate for a database user, set `\"x509Type\" : \"MANAGED\"` on the desired MongoDB Database User.\n\nIf you are managing your own Certificate Authority (CA) in Self-Managed X.509 mode, you must generate certificates for database users using your own CA.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that represents the MongoDB database user account for whom to create a certificate.",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "processes": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/dbAccessHistory/processes/{hostname}": {
        "verb": "get",
        "operation": "getGroupDbAccessHistoryProcess",
        "tags": [
          "Access Tracking"
        ],
        "description": "Returns the access logs of one cluster identified by the cluster's hostname. Access logs contain a list of authentication requests made against your clusters. You can't use this feature on tenant-tier clusters (M0, M2, M5). To use this resource, the requesting Service Account or API Key must have the Project Monitoring Admin role or the Project Database Access Admin role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Flag that indicates whether the response returns the successful authentication attempts only.",
            "in": "query",
            "name": "authResult",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Date and time when to stop retrieving database history. If you specify **end**, you must also specify **start**. This parameter uses UNIX epoch time in milliseconds.",
            "in": "query",
            "name": "end",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Fully qualified domain name or IP address of the MongoDB host that stores the log files that you want to download.",
            "in": "path",
            "name": "hostname",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One Internet Protocol address that attempted to authenticate with the database.",
            "in": "query",
            "name": "ipAddress",
            "schema": {
              "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}|([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}$",
              "type": "string"
            }
          },
          {
            "description": "Maximum number of lines from the log to return.",
            "in": "query",
            "name": "nLogs",
            "schema": {
              "default": 20000,
              "format": "int32",
              "maximum": 20000,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Date and time when MongoDB Cloud begins retrieving database history. If you specify **start**, you must also specify **end**. This parameter uses UNIX epoch time in milliseconds.",
            "in": "query",
            "name": "start",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes": {
        "verb": "get",
        "operation": "listGroupProcesses",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns details of all processes for the specified project. A MongoDB process can be either a `mongod` or `mongos`. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}": {
        "verb": "get",
        "operation": "getGroupProcess",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns the processes for the specified host for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "encryptionAtRest": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/encryptionAtRest": {
        "verb": "patch",
        "operation": "updateGroupEncryptionAtRest",
        "tags": [
          "Encryption at Rest using Customer Key Management"
        ],
        "description": "Updates the configuration for encryption at rest using the keys you manage through your cloud provider. MongoDB Cloud encrypts all storage even if you don't use your own key management. This resource requires the requesting Service Account or API Key to have the Project Owner role. This feature isn't available for `M0` free clusters, `M2`, `M5`, or serverless clusters.\n\n After you configure at least one Encryption at Rest using a Customer Key Management provider for the MongoDB Cloud project, Project Owners can enable Encryption at Rest using Customer Key Management for each MongoDB Cloud cluster for which they require encryption. The Encryption at Rest using Customer Key Management provider doesn't have to match the cluster cloud service provider. MongoDB Cloud doesn't automatically rotate user-managed encryption keys. Defer to your preferred Encryption at Rest using Customer Key Management provider's documentation and guidance for best practices on key rotation. MongoDB Cloud automatically creates a 90-day key rotation alert when you configure Encryption at Rest using Customer Key Management using your Key Management in an MongoDB Cloud project. MongoDB Cloud encrypts all storage whether or not you use your own key management.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      }
    }
  },
  "privateEndpoints": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/encryptionAtRest/{cloudProvider}/privateEndpoints": {
        "verb": "post",
        "operation": "createGroupEncryptionAtRestPrivateEndpoint",
        "tags": [
          "Encryption at Rest using Customer Key Management"
        ],
        "description": "Creates a private endpoint in the specified region for encryption at rest using customer key management.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cloud provider for the private endpoint to create.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "enum": [
                "AZURE",
                "AWS"
              ],
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/encryptionAtRest/{cloudProvider}/privateEndpoints/{endpointId}": {
        "verb": "get",
        "operation": "getGroupEncryptionAtRestPrivateEndpoint",
        "tags": [
          "Encryption at Rest using Customer Key Management"
        ],
        "description": "Returns one private endpoint, identified by its ID, for encryption at rest using Customer Key Management.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cloud provider of the private endpoint.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "enum": [
                "AZURE",
                "AWS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "events": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/events": {
        "verb": "get",
        "operation": "listGroupEvents",
        "tags": [
          "Events"
        ],
        "description": "Returns events for the specified project. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "query",
            "name": "clusterNames",
            "schema": {
              "items": {
                "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Category of incident recorded at this moment in time.\n\n**IMPORTANT**: The complete list of event type values changes frequently.",
            "in": "query",
            "name": "eventType",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/EventTypeForNdsGroup"
              },
              "type": "array"
            }
          },
          {
            "description": "Category of event that you would like to exclude from query results, such as CLUSTER_CREATED\n\n**IMPORTANT**: Event type names change frequently. Verify that you specify the event type correctly by checking the complete list of event types.",
            "in": "query",
            "name": "excludedEventType",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/EventTypeForNdsGroup"
              },
              "type": "array"
            }
          },
          {
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "in": "query",
            "name": "includeRaw",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Date and time from when MongoDB Cloud stops returning events. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "maxDate",
            "schema": {
              "externalDocs": {
                "description": "ISO 8601",
                "url": "https://en.wikipedia.org/wiki/ISO_8601"
              },
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Date and time from when MongoDB Cloud starts returning events. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "minDate",
            "schema": {
              "externalDocs": {
                "description": "ISO 8601",
                "url": "https://en.wikipedia.org/wiki/ISO_8601"
              },
              "format": "date-time",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/events/{eventId}": {
        "verb": "get",
        "operation": "getGroupEvent",
        "tags": [
          "Events"
        ],
        "description": "Returns one event for the specified project. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting Service Account or API Key must have the Project Read Only role. Use the Return Events from One Project endpoint to retrieve all events to which the authenticated user has access.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the event that you want to return.",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "in": "query",
            "name": "includeRaw",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/events": {
        "verb": "get",
        "operation": "listOrgEvents",
        "tags": [
          "Events"
        ],
        "description": "Returns events for the specified organization. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting Service Account or API Key must have the Organization Member role.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Category of incident recorded at this moment in time.\n\n**IMPORTANT**: The complete list of event type values changes frequently.",
            "in": "query",
            "name": "eventType",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/EventTypeForOrg"
              },
              "type": "array"
            }
          },
          {
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "in": "query",
            "name": "includeRaw",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Date and time from when MongoDB Cloud stops returning events. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "maxDate",
            "schema": {
              "externalDocs": {
                "description": "ISO 8601",
                "url": "https://en.wikipedia.org/wiki/ISO_8601"
              },
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Date and time from when MongoDB Cloud starts returning events. This parameter uses the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "minDate",
            "schema": {
              "externalDocs": {
                "description": "ISO 8601",
                "url": "https://en.wikipedia.org/wiki/ISO_8601"
              },
              "format": "date-time",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/events/{eventId}": {
        "verb": "get",
        "operation": "getOrgEvent",
        "tags": [
          "Events"
        ],
        "description": "Returns one event for the specified organization. Events identify significant database, billing, or security activities or status changes. To use this resource, the requesting Service Account or API Key must have the Organization Member role. Use the Return Events from One Organization endpoint to retrieve all events to which the authenticated user has access.\n\nThis resource remains under revision and may change.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the event that you want to return.",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "description": "Flag that indicates whether to include the raw document in the output. The raw document contains additional meta information about the event.",
            "in": "query",
            "name": "includeRaw",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ]
      }
    }
  },
  "flexClusters": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/flexClusters": {
        "verb": "post",
        "operation": "createGroupFlexCluster",
        "tags": [
          "Flex Clusters"
        ],
        "description": "Creates one flex cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/flexClusters/{name}": {
        "verb": "patch",
        "operation": "updateGroupFlexCluster",
        "tags": [
          "Flex Clusters"
        ],
        "description": "Updates one flex cluster in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the flex cluster.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "flexClusters:tenantUpgrade": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/flexClusters:tenantUpgrade": {
        "verb": "post",
        "operation": "tenantGroupFlexClusterUpgrade",
        "tags": [
          "Flex Clusters"
        ],
        "description": "Upgrades a flex cluster to a dedicated cluster (M10+) in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Cluster Manager role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "integrations": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/integrations": {
        "verb": "get",
        "operation": "listGroupIntegrations",
        "tags": [
          "Third-Party Integrations"
        ],
        "description": "Returns the settings that permit integrations with all configured third-party services. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting Service Account or API Key must have the Organization Owner or Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/integrations/{integrationType}": {
        "verb": "put",
        "operation": "updateGroupIntegration",
        "tags": [
          "Third-Party Integrations"
        ],
        "description": "Updates the settings for configuring integration with one third-party service. These settings apply to all databases managed in one MongoDB Cloud project. To use this resource, the requesting Service Account or API Key must have the Organization Owner or Project Owner role.",
        "parameters": [
          {
            "description": "Human-readable label that identifies the service which you want to integrate with MongoDB Cloud.",
            "in": "path",
            "name": "integrationType",
            "required": true,
            "schema": {
              "enum": [
                "PAGER_DUTY",
                "SLACK",
                "DATADOG",
                "NEW_RELIC",
                "OPS_GENIE",
                "VICTOR_OPS",
                "WEBHOOK",
                "HIP_CHAT",
                "PROMETHEUS",
                "MICROSOFT_TEAMS"
              ],
              "title": "Integration Type",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "invites": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/invites": {
        "verb": "post",
        "operation": "createGroupInvite",
        "tags": [
          "Projects"
        ],
        "description": "Invites one MongoDB Cloud user to join the specified project. The MongoDB Cloud user must accept the invitation to access information within the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/invites/{invitationId}": {
        "verb": "patch",
        "operation": "updateGroupInviteById",
        "tags": [
          "Projects"
        ],
        "description": "Updates the details of one pending invitation to the specified project. To specify which invitation to update, provide the unique identification string for that invitation. Use the Return All Project Invitations endpoint to retrieve IDs for all pending project invitations. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/invites": {
        "verb": "post",
        "operation": "createOrgInvite",
        "tags": [
          "Organizations"
        ],
        "description": "Invites one MongoDB Cloud user to join the specified organization. The user must accept the invitation to access information within the specified organization. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: Invitation management APIs are deprecated. Use Add One MongoDB Cloud User to One Organization to invite a user.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/invites/{invitationId}": {
        "verb": "patch",
        "operation": "updateOrgInviteById",
        "tags": [
          "Organizations"
        ],
        "description": "Updates the details of one pending invitation to the specified organization. To specify which invitation, provide the unique identification string for that invitation. Use the Return All Organization Invitations endpoint to retrieve IDs for all pending organization invitations. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: Invitation management APIs are deprecated. Use Update One MongoDB Cloud User in One Organization to update a pending user.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invitation.",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "ipAddresses": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/ipAddresses": {
        "verb": "get",
        "operation": "getGroupIpAddresses",
        "tags": [
          "Projects"
        ],
        "description": "Returns all IP addresses for this project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      }
    }
  },
  "liveMigrations": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/liveMigrations": {
        "verb": "post",
        "operation": "createGroupLiveMigration",
        "tags": [
          "Cloud Migration Service"
        ],
        "description": "Migrate one cluster that Cloud or Ops Manager manages to MongoDB Atlas.\n\n Please make sure to validate your migration before initiating it.\n\n You can use this API endpoint for push live migrations only. Your API Key must have the Organization Owner role to successfully call this resource.\n\n **NOTE**: Migrating time-series collections is not yet supported on MongoDB 6.0 or higher. Migrations on MongoDB 6.0 or higher will skip any time-series collections on the source cluster.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/liveMigrations/{liveMigrationId}": {
        "verb": "get",
        "operation": "getGroupLiveMigration",
        "tags": [
          "Cloud Migration Service"
        ],
        "description": "Return details of one cluster migration job. Each push live migration job uses one migration host. Your API Key must have the Organization Member role to successfully call this resource.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/liveMigrationId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "cutover": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/liveMigrations/{liveMigrationId}/cutover": {
        "verb": "put",
        "operation": "cutoverGroupLiveMigration",
        "tags": [
          "Cloud Migration Service"
        ],
        "description": "Cut over the migrated cluster to MongoDB Atlas. Confirm when the cut over completes. When the cut over completes, MongoDB Atlas completes the live migration process and stops synchronizing with the source cluster. Your API Key must have the Organization Owner role to successfully call this resource.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/liveMigrationId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "validate": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/liveMigrations/validate": {
        "verb": "post",
        "operation": "validateGroupLiveMigrations",
        "tags": [
          "Cloud Migration Service"
        ],
        "description": "Verifies whether the provided credentials, available disk space, MongoDB versions, and so on meet the requirements of the migration request. If the check passes, the migration can proceed. Your API Key must have the Organization Owner role to successfully call this resource.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/liveMigrations/validate/{validationId}": {
        "verb": "get",
        "operation": "getGroupLiveMigrationValidateStatus",
        "tags": [
          "Cloud Migration Service"
        ],
        "description": "Return the status of one migration validation job. Your API Key must have the Organization Owner role to successfully call this resource.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the validation job.",
            "in": "path",
            "name": "validationId",
            "required": true,
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      }
    }
  },
  "maintenanceWindow": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/maintenanceWindow": {
        "verb": "patch",
        "operation": "updateGroupMaintenanceWindow",
        "tags": [
          "Maintenance Windows"
        ],
        "description": "Updates the maintenance window for the specified project. Urgent maintenance activities such as security patches can't wait for your chosen window. MongoDB Cloud starts those maintenance activities when needed. After you schedule maintenance for your cluster, you can't change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. Updating the maintenance window will reset any maintenance deferrals for this project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      }
    }
  },
  "autoDefer": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/maintenanceWindow/autoDefer": {
        "verb": "post",
        "operation": "toggleGroupMaintenanceWindowAutoDefer",
        "tags": [
          "Maintenance Windows"
        ],
        "description": "Toggles automatic deferral of the maintenance window for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      }
    }
  },
  "defer": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/maintenanceWindow/defer": {
        "verb": "post",
        "operation": "deferGroupMaintenanceWindow",
        "tags": [
          "Maintenance Windows"
        ],
        "description": "Defers the maintenance window for the specified project. Urgent maintenance activities such as security patches can't wait for your chosen window. MongoDB Cloud starts those maintenance activities when needed. After you schedule maintenance for your cluster, you can't change your maintenance window until the current maintenance efforts complete. The maintenance procedure that MongoDB Cloud performs requires at least one replica set election during the maintenance window per replica set. Maintenance always begins as close to the scheduled hour as possible, but in-progress cluster updates or unexpected system issues could delay the start time. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      }
    }
  },
  "managedSlowMs": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/managedSlowMs": {
        "verb": "get",
        "operation": "getGroupManagedSlowMs",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Get whether the Managed Slow MS feature is enabled.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "disable": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/managedSlowMs/disable": {
        "verb": "delete",
        "operation": "disableGroupManagedSlowMs",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Disables the slow operation threshold that MongoDB Cloud calculated for the specified project. The threshold determines which operations the Performance Advisor and Query Profiler considers slow. When enabled, MongoDB Cloud uses the average execution time for operations on your cluster to determine slow-running queries. As a result, the threshold is more pertinent to your cluster workload. The slow operation threshold is enabled by default for dedicated clusters (M10+). When disabled, MongoDB Cloud considers any operation that takes longer than 100 milliseconds to be slow. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "enable": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/managedSlowMs/enable": {
        "verb": "post",
        "operation": "enableGroupManagedSlowMs",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Enables MongoDB Cloud to use its slow operation threshold for the specified project. The threshold determines which operations the Performance Advisor and Query Profiler considers slow. When enabled, MongoDB Cloud uses the average execution time for operations on your cluster to determine slow-running queries. As a result, the threshold is more pertinent to your cluster workload. The slow operation threshold is enabled by default for dedicated clusters (M10+). When disabled, MongoDB Cloud considers any operation that takes longer than 100 milliseconds to be slow. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "mongoDBVersions": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/mongoDBVersions": {
        "verb": "get",
        "operation": "getGroupMongoDbVersions",
        "tags": [
          "Projects"
        ],
        "description": "Returns the MongoDB Long Term Support Major Versions available to new clusters in this project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Filter results to only one cloud provider.",
            "in": "query",
            "name": "cloudProvider",
            "schema": {
              "enum": [
                "AWS",
                "AZURE",
                "GCP",
                "TENANT"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter results to only one instance size.",
            "in": "query",
            "name": "instanceSize",
            "schema": {
              "example": "M10",
              "type": "string"
            }
          },
          {
            "description": "Filter results to only the default values per tier. This value must be DEFAULT.",
            "in": "query",
            "name": "defaultStatus",
            "schema": {
              "enum": [
                "DEFAULT"
              ],
              "type": "string"
            }
          },
          {
            "description": "Number of items that the response returns per page.",
            "in": "query",
            "name": "itemsPerPage",
            "schema": {
              "default": 100,
              "example": 100,
              "format": "int64",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/pageNum"
          }
        ]
      }
    }
  },
  "peers": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/peers": {
        "verb": "post",
        "operation": "createGroupPeer",
        "tags": [
          "Network Peering"
        ],
        "description": "Creates one new network peering connection in the specified project. Network peering allows multiple cloud-hosted applications to securely connect to the same project. To use this resource, the requesting Service Account or API Key must have the Project Owner role. To learn more about considerations and prerequisites, see the Network Peering Documentation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/peers/{peerId}": {
        "verb": "patch",
        "operation": "updateGroupPeer",
        "tags": [
          "Network Peering"
        ],
        "description": "Updates one specified network peering connection in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the network peering connection that you want to update.",
            "in": "path",
            "name": "peerId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "pipelines": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/pipelines": {
        "verb": "post",
        "operation": "createGroupPipeline",
        "tags": [
          "Data Lake Pipelines"
        ],
        "description": "Creates one Data Lake Pipeline.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}": {
        "verb": "patch",
        "operation": "updateGroupPipeline",
        "tags": [
          "Data Lake Pipelines"
        ],
        "description": "Updates one Data Lake Pipeline.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "schema": {
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "availableSchedules": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/availableSchedules": {
        "verb": "get",
        "operation": "getGroupPipelineAvailableSchedules",
        "tags": [
          "Data Lake Pipelines"
        ],
        "description": "Returns a list of backup schedule policy items that you can use as a Data Lake Pipeline source. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "schema": {
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "availableSnapshots": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/availableSnapshots": {
        "verb": "get",
        "operation": "getGroupPipelineAvailableSnapshots",
        "tags": [
          "Data Lake Pipelines"
        ],
        "description": "Returns a list of backup snapshots that you can use to trigger an on demand pipeline run. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Date and time after which MongoDB Cloud created the snapshot. If specified, MongoDB Cloud returns available backup snapshots created after this time and date only. This parameter expresses its value in the ISO 8601 timestamp format in UTC.",
            "in": "query",
            "name": "completedAfter",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "schema": {
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "pause": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/pause": {
        "verb": "post",
        "operation": "pauseGroupPipeline",
        "tags": [
          "Data Lake Pipelines"
        ],
        "description": "Pauses ingestion for a Data Lake Pipeline within the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "schema": {
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "resume": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/resume": {
        "verb": "post",
        "operation": "resumeGroupPipeline",
        "tags": [
          "Data Lake Pipelines"
        ],
        "description": "Resumes ingestion for a Data Lake Pipeline within the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "schema": {
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "runs": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/runs": {
        "verb": "get",
        "operation": "listGroupPipelineRuns",
        "tags": [
          "Data Lake Pipelines"
        ],
        "description": "Returns a list of past Data Lake Pipeline runs. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "If specified, Atlas returns only Data Lake Pipeline runs initiated before this time and date.",
            "in": "query",
            "name": "createdBefore",
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-121-date-time-fields-mention-iso-8601": "Schema predates IPA validation."
            }
          },
          {
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "schema": {
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/runs/{pipelineRunId}": {
        "verb": "get",
        "operation": "getGroupPipelineRun",
        "tags": [
          "Data Lake Pipelines"
        ],
        "description": "Returns the details of one Data Lake Pipeline run within the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "schema": {
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal character string that identifies a Data Lake Pipeline run.",
            "in": "path",
            "name": "pipelineRunId",
            "required": true,
            "schema": {
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "trigger": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/pipelines/{pipelineName}/trigger": {
        "verb": "post",
        "operation": "triggerGroupPipeline",
        "tags": [
          "Data Lake Pipelines"
        ],
        "description": "Triggers a Data Lake Pipeline ingestion of a specified snapshot.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the Data Lake Pipeline.",
            "in": "path",
            "name": "pipelineName",
            "required": true,
            "schema": {
              "pattern": "^[^/\\\\ \"$]{1,64}$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "endpointService": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService": {
        "verb": "get",
        "operation": "listGroupPrivateEndpointEndpointService",
        "tags": [
          "Private Endpoint Services"
        ],
        "description": "Returns the name, interfaces, and state of all private endpoint services for the specified cloud service provider. This cloud service provider manages the private endpoint service for the project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint service.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ],
              "type": "string"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-119-no-default-for-cloud-providers": "Schema predates IPA validation."
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}": {
        "verb": "get",
        "operation": "getGroupPrivateEndpointEndpointService",
        "tags": [
          "Private Endpoint Services"
        ],
        "description": "Returns the name, interfaces, and state of the specified private endpoint service from one project. The cloud service provider hosted this private endpoint service that belongs to the project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint service.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ],
              "type": "string"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-119-no-default-for-cloud-providers": "Schema predates IPA validation."
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service that you want to return.",
            "in": "path",
            "name": "endpointServiceId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/privateEndpoint/endpointService": {
        "verb": "post",
        "operation": "createGroupPrivateEndpointEndpointService",
        "tags": [
          "Private Endpoint Services"
        ],
        "description": "Creates one private endpoint service for the specified cloud service provider. This cloud service provider manages the private endpoint service for the project. When you create a private endpoint service, MongoDB Cloud creates a network container in the project for the cloud provider for which you create the private endpoint service if one doesn't already exist. To learn more about private endpoint terminology in MongoDB Cloud, see Private Endpoint Concepts. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "endpoint": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint": {
        "verb": "post",
        "operation": "createGroupPrivateEndpointEndpointServiceEndpoint",
        "tags": [
          "Private Endpoint Services"
        ],
        "description": "Creates one private endpoint for the specified cloud service provider. This cloud service provider manages the private endpoint service, which in turn manages the private endpoints for the project. To use this resource, the requesting Service Account or API Key must have the Project Owner role. To learn more about considerations, limitations, and prerequisites, see the MongoDB documentation for setting up a private endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ],
              "type": "string"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-119-no-default-for-cloud-providers": "Schema predates IPA validation."
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to create a private endpoint.",
            "in": "path",
            "name": "endpointServiceId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/privateEndpoint/{cloudProvider}/endpointService/{endpointServiceId}/endpoint/{endpointId}": {
        "verb": "get",
        "operation": "getGroupPrivateEndpointEndpointServiceEndpoint",
        "tags": [
          "Private Endpoint Services"
        ],
        "description": "Returns the connection state of the specified private endpoint. The private endpoint service manages this private endpoint which belongs to one project hosted from one cloud service provider. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Cloud service provider that manages this private endpoint.",
            "in": "path",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "default": "AWS",
              "enum": [
                "AWS",
                "AZURE",
                "GCP"
              ],
              "type": "string"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-119-no-default-for-cloud-providers": "Schema predates IPA validation."
            }
          },
          {
            "description": "Unique string that identifies the private endpoint you want to return. The format of the **endpointId** parameter differs for AWS and Azure. You must URL encode the **endpointId** for Azure private endpoints.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "pattern": "^vpce-[0-9a-f]{17}|^%2[fF]subscriptions%2[fF][0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}%2[fF]resource[gG]roups%2[fF]([-\\w._()]+)%2[fF]providers%2[fF]Microsoft\\.Network%2[fF]privateEndpoints%2[fF]([-\\w._()]+)",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to return a private endpoint.",
            "in": "path",
            "name": "endpointServiceId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint": {
        "verb": "post",
        "operation": "createGroupPrivateEndpointServerlessInstanceEndpoint",
        "tags": [
          "Serverless Private Endpoints"
        ],
        "description": "Creates one private endpoint for one serverless instance. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\n A new endpoint won't be immediately available after creation.  Read the steps in the linked tutorial for detailed guidance.\n\nThis feature does not work for Flex clusters. To continue using Private Endpoints once Serverless is replaced by Flex, please use a Dedicated cluster instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance for which the tenant endpoint will be created.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/privateEndpoint/serverless/instance/{instanceName}/endpoint/{endpointId}": {
        "verb": "patch",
        "operation": "updateGroupPrivateEndpointServerlessInstanceEndpoint",
        "tags": [
          "Serverless Private Endpoints"
        ],
        "description": "Updates one private endpoint for one serverless instance. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\nThis feature does not work for Flex clusters. To continue using Private Endpoints once Serverless is replaced by Flex, please use a Dedicated cluster instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the serverless instance associated with the tenant endpoint that will be updated.",
            "in": "path",
            "name": "instanceName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the tenant endpoint which will be updated.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "regionalMode": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/privateEndpoint/regionalMode": {
        "verb": "patch",
        "operation": "toggleGroupPrivateEndpointRegionalMode",
        "tags": [
          "Private Endpoint Services"
        ],
        "description": "Enables or disables the ability to create multiple private endpoints per region in all cloud service providers in one project. The cloud service provider manages the private endpoints for the project. Connection strings to existing multi-region and global sharded clusters change when you enable this setting. You must update your applications to use the new connection strings. This might cause downtime. To use this resource, the requesting Service Account or API Key must have the Project Owner role and all clusters in the deployment must be sharded clusters. Once enabled, you cannot create replica sets.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "privateIpMode": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/privateIpMode": {
        "verb": "patch",
        "operation": "disableGroupPrivateIpModePeering",
        "tags": [
          "Network Peering"
        ],
        "description": "Disables Connect via Peering Only mode for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "endpointIds": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds": {
        "verb": "post",
        "operation": "createGroupPrivateNetworkSettingEndpointId",
        "tags": [
          "Data Federation"
        ],
        "description": "Adds one private endpoint for Federated Database Instances and Online Archives to the specified projects. If the endpoint ID already exists and the associated comment is unchanged, Atlas Data Federation makes no change to the endpoint ID list. If the endpoint ID already exists and the associated comment is changed, Atlas Data Federation updates the comment value only in the endpoint ID list. If the endpoint ID doesn't exist, Atlas Data Federation appends the new endpoint to the list of endpoints in the endpoint ID list. Each region has an associated service name for the various endpoints in each region.\n\n `us-east-1` is `com.amazonaws.vpce.us-east-1.vpce-svc-00e311695874992b4`.\n\n `us-west-1` is `com.amazonaws.vpce.us-west-2.vpce-svc-09d86b19e59d1b4bb`.\n\n `eu-west-1` is `com.amazonaws.vpce.eu-west-1.vpce-svc-0824460b72e1a420e`.\n\n `eu-west-2` is `com.amazonaws.vpce.eu-west-2.vpce-svc-052f1840aa0c4f1f9`.\n\n `eu-central-1` is `com.amazonaws.vpce.eu-central-1.vpce-svc-0ac8ce91871138c0d`.\n\n `sa-east-1` is `com.amazonaws.vpce.sa-east-1.vpce-svc-0b56e75e8cdf50044`.\n\n `ap-southeast-2` is `com.amazonaws.vpce.ap-southeast-2.vpce-svc-036f1de74d761706e`.\n\n `ap-south-1` is `com.amazonaws.vpce.ap-south-1.vpce-svc-03eb8a541f96d356d`.\n\n To use this resource, the requesting Service Account or API Key must have the Project Owner or Project Charts Admin roles.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/privateNetworkSettings/endpointIds/{endpointId}": {
        "verb": "get",
        "operation": "getGroupPrivateNetworkSettingEndpointId",
        "tags": [
          "Data Federation"
        ],
        "description": "Returns the specified private endpoint for Federated Database Instances or Online Archives in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only or Project Charts Admin roles.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 22-character alphanumeric string that identifies the private endpoint to return. Atlas Data Federation supports AWS private endpoints using the AWS PrivateLink feature.",
            "in": "path",
            "name": "endpointId",
            "required": true,
            "schema": {
              "pattern": "^vpce-[0-9a-f]{17}$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "databases": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/databases": {
        "verb": "get",
        "operation": "listGroupProcessDatabases",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns the list of databases running on the specified host for the specified project. `M0` free clusters, `M2`, `M5`, serverless, and Flex clusters have some operational limits. The MongoDB Cloud process must be a `mongod`. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/databases/{databaseName}": {
        "verb": "get",
        "operation": "getGroupProcessDatabase",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns one database running on the specified host for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the database that the specified MongoDB process serves.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "disks": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/disks": {
        "verb": "get",
        "operation": "listGroupProcessDisks",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns the list of disks or partitions for the specified host for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/disks/{partitionName}": {
        "verb": "get",
        "operation": "getGroupProcessDisk",
        "tags": [
          "Monitoring and Logs"
        ],
        "description": "Returns measurement details for one disk or partition for the specified host for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Human-readable label of the disk or partition to which the measurements apply.",
            "in": "path",
            "name": "partitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Combination of hostname and Internet Assigned Numbers Authority (IANA) port that serves the MongoDB process. The host must be the hostname, fully qualified domain name (FQDN), or Internet Protocol address (IPv4 or IPv6) of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "example": "mongodb.example.com:27017",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "slowQueryLogs": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/processes/{processId}/performanceAdvisor/slowQueryLogs": {
        "verb": "get",
        "operation": "listGroupProcessPerformanceAdvisorSlowQueryLogs",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Returns log lines for slow queries that the Performance Advisor and Query Profiler identified. The Performance Advisor monitors queries that MongoDB considers slow and suggests new indexes to improve query performance. MongoDB Cloud bases the threshold for slow queries on the average time of operations on your cluster. This enables workload-relevant recommendations. To use this resource, the requesting Service Account or API Key must have any Project Data Access role or the Project Observability Viewer role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Length of time expressed during which the query finds slow queries among the managed namespaces in the cluster. This parameter expresses its value in milliseconds.\n\n- If you don't specify the **since** parameter, the endpoint returns data covering the duration before the current time.\n- If you specify neither the **duration** nor **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "duration",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "description": "Namespaces from which to retrieve slow queries. A namespace consists of one database and one collection resource written as `.`: `<database>.<collection>`. To include multiple namespaces, pass the parameter multiple times delimited with an ampersand (`&`) between each namespace. Omit this parameter to return results for all namespaces.",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Maximum number of lines from the log to return.",
            "in": "query",
            "name": "nLogs",
            "schema": {
              "default": 20000,
              "format": "int64",
              "maximum": 20000,
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "description": "Combination of host and port that serves the MongoDB process. The host must be the hostname, FQDN, IPv4 address, or IPv6 address of the host that runs the MongoDB process (`mongod` or `mongos`). The port must be the IANA port on which the MongoDB process listens for requests.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-f]{1,4}\\:){7}([0-9a-f]{1,4})|(([a-z0-9]+\\.){1,10}[a-z]+)?(\\:[0-9]{4,5})$",
              "type": "string"
            }
          },
          {
            "description": "Date and time from which the query retrieves the slow queries. This parameter expresses its value in the number of milliseconds that have elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time).\n\n- If you don't specify the **duration** parameter, the endpoint returns data covering from the **since** value and the current time.\n- If you specify neither the **duration** nor the **since** parameters, the endpoint returns data from the previous 24 hours.",
            "in": "query",
            "name": "since",
            "schema": {
              "format": "int64",
              "minimum": 1199145600000.0,
              "type": "integer"
            },
            "x-xgen-IPA-exception": {
              "xgen-IPA-117-description-should-not-use-inline-links": "Parameters don't support externalDocs"
            }
          },
          {
            "description": "Whether or not to include metrics extracted from the slow query log as separate fields.",
            "in": "query",
            "name": "includeMetrics",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Whether or not to include the replica state of the host when the slow query log was generated as a separate field.",
            "in": "query",
            "name": "includeReplicaState",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Whether or not to include the operation type (read/write/command) extracted from the slow query log as a separate field.",
            "in": "query",
            "name": "includeOpType",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ]
      }
    }
  },
  "pushBasedLogExport": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/pushBasedLogExport": {
        "verb": "post",
        "operation": "createGroupPushBasedLogExport",
        "tags": [
          "Push-Based Log Export"
        ],
        "description": "Configures the project level settings for the push-based log export feature.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "sampleDatasetLoad": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/sampleDatasetLoad/{name}": {
        "verb": "post",
        "operation": "requestGroupSampleDatasetLoad",
        "tags": [
          "Clusters"
        ],
        "description": "Requests loading the MongoDB sample dataset into the specified cluster. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster into which you load the sample dataset.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/sampleDatasetLoad/{sampleDatasetId}": {
        "verb": "get",
        "operation": "getGroupSampleDatasetLoad",
        "tags": [
          "Clusters"
        ],
        "description": "Checks the progress of loading the sample dataset into one cluster. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the loaded sample dataset.",
            "in": "path",
            "name": "sampleDatasetId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "serverless": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/serverless": {
        "verb": "post",
        "operation": "createGroupServerlessInstance",
        "tags": [
          "Serverless Instances"
        ],
        "description": "Update as of Feb 2025: This endpoint now creates a Flex cluster instead. This endpoint will no longer be supported starting January 2026. Continuous backups are not supported and serverlessContinuousBackupEnabled will not take effect. Please use the createFlexCluster endpoint instead.\n\nCreates one serverless instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/serverless/{name}": {
        "verb": "patch",
        "operation": "updateGroupServerlessInstance",
        "tags": [
          "Serverless Instances"
        ],
        "description": "Updates one serverless instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\nThis API can also be used on Flex clusters that were created with the [createServerlessInstance](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Serverless-Instances/operation/createServerlessInstance) endpoint or Flex clusters that were migrated from Serverless instances. This endpoint will be sunset in January 2026. Continuous backups are not supported and serverlessContinuousBackupEnabled will not take effect on these clusters. Please use the updateFlexCluster endpoint instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies the serverless instance.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "autoIndexing": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/serverless/{clusterName}/performanceAdvisor/autoIndexing": {
        "verb": "post",
        "operation": "setGroupServerlessPerformanceAdvisorAutoIndexing",
        "tags": [
          "Performance Advisor"
        ],
        "description": "Set whether the Serverless Auto Indexing feature is enabled. This endpoint sets a value for Flex clusters that were created with the createServerlessInstance endpoint or Flex clusters that were migrated from Serverless instances. However, the value returned is not indicative of the Auto Indexing state as Auto Indexing is unavailable for Flex clusters. This endpoint will be sunset in January 2026.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the cluster.",
            "in": "path",
            "name": "clusterName",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "type": "string"
            }
          },
          {
            "description": "Value that we want to set for the Serverless Auto Indexing toggle.",
            "in": "query",
            "name": "enable",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "serviceAccounts": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/serviceAccounts": {
        "verb": "post",
        "operation": "createGroupServiceAccount",
        "tags": [
          "Service Accounts"
        ],
        "description": "Creates one Service Account for the specified Project. The Service Account will automatically be added as an Organization Member to the Organization that the specified Project is a part of.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}": {
        "verb": "patch",
        "operation": "updateGroupServiceAccount",
        "tags": [
          "Service Accounts"
        ],
        "description": "Updates one Service Account in the specified Project.",
        "parameters": [
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/serviceAccounts": {
        "verb": "post",
        "operation": "createOrgServiceAccount",
        "tags": [
          "Service Accounts"
        ],
        "description": "Creates one Service Account for the specified Organization.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}": {
        "verb": "patch",
        "operation": "updateOrgServiceAccount",
        "tags": [
          "Service Accounts"
        ],
        "description": "Updates the specified Service Account in the specified Organization.",
        "parameters": [
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "secrets": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}/secrets": {
        "verb": "post",
        "operation": "createGroupServiceAccountSecret",
        "tags": [
          "Service Accounts"
        ],
        "description": "Create a secret for the specified Service Account in the specified Project.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}/secrets/{secretId}": {
        "verb": "delete",
        "operation": "deleteGroupServiceAccountSecret",
        "tags": [
          "Service Accounts"
        ],
        "description": "Deletes the specified Service Account secret.",
        "parameters": [
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the secret.",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/secrets": {
        "verb": "post",
        "operation": "createOrgServiceAccountSecret",
        "tags": [
          "Service Accounts"
        ],
        "description": "Create a secret for the specified Service Account.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/serviceAccounts/{clientId}/secrets/{secretId}": {
        "verb": "delete",
        "operation": "deleteOrgServiceAccountSecret",
        "tags": [
          "Service Accounts"
        ],
        "description": "Deletes the specified Service Account secret.",
        "parameters": [
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the secret.",
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "{clientId}:invite": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/serviceAccounts/{clientId}:invite": {
        "verb": "post",
        "operation": "inviteGroupServiceAccount",
        "tags": [
          "Service Accounts"
        ],
        "description": "Assigns the specified Service Account to the specified Project.",
        "parameters": [
          {
            "description": "The Client ID of the Service Account.",
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "example": "mdb_sa_id_1234567890abcdef12345678",
              "pattern": "^mdb_sa_id_[a-fA-F\\d]{24}$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "settings": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/settings": {
        "verb": "patch",
        "operation": "updateGroupSettings",
        "tags": [
          "Projects"
        ],
        "description": "Updates the settings of the specified project. You can update any of the options available. MongoDB cloud only updates the options provided in the request. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/settings": {
        "verb": "patch",
        "operation": "updateOrgSettings",
        "tags": [
          "Organizations"
        ],
        "description": "Updates the organization's settings. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "streams": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams": {
        "verb": "post",
        "operation": "createGroupStreamWorkspace",
        "tags": [
          "Streams"
        ],
        "description": "Creates one stream instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}": {
        "verb": "patch",
        "operation": "updateGroupStreamWorkspace",
        "tags": [
          "Streams"
        ],
        "description": "Update one stream instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the stream instance to update.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "auditLogs": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/auditLogs": {
        "verb": "get",
        "operation": "downloadGroupStreamAuditLogs",
        "tags": [
          "Streams"
        ],
        "description": "Downloads the audit logs for the specified Atlas Streams Processing instance. By default, logs cover periods of 30 days. To use this resource, the requesting Service Account or API Key must have the Project Data Access roles, Project Owner role or Project Stream Processing Owner role. The API does not support direct calls with the json response schema. You must request a gzip response schema using an accept header of the format: \"Accept: application/vnd.atlas.YYYY-MM-DD+gzip\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Timestamp that specifies the end point for the range of log messages to download.  MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "endDate",
            "schema": {
              "example": 1636481348.0,
              "format": "int64",
              "pattern": "1199145600",
              "type": "integer"
            }
          },
          {
            "description": "Timestamp that specifies the starting point for the range of log messages to download. MongoDB Cloud expresses this timestamp in the number of seconds that have elapsed since the UNIX epoch.",
            "in": "query",
            "name": "startDate",
            "schema": {
              "example": 1636466948.0,
              "format": "int64",
              "pattern": "1199145600",
              "type": "integer"
            }
          },
          {
            "description": "Human-readable label that identifies the stream instance.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "connections": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections": {
        "verb": "post",
        "operation": "createGroupStreamConnection",
        "tags": [
          "Streams"
        ],
        "description": "Creates one connection for a stream instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the stream instance.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/connections/{connectionName}": {
        "verb": "patch",
        "operation": "updateGroupStreamConnection",
        "tags": [
          "Streams"
        ],
        "description": "Update one connection for the specified stream instance in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the stream instance.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the stream connection.",
            "in": "path",
            "name": "connectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "processor": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor": {
        "verb": "post",
        "operation": "createGroupStreamProcessor",
        "tags": [
          "Streams"
        ],
        "description": "Create one Stream Processor within the specified stream instance. To use this resource, the requesting Service Account or API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the stream instance.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}": {
        "verb": "patch",
        "operation": "updateGroupStreamProcessor",
        "tags": [
          "Streams"
        ],
        "description": "Modify one existing Stream Processor within the specified stream instance. To use this resource, the requesting Service Account or API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the stream instance.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the stream processor.",
            "in": "path",
            "name": "processorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{processorName}:start": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}:start": {
        "verb": "post",
        "operation": "startGroupStreamProcessor",
        "tags": [
          "Streams"
        ],
        "description": "Start a Stream Processor within the specified stream instance. To use this resource, the requesting Service Account or API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the stream instance.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the stream processor.",
            "in": "path",
            "name": "processorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{processorName}:startWith": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}:startWith": {
        "verb": "post",
        "operation": "startGroupStreamProcessorWith",
        "tags": [
          "Streams"
        ],
        "description": "Start a Stream Processor within the specified stream instance. To use this resource, the requesting Service Account or API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the stream instance.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the stream processor.",
            "in": "path",
            "name": "processorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{processorName}:stop": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}:stop": {
        "verb": "post",
        "operation": "stopGroupStreamProcessor",
        "tags": [
          "Streams"
        ],
        "description": "Stop a Stream Processor within the specified stream instance. To use this resource, the requesting Service Account or API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Human-readable label that identifies the stream instance.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Human-readable label that identifies the stream processor.",
            "in": "path",
            "name": "processorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "processors": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processors": {
        "verb": "get",
        "operation": "getGroupStreamProcessors",
        "tags": [
          "Streams"
        ],
        "description": "Returns all Stream Processors within the specified stream instance. To use this resource, the requesting Service Account or API Key must have the Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "description": "Human-readable label that identifies the stream instance.",
            "in": "path",
            "name": "tenantName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "accountDetails": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/accountDetails": {
        "verb": "get",
        "operation": "getGroupStreamAccountDetails",
        "tags": [
          "Streams"
        ],
        "description": "Returns the Account ID, and the VPC ID for the group and region specified.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "One of \"aws\", \"azure\" or \"gcp\".",
            "in": "query",
            "name": "cloudProvider",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The cloud provider specific region name, i.e. \"US_EAST_1\" for cloud provider \"aws\".",
            "in": "query",
            "name": "regionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "activeVpcPeeringConnections": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/activeVpcPeeringConnections": {
        "verb": "get",
        "operation": "listGroupStreamActiveVpcPeeringConnections",
        "tags": [
          "Streams"
        ],
        "description": "Returns a list of active incoming VPC Peering Connections.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "privateLinkConnections": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/privateLinkConnections": {
        "verb": "post",
        "operation": "createGroupStreamPrivateLinkConnection",
        "tags": [
          "Streams"
        ],
        "description": "Creates one Private Link in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/streams/privateLinkConnections/{connectionId}": {
        "verb": "get",
        "operation": "getGroupStreamPrivateLinkConnection",
        "tags": [
          "Streams"
        ],
        "description": "Returns the details of one Private Link connection within the project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "Unique ID that identifies the Private Link connection.",
            "in": "path",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "vpcPeeringConnections": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/vpcPeeringConnections": {
        "verb": "get",
        "operation": "listGroupStreamVpcPeeringConnections",
        "tags": [
          "Streams"
        ],
        "description": "Returns a list of incoming VPC Peering Connections.",
        "parameters": [
          {
            "description": "The Account ID of the VPC Peering connection/s.",
            "in": "query",
            "name": "requesterAccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/streams/vpcPeeringConnections/{id}": {
        "verb": "delete",
        "operation": "deleteGroupStreamVpcPeeringConnection",
        "tags": [
          "Streams"
        ],
        "description": "Deletes an incoming VPC Peering connection.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "The VPC Peering Connection id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{id}:accept": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/vpcPeeringConnections/{id}:accept": {
        "verb": "post",
        "operation": "acceptGroupStreamVpcPeeringConnection",
        "tags": [
          "Streams"
        ],
        "description": "Requests the acceptance of an incoming VPC Peering connection.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "The VPC Peering Connection id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{id}:reject": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams/vpcPeeringConnections/{id}:reject": {
        "verb": "post",
        "operation": "rejectGroupStreamVpcPeeringConnection",
        "tags": [
          "Streams"
        ],
        "description": "Requests the rejection of an incoming VPC Peering connection.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "description": "The VPC Peering Connection id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "streams:withSampleConnections": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/streams:withSampleConnections": {
        "verb": "post",
        "operation": "withGroupStreamSampleConnections",
        "tags": [
          "Streams"
        ],
        "description": "Creates one stream instance in the specified project with sample connections. To use this resource the requesting Service Account or API Key must have the Project Data Access Admin role, Project Owner role or Project Stream Processing Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      }
    }
  },
  "teams": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/teams": {
        "verb": "post",
        "operation": "addGroupTeams",
        "tags": [
          "Teams"
        ],
        "description": "Adds one team to the specified project. All members of the team share the same project access. MongoDB Cloud limits the number of users to a maximum of 100 teams per project and a maximum of 250 teams per organization. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/teams/{teamId}": {
        "verb": "patch",
        "operation": "updateGroupTeam",
        "tags": [
          "Teams"
        ],
        "description": "Updates the project roles assigned to the specified team. You can grant team roles for specific projects and grant project access roles to users in the team. All members of the team share the same project access. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team for which you want to update roles.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/teams": {
        "verb": "post",
        "operation": "createOrgTeam",
        "tags": [
          "Teams"
        ],
        "description": "Creates one team in the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. MongoDB Cloud limits the number of teams to a maximum of 250 teams per organization. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/teams/{teamId}": {
        "verb": "patch",
        "operation": "renameOrgTeam",
        "tags": [
          "Teams"
        ],
        "description": "Renames one team in the specified organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team that you want to rename.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "userSecurity": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/userSecurity": {
        "verb": "patch",
        "operation": "updateGroupUserSecurity",
        "tags": [
          "LDAP Configuration"
        ],
        "description": "Edits the LDAP configuration for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\nUpdating this configuration triggers a rolling restart of the database.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "customerX509": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/userSecurity/customerX509": {
        "verb": "delete",
        "operation": "disableGroupUserSecurityCustomerX509",
        "tags": [
          "X.509 Authentication"
        ],
        "description": "Clears the customer-managed X.509 settings on a project, including the uploaded Certificate Authority, which disables self-managed X.509.\n\n Updating this configuration triggers a rolling restart of the database. You must have the Project Owner role to use this endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          }
        ]
      }
    }
  },
  "userToDNMapping": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/userSecurity/ldap/userToDNMapping": {
        "verb": "delete",
        "operation": "deleteGroupUserSecurityLdapUserToDnMapping",
        "tags": [
          "LDAP Configuration"
        ],
        "description": "Removes the current LDAP Distinguished Name mapping captured in the ``userToDNMapping`` document from the LDAP configuration for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "verify": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/userSecurity/ldap/verify": {
        "verb": "post",
        "operation": "verifyGroupUserSecurityLdap",
        "tags": [
          "LDAP Configuration"
        ],
        "description": "Verifies the LDAP configuration for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/userSecurity/ldap/verify/{requestId}": {
        "verb": "get",
        "operation": "getGroupUserSecurityLdapVerify",
        "tags": [
          "LDAP Configuration"
        ],
        "description": "Returns the status of one request to verify one LDAP configuration for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique string that identifies the request to verify an Lightweight Directory Access Protocol (LDAP) configuration.",
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "users": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/users": {
        "verb": "post",
        "operation": "addGroupUsers",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Adds one MongoDB Cloud user to one project. To use this resource, the requesting Service Account or API Key must have the Project Owner role. \n- If the user has a pending invitation to join the project's organization, MongoDB Cloud modifies it and grants project access. \n- If the user doesn't have an invitation to join the organization, MongoDB Cloud sends a new invitation that grants the user organization and project access. \n- If the user is already active in the project's organization, MongoDB Cloud grants access to the project. \n",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/groups/{groupId}/users/{userId}": {
        "verb": "get",
        "operation": "getGroupUser",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Returns information about the specified MongoDB Cloud user within the context of the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.\n\n**Note**: You can only use this resource to fetch information about MongoDB Cloud human users. To return information about an API Key, use the [Return One Organization API Key](#tag/Programmatic-API-Keys/operation/getApiKey) endpoint.\n\n**Note**: This resource does not return information about pending users invited via the deprecated [Invite One MongoDB Cloud User to Join One Project](#tag/Projects/operation/createProjectInvitation) endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the pending or active user in the project. If you need to lookup a user's userId or verify a user's status in the organization, use the Return All MongoDB Cloud Users in One Project resource and filter by username.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/teams/{teamId}/users": {
        "verb": "post",
        "operation": "addOrgTeamUsers",
        "tags": [
          "Teams"
        ],
        "description": "Adds one or more MongoDB Cloud users from the specified organization to the specified team. Teams enable you to grant project access roles to MongoDB Cloud users. You can assign up to 250 MongoDB Cloud users from one organization to one team. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: This endpoint is deprecated. Use [Add One MongoDB Cloud User to One Team](#tag/MongoDB-Cloud-Users/operation/addUserToTeam) to add an active or pending user to a team.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal character string that identifies the team to which you want to add MongoDB Cloud users.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/teams/{teamId}/users/{userId}": {
        "verb": "delete",
        "operation": "removeOrgTeamUserFromTeam",
        "tags": [
          "Teams"
        ],
        "description": "Removes one MongoDB Cloud user from the specified team. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: This endpoint is deprecated. Use [Remove One MongoDB Cloud User from One Team](#tag/MongoDB-Cloud-Users/operation/removeUserFromTeam) to remove an active or pending user from a team.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team from which you want to remove one database application user.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies MongoDB Cloud user that you want to remove from the specified team.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/users": {
        "verb": "post",
        "operation": "createOrgUser",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Invites one new or existing MongoDB Cloud user to join the organization. The invitation to join the organization will be sent to the username provided and must be accepted within 30 days. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: If the user does not have an existing MongoDB Cloud account, they will be prompted to finish setting up an account upon accepting the invitation. If the user already has an account, they will still receive an invitation to access the organization.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/users/{userId}": {
        "verb": "patch",
        "operation": "updateOrgUser",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Updates one MongoDB Cloud user in the specified organization. You can update an active user or a user that has not yet accepted the invitation to join the organization. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: Only include the fields you wish to update in the request body. Supplying a field with an empty value will reset that field on the user.\n\n**Note**: This resource cannot be used to update pending users invited via the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the pending or active user in the organization. If you need to lookup a user's userId or verify a user's status in the organization, use the Return All MongoDB Cloud Users in One Organization resource and filter by username.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/users": {
        "verb": "post",
        "operation": "createUser",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Creates one MongoDB Cloud user account. A MongoDB Cloud user account grants access to only the MongoDB Cloud application. To grant database access, create a database user. MongoDB Cloud sends an email to the users you specify, inviting them to join the project. Invited users don't have access to the project until they accept the invitation. Invitations expire after 30 days.\n\n MongoDB Cloud limits MongoDB Cloud user membership to a maximum of 250 MongoDB Cloud users per team. MongoDB Cloud limits MongoDB Cloud user membership to 500 MongoDB Cloud users per project and 500 MongoDB Cloud users per organization, which includes the combined membership of all projects in the organization. MongoDB Cloud raises an error if an operation exceeds these limits. For example, if you have an organization with five projects, and each project has 100 MongoDB Cloud users, and each MongoDB Cloud user belongs to only one project, you can't add any MongoDB Cloud users to this organization without first removing existing MongoDB Cloud users from the organization.\n\n To use this resource, the requesting Service Account or API Key can have any role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/users/{userId}": {
        "verb": "get",
        "operation": "getUser",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Returns the details for one MongoDB Cloud user account with the specified unique identifier for the user. You can't use this endpoint to return information on an API Key. To return information about an API Key, use the Return One Organization API Key endpoint. You can always retrieve your own user account. If you are the owner of a MongoDB Cloud organization or project, you can also retrieve the user profile for any user with membership in that organization or project. To use this resource, the requesting Service Account or API Key can have any role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies this user.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{userId}:addRole": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/users/{userId}:addRole": {
        "verb": "post",
        "operation": "addGroupUserRole",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Adds one project-level role to the MongoDB Cloud user. You can add a role to an active user or a user that has been invited to join the project. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\n**Note**: This resource cannot be used to add a role to users invited using the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the pending or active user in the project. If you need to lookup a user's userId or verify a user's status in the organization, use the Return All MongoDB Cloud Users in One Project resource and filter by username.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/users/{userId}:addRole": {
        "verb": "post",
        "operation": "addOrgUserRole",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Adds one organization-level role to the MongoDB Cloud user. You can add a role to an active user or a user that has not yet accepted the invitation to join the organization. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: This operation is atomic.\n\n**Note**: This resource cannot be used to add a role to users invited using the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the pending or active user in the organization. If you need to lookup a user's userId or verify a user's status in the organization, use the Return All MongoDB Cloud Users in One Organization resource and filter by username.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{userId}:removeRole": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}/users/{userId}:removeRole": {
        "verb": "post",
        "operation": "removeGroupUserRole",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Removes one project-level role from the MongoDB Cloud user. You can remove a role from an active user or a user that has been invited to join the project. To replace a user's only role, add the new role before removing the old role. A user must have at least one role at all times. To use this resource, the requesting Service Account or API Key must have the Project Owner role.\n\n**Note**: This resource cannot be used to remove a role from users invited using the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the pending or active user in the project. If you need to lookup a user's userId or verify a user's status in the organization, use the Return All MongoDB Cloud Users in One Project resource and filter by username.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/users/{userId}:removeRole": {
        "verb": "post",
        "operation": "removeOrgUserRole",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Removes one organization-level role from the MongoDB Cloud user. You can remove a role from an active user or a user that has not yet accepted the invitation to join the organization. To replace a user's only role, add the new role before removing the old role. A user must have at least one role at all times. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: This operation is atomic.\n\n**Note**: This resource cannot be used to remove a role from users invited using the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the pending or active user in the organization. If you need to lookup a user's userId or verify a user's status in the organization, use the Return All MongoDB Cloud Users in One Organization resource and filter by username.",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{groupId}:migrate": {
    "methods": {
      "/api/atlas/v2/groups/{groupId}:migrate": {
        "verb": "post",
        "operation": "migrateGroup",
        "tags": [
          "Projects"
        ],
        "description": "Migrates a project from its current organization to another organization. All project users and their roles will be copied to the same project in the destination organization. You must include an organization API key with the Organization Owner role for the destination organization to verify access to the destination organization when you authenticate with Programmatic API Keys. Otherwise, the requesting user must have the Organization Owner role in both organizations. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/groupId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      }
    }
  },
  "byName": {
    "methods": {
      "/api/atlas/v2/groups/byName/{groupName}": {
        "verb": "get",
        "operation": "getGroupByName",
        "tags": [
          "Projects"
        ],
        "description": "Returns details about the specified project. Projects group clusters into logical collections that support an application environment, workload, or both. Each project can have its own users, teams, security, tags, and alert settings. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Human-readable label that identifies this project.",
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/teams/byName/{teamName}": {
        "verb": "get",
        "operation": "getOrgTeamByName",
        "tags": [
          "Teams"
        ],
        "description": "Returns one team that you identified using its human-readable name. This team belongs to one organization. Teams enable you to grant project access roles to MongoDB Cloud users. To use this resource, the requesting Service Account or API Key must have the Organization Member role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Name of the team whose information you want to return.",
            "in": "path",
            "name": "teamName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/users/byName/{userName}": {
        "verb": "get",
        "operation": "getUserByName",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Returns the details for one MongoDB Cloud user account with the specified username. You can't use this endpoint to return information about an API Key. To return information about an API Key, use the Return One Organization API Key endpoint. To use this resource, the requesting Service Account or API Key can have any role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Email address that belongs to the MongoDB Cloud user account. You cannot modify this address after creating the user.",
            "in": "path",
            "name": "userName",
            "required": true,
            "schema": {
              "pattern": "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "orgs": {
    "methods": {
      "/api/atlas/v2/orgs": {
        "verb": "post",
        "operation": "createOrg",
        "tags": [
          "Organizations"
        ],
        "description": "Creates one organization in MongoDB Cloud and links it to the requesting Service Account's or API Key's organization. To use this resource, the requesting Service Account or API Key must have the Organization Owner role. The requesting Service Account's or API Key's organization must be a paying organization. To learn more, see Configure a Paying Organization in the MongoDB Atlas documentation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}": {
        "verb": "patch",
        "operation": "updateOrg",
        "tags": [
          "Organizations"
        ],
        "description": "Updates one organization. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "usage": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/billing/costExplorer/usage": {
        "verb": "post",
        "operation": "createOrgBillingCostExplorerUsageProcess",
        "tags": [
          "Invoices"
        ],
        "description": "Creates a query process within the Cost Explorer for the given parameters. A token is returned that can be used to poll the status of the query and eventually retrieve the results.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/billing/costExplorer/usage/{token}": {
        "verb": "get",
        "operation": "getOrgBillingCostExplorerUsage",
        "tags": [
          "Invoices"
        ],
        "description": "Returns the usage details for a Cost Explorer query, if the query is finished and the data is ready to be viewed. If the data is not ready, a 'processing' response willindicate that another request should be sent later to view the data.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "description": "Unique 64 digit string that identifies the Cost Explorer query.",
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "example": "4ABBE973862346D40F3AE859D4BE96E0F895764EB14EAB039E7B82F9D638C05C",
              "maxLength": 64,
              "minLength": 64,
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "invoices": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/invoices": {
        "verb": "get",
        "operation": "listOrgInvoices",
        "tags": [
          "Invoices"
        ],
        "description": "Returns all invoices that MongoDB issued to the specified organization. This list includes all invoices regardless of invoice status. To use this resource, the requesting Service Account or API Key must have the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can view linked invoices if you have the Organization Billing Admin or Organization Owner role.\nTo compute the total owed amount of the invoices - sum up total owed of each invoice. It could be computed as a sum of owed amount of each payment included into the invoice. To compute payment's owed amount - use formula *totalBilledCents* * *unitPrice* + *salesTax* - *startingBalanceCents*.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/includeCount"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Flag that indicates whether to return linked invoices in the linkedInvoices field.",
            "in": "query",
            "name": "viewLinkedInvoices",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "Statuses of the invoice to be retrieved. Omit to return invoices of all statuses.",
            "in": "query",
            "name": "statusNames",
            "schema": {
              "items": {
                "enum": [
                  "PENDING",
                  "CLOSED",
                  "FORGIVEN",
                  "FAILED",
                  "PAID",
                  "FREE",
                  "PREPAID",
                  "INVOICED"
                ],
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            }
          },
          {
            "description": "Retrieve the invoices the startDates of which are greater than or equal to the fromDate. If omit, the invoices return will go back to earliest startDate.",
            "in": "query",
            "name": "fromDate",
            "schema": {
              "example": "2023-01-01",
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Retrieve the invoices the endDates of which are smaller than or equal to the toDate. If omit, the invoices return will go further to latest endDate.",
            "in": "query",
            "name": "toDate",
            "schema": {
              "example": "2023-01-01",
              "format": "date",
              "type": "string"
            }
          },
          {
            "description": "Field used to sort the returned invoices by. Use in combination with orderBy parameter to control the order of the result.",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "default": "END_DATE",
              "enum": [
                "START_DATE",
                "END_DATE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Field used to order the returned invoices by. Use in combination of sortBy parameter to control the order of the result.",
            "example": "desc",
            "in": "query",
            "name": "orderBy",
            "schema": {
              "default": "desc",
              "enum": [
                "desc",
                "asc"
              ],
              "type": "string"
            }
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}": {
        "verb": "get",
        "operation": "getOrgInvoice",
        "tags": [
          "Invoices"
        ],
        "description": "Returns one invoice that MongoDB issued to the specified organization. A unique 24-hexadecimal digit string identifies the invoice. You can choose to receive this invoice in JSON or CSV format. To use this resource, the requesting Service Account or API Key must have the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can query for a linked invoice if you have the Organization Billing Admin or Organization Owner role.\nTo compute the total owed amount of the invoice - sum up total owed amount of each payment included into the invoice. To compute payment's owed amount - use formula *totalBilledCents* * *unitPrice* + *salesTax* - *startingBalanceCents*.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "csv": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}/csv": {
        "verb": "get",
        "operation": "getOrgInvoiceCsv",
        "tags": [
          "Invoices"
        ],
        "description": "Returns one invoice that MongoDB issued to the specified organization in CSV format. A unique 24-hexadecimal digit string identifies the invoice. To use this resource, the requesting Service Account or API Key have at least the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can query for a linked invoice if you have the Organization Billing Admin or Organization Owner Role.\n To compute the total owed amount of the invoice - sum up total owed amount of each payment included into the invoice. To compute payment's owed amount - use formula *totalBilledCents* * *unitPrice* + *salesTax* - *startingBalanceCents*.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "pattern": "[0-9a-f]+",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "lineItems:search": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/invoices/{invoiceId}/lineItems:search": {
        "verb": "get",
        "operation": "searchOrgInvoiceLineItems",
        "tags": [
          "Invoices"
        ],
        "description": "Query the lineItems of the specified invoice and return the result JSON. A unique 24-hexadecimal digit string identifies the invoice.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/itemsPerPage"
          },
          {
            "$ref": "#/components/parameters/pageNum"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the invoice submitted to the specified organization. Charges typically post the next day.",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "pending": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/invoices/pending": {
        "verb": "get",
        "operation": "listOrgInvoicePending",
        "tags": [
          "Invoices"
        ],
        "description": "Returns all invoices accruing charges for the current billing cycle for the specified organization. To use this resource, the requesting Service Account or API Key must have the Organization Billing Viewer, Organization Billing Admin, or Organization Owner role. If you have a cross-organization setup, you can view linked invoices if you have the Organization Billing Admin or Organization Owner Role.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "availableProjects": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/liveMigrations/availableProjects": {
        "verb": "get",
        "operation": "listOrgLiveMigrationAvailableProjects",
        "tags": [
          "Cloud Migration Service"
        ],
        "description": "Return all projects that you can migrate to the specified organization.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "linkTokens": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/liveMigrations/linkTokens": {
        "verb": "post",
        "operation": "createOrgLiveMigrationLinkToken",
        "tags": [
          "Cloud Migration Service"
        ],
        "description": "Create one link-token that contains all the information required to complete the link. MongoDB Atlas uses the link-token for push live migrations only. Live migration (push) allows you to securely push data from Cloud Manager or Ops Manager into MongoDB Atlas. Your API Key must have the Organization Owner role to successfully call this resource.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          }
        ]
      }
    }
  },
  "nonCompliantResources": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/nonCompliantResources": {
        "verb": "get",
        "operation": "getOrgNonCompliantResources",
        "tags": [
          "Resource Policies"
        ],
        "description": "Return all non-compliant resources for an org.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ]
      }
    }
  },
  "resourcePolicies": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/resourcePolicies": {
        "verb": "post",
        "operation": "createOrgResourcePolicy",
        "tags": [
          "Resource Policies"
        ],
        "description": "Create one Atlas Resource Policy for an org.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ]
      },
      "/api/atlas/v2/orgs/{orgId}/resourcePolicies/{resourcePolicyId}": {
        "verb": "patch",
        "operation": "updateOrgResourcePolicy",
        "tags": [
          "Resource Policies"
        ],
        "description": "Update one Atlas Resource Policy for an org.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies an atlas resource policy.",
            "in": "path",
            "name": "resourcePolicyId",
            "required": true,
            "schema": {
              "description": "Unique 24-hexadecimal character string that identifies the atlas resource policy.",
              "example": "32b6e34b3d91647abb20e7b8",
              "pattern": "^([a-f0-9]{24})$",
              "readOnly": true,
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "resourcePolicies:validate": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/resourcePolicies:validate": {
        "verb": "post",
        "operation": "validateOrgResourcePolicies",
        "tags": [
          "Resource Policies"
        ],
        "description": "Validate one Atlas Resource Policy for an org.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/orgId"
          }
        ]
      }
    }
  },
  "{teamId}:addUser": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/teams/{teamId}:addUser": {
        "verb": "post",
        "operation": "addOrgTeamUser",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Adds one MongoDB Cloud user to one team. You can add an active user or a user that has not yet accepted the invitation to join the organization. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: This resource cannot be used to add a user invited via the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team to add the MongoDB Cloud user to.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "{teamId}:removeUser": {
    "methods": {
      "/api/atlas/v2/orgs/{orgId}/teams/{teamId}:removeUser": {
        "verb": "post",
        "operation": "removeOrgTeamUser",
        "tags": [
          "MongoDB Cloud Users"
        ],
        "description": "Removes one MongoDB Cloud user from one team. You can remove an active user or a user that has not yet accepted the invitation to join the organization. To use this resource, the requesting Service Account or API Key must have the Organization Owner role.\n\n**Note**: This resource cannot be used to remove a user invited via the deprecated Invite One MongoDB Cloud User to Join One Project endpoint.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          },
          {
            "$ref": "#/components/parameters/orgId"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "description": "Unique 24-hexadecimal digit string that identifies the team to remove the MongoDB user from.",
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "pattern": "^([a-f0-9]{24})$",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "controlPlaneIPAddresses": {
    "methods": {
      "/api/atlas/v2/unauth/controlPlaneIPAddresses": {
        "verb": "get",
        "operation": "listControlPlaneIpAddresses",
        "tags": [
          "Root"
        ],
        "description": "Returns all control plane IP addresses.",
        "parameters": [
          {
            "$ref": "#/components/parameters/envelope"
          }
        ]
      }
    }
  }
}