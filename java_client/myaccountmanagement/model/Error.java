/*
 * MyAccount Management
 * APIs for managing a user's own emails, phones, profile, and app authenticators. > **Note:** The MyAccount API doesn't support [delegated authentication](https://help.okta.com/okta_help.htm?id=ext_Security_Authentication).
 *
 * The version of the OpenAPI document: 2025.01.1
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.okta.myaccount.myaccountmanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.okta.myaccount.myaccountmanagement.model.ErrorErrorCausesInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.okta.myaccount.myaccountmanagement.invoker.JacksonConfig;

/**
 * Standard API error object
 */
@JsonPropertyOrder({
  Error.JSON_PROPERTY_ERROR_CAUSES,
  Error.JSON_PROPERTY_ERROR_CODE,
  Error.JSON_PROPERTY_ERROR_ID,
  Error.JSON_PROPERTY_ERROR_LINK,
  Error.JSON_PROPERTY_ERROR_SUMMARY
})
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-08-13T20:31:08.570419254Z[GMT]", comments = "Generator version: unset")
public class Error {
  public static final String JSON_PROPERTY_ERROR_CAUSES = "errorCauses";
  @javax.annotation.Nullable
  private List<ErrorErrorCausesInner> errorCauses = new ArrayList<>();

  public static final String JSON_PROPERTY_ERROR_CODE = "errorCode";
  @javax.annotation.Nullable
  private String errorCode;

  public static final String JSON_PROPERTY_ERROR_ID = "errorId";
  @javax.annotation.Nullable
  private String errorId;

  public static final String JSON_PROPERTY_ERROR_LINK = "errorLink";
  @javax.annotation.Nullable
  private String errorLink;

  public static final String JSON_PROPERTY_ERROR_SUMMARY = "errorSummary";
  @javax.annotation.Nullable
  private String errorSummary;

  public Error() {
  }
  /**
   * Constructor with only readonly parameters
   */
  @JsonCreator
  public Error(
    @JsonProperty(JSON_PROPERTY_ERROR_CODE) String errorCode, 
    @JsonProperty(JSON_PROPERTY_ERROR_ID) String errorId, 
    @JsonProperty(JSON_PROPERTY_ERROR_LINK) String errorLink, 
    @JsonProperty(JSON_PROPERTY_ERROR_SUMMARY) String errorSummary
  ) {
    this();
    this.errorCode = errorCode;
    this.errorId = errorId;
    this.errorLink = errorLink;
    this.errorSummary = errorSummary;
  }

  public Error errorCauses(@javax.annotation.Nullable List<ErrorErrorCausesInner> errorCauses) {
    
    this.errorCauses = errorCauses;
    return this;
  }

  public Error addErrorCausesItem(ErrorErrorCausesInner errorCausesItem) {
    if (this.errorCauses == null) {
      this.errorCauses = new ArrayList<>();
    }
    this.errorCauses.add(errorCausesItem);
    return this;
  }

  /**
   * (Optional) Further information about what caused this error
   * @return errorCauses
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_CAUSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ErrorErrorCausesInner> getErrorCauses() {
    return errorCauses;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_CAUSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCauses(@javax.annotation.Nullable List<ErrorErrorCausesInner> errorCauses) {
    this.errorCauses = errorCauses;
  }

  /**
   * A code that is associated with this error type
   * @return errorCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorCode() {
    return errorCode;
  }



  /**
   * A unique identifier for this error. This can be used by Okta Support to help with troubleshooting.
   * @return errorId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorId() {
    return errorId;
  }



  /**
   * A link to documentation with a more detailed explanation of the error (not yet implemented and is currently the same value as the &#39;errorCode&#39;)
   * @return errorLink
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorLink() {
    return errorLink;
  }



  /**
   * A natural language explanation of the error
   * @return errorSummary
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorSummary() {
    return errorSummary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Error error = (Error) o;
    return Objects.equals(this.errorCauses, error.errorCauses) &&
        Objects.equals(this.errorCode, error.errorCode) &&
        Objects.equals(this.errorId, error.errorId) &&
        Objects.equals(this.errorLink, error.errorLink) &&
        Objects.equals(this.errorSummary, error.errorSummary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorCauses, errorCode, errorId, errorLink, errorSummary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Error {\n");
    sb.append("    errorCauses: ").append(toIndentedString(errorCauses)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorId: ").append(toIndentedString(errorId)).append("\n");
    sb.append("    errorLink: ").append(toIndentedString(errorLink)).append("\n");
    sb.append("    errorSummary: ").append(toIndentedString(errorSummary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

