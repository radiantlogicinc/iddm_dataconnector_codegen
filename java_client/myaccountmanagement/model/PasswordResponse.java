/*
 * MyAccount Management
 * APIs for managing a user's own emails, phones, profile, and app authenticators. > **Note:** The MyAccount API doesn't support [delegated authentication](https://help.okta.com/okta_help.htm?id=ext_Security_Authentication).
 *
 * The version of the OpenAPI document: 2025.01.1
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.okta.myaccount.myaccountmanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.okta.myaccount.myaccountmanagement.model.PasswordResponseLinks;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.okta.myaccount.myaccountmanagement.invoker.JacksonConfig;

/**
 * Password response object
 */
@JsonPropertyOrder({
  PasswordResponse.JSON_PROPERTY_CREATED,
  PasswordResponse.JSON_PROPERTY_ID,
  PasswordResponse.JSON_PROPERTY_LAST_UPDATED,
  PasswordResponse.JSON_PROPERTY_STATUS,
  PasswordResponse.JSON_PROPERTY_LINKS
})
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-08-13T20:31:08.570419254Z[GMT]", comments = "Generator version: unset")
public class PasswordResponse {
  public static final String JSON_PROPERTY_CREATED = "created";
  @javax.annotation.Nullable
  private String created;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_LAST_UPDATED = "lastUpdated";
  @javax.annotation.Nullable
  private String lastUpdated;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  private String status;

  public static final String JSON_PROPERTY_LINKS = "_links";
  @javax.annotation.Nullable
  private PasswordResponseLinks links;

  public PasswordResponse() {
  }
  /**
   * Constructor with only readonly parameters
   */
  @JsonCreator
  public PasswordResponse(
    @JsonProperty(JSON_PROPERTY_ID) String id
  ) {
    this();
    this.id = id;
  }

  public PasswordResponse created(@javax.annotation.Nullable String created) {
    
    this.created = created;
    return this;
  }

  /**
   * If password is &#x60;ACTIVE&#x60;, returns the date when password was first enrolled
   * @return created
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(@javax.annotation.Nullable String created) {
    this.created = created;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }



  public PasswordResponse lastUpdated(@javax.annotation.Nullable String lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * If password is &#x60;ACTIVE&#x60;, returns the date when password was last updated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastUpdated() {
    return lastUpdated;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdated(@javax.annotation.Nullable String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public PasswordResponse status(@javax.annotation.Nullable String status) {
    
    this.status = status;
    return this;
  }

  /**
   * &#x60;ACTIVE&#x60;, &#x60;EXPIRED&#x60;, &#x60;SUSPENDED&#x60;, &#x60;NOT_ENROLLED&#x60;
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }

  public PasswordResponse links(@javax.annotation.Nullable PasswordResponseLinks links) {
    
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PasswordResponseLinks getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinks(@javax.annotation.Nullable PasswordResponseLinks links) {
    this.links = links;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PasswordResponse passwordResponse = (PasswordResponse) o;
    return Objects.equals(this.created, passwordResponse.created) &&
        Objects.equals(this.id, passwordResponse.id) &&
        Objects.equals(this.lastUpdated, passwordResponse.lastUpdated) &&
        Objects.equals(this.status, passwordResponse.status) &&
        Objects.equals(this.links, passwordResponse.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, id, lastUpdated, status, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PasswordResponse {\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

