/*
 * MyAccount Management
 * APIs for managing a user's own emails, phones, profile, and app authenticators. > **Note:** The MyAccount API doesn't support [delegated authentication](https://help.okta.com/okta_help.htm?id=ext_Security_Authentication).
 *
 * The version of the OpenAPI document: 2025.01.1
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.okta.myaccount.myaccountmanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.okta.myaccount.myaccountmanagement.invoker.JacksonConfig;

/**
 * KeyRSA
 */
@JsonPropertyOrder({
  KeyRSA.JSON_PROPERTY_E,
  KeyRSA.JSON_PROPERTY_KID,
  KeyRSA.JSON_PROPERTY_KTY,
  KeyRSA.JSON_PROPERTY_N,
  KeyRSA.JSON_PROPERTY_OKTA_KPR
})
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-08-13T20:31:08.570419254Z[GMT]", comments = "Generator version: unset")
public class KeyRSA implements KeyObject {
  public static final String JSON_PROPERTY_E = "e";
  @javax.annotation.Nonnull
  private String e;

  public static final String JSON_PROPERTY_KID = "kid";
  @javax.annotation.Nonnull
  private String kid;

  public static final String JSON_PROPERTY_KTY = "kty";
  @javax.annotation.Nonnull
  private KtyEnum kty;

  public static final String JSON_PROPERTY_N = "n";
  @javax.annotation.Nonnull
  private String n;

  public static final String JSON_PROPERTY_OKTA_KPR = "okta:kpr";
  @javax.annotation.Nonnull
  private OktaKprEnum oktaKpr;

  public KeyRSA() {
  }

  public KeyRSA e(@javax.annotation.Nonnull String e) {
    
    this.e = e;
    return this;
  }

  /**
   * The key exponent of a RSA key
   * @return e
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_E)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getE() {
    return e;
  }


  @JsonProperty(JSON_PROPERTY_E)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setE(@javax.annotation.Nonnull String e) {
    this.e = e;
  }

  public KeyRSA kid(@javax.annotation.Nonnull String kid) {
    
    this.kid = kid;
    return this;
  }

  /**
   * The unique identifier of the key
   * @return kid
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKid() {
    return kid;
  }


  @JsonProperty(JSON_PROPERTY_KID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKid(@javax.annotation.Nonnull String kid) {
    this.kid = kid;
  }

  public KeyRSA kty(@javax.annotation.Nonnull KtyEnum kty) {
    
    this.kty = kty;
    return this;
  }

  /**
   * The type of public key
   * @return kty
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public KtyEnum getKty() {
    return kty;
  }


  @JsonProperty(JSON_PROPERTY_KTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKty(@javax.annotation.Nonnull KtyEnum kty) {
    this.kty = kty;
  }

  public KeyRSA n(@javax.annotation.Nonnull String n) {
    
    this.n = n;
    return this;
  }

  /**
   * The modulus of the RSA key
   * @return n
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getN() {
    return n;
  }


  @JsonProperty(JSON_PROPERTY_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setN(@javax.annotation.Nonnull String n) {
    this.n = n;
  }

  public KeyRSA oktaKpr(@javax.annotation.Nonnull OktaKprEnum oktaKpr) {
    
    this.oktaKpr = oktaKpr;
    return this;
  }

  /**
   * Get oktaKpr
   * @return oktaKpr
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OKTA_KPR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OktaKprEnum getOktaKpr() {
    return oktaKpr;
  }


  @JsonProperty(JSON_PROPERTY_OKTA_KPR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOktaKpr(@javax.annotation.Nonnull OktaKprEnum oktaKpr) {
    this.oktaKpr = oktaKpr;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyRSA keyRSA = (KeyRSA) o;
    return Objects.equals(this.e, keyRSA.e) &&
        Objects.equals(this.kid, keyRSA.kid) &&
        Objects.equals(this.kty, keyRSA.kty) &&
        Objects.equals(this.n, keyRSA.n) &&
        Objects.equals(this.oktaKpr, keyRSA.oktaKpr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(e, kid, kty, n, oktaKpr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyRSA {\n");
    sb.append("    e: ").append(toIndentedString(e)).append("\n");
    sb.append("    kid: ").append(toIndentedString(kid)).append("\n");
    sb.append("    kty: ").append(toIndentedString(kty)).append("\n");
    sb.append("    n: ").append(toIndentedString(n)).append("\n");
    sb.append("    oktaKpr: ").append(toIndentedString(oktaKpr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

