/*
 * MyAccount Management
 * APIs for managing a user's own emails, phones, profile, and app authenticators. > **Note:** The MyAccount API doesn't support [delegated authentication](https://help.okta.com/okta_help.htm?id=ext_Security_Authentication).
 *
 * The version of the OpenAPI document: 2025.01.1
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.okta.myaccount.myaccountmanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.okta.myaccount.myaccountmanagement.model.PollChallengeForEmailMagicLink200ResponseLinksPoll;
import com.okta.myaccount.myaccountmanagement.model.PollChallengeForEmailMagicLink200ResponseLinksVerify;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.okta.myaccount.myaccountmanagement.invoker.JacksonConfig;

/**
 * Discoverable resources related to the poll for the email challenge&#39;s status
 */
@JsonPropertyOrder({
  PollChallengeForEmailMagicLink200ResponseLinks.JSON_PROPERTY_VERIFY,
  PollChallengeForEmailMagicLink200ResponseLinks.JSON_PROPERTY_POLL
})
@JsonTypeName("pollChallengeForEmailMagicLink_200_response__links")
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-08-13T20:31:08.570419254Z[GMT]", comments = "Generator version: unset")
public class PollChallengeForEmailMagicLink200ResponseLinks {
  public static final String JSON_PROPERTY_VERIFY = "verify";
  @javax.annotation.Nonnull
  private PollChallengeForEmailMagicLink200ResponseLinksVerify verify;

  public static final String JSON_PROPERTY_POLL = "poll";
  @javax.annotation.Nonnull
  private PollChallengeForEmailMagicLink200ResponseLinksPoll poll;

  public PollChallengeForEmailMagicLink200ResponseLinks() {
  }

  public PollChallengeForEmailMagicLink200ResponseLinks verify(@javax.annotation.Nonnull PollChallengeForEmailMagicLink200ResponseLinksVerify verify) {
    
    this.verify = verify;
    return this;
  }

  /**
   * Get verify
   * @return verify
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERIFY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PollChallengeForEmailMagicLink200ResponseLinksVerify getVerify() {
    return verify;
  }


  @JsonProperty(JSON_PROPERTY_VERIFY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVerify(@javax.annotation.Nonnull PollChallengeForEmailMagicLink200ResponseLinksVerify verify) {
    this.verify = verify;
  }

  public PollChallengeForEmailMagicLink200ResponseLinks poll(@javax.annotation.Nonnull PollChallengeForEmailMagicLink200ResponseLinksPoll poll) {
    
    this.poll = poll;
    return this;
  }

  /**
   * Get poll
   * @return poll
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POLL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PollChallengeForEmailMagicLink200ResponseLinksPoll getPoll() {
    return poll;
  }


  @JsonProperty(JSON_PROPERTY_POLL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPoll(@javax.annotation.Nonnull PollChallengeForEmailMagicLink200ResponseLinksPoll poll) {
    this.poll = poll;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PollChallengeForEmailMagicLink200ResponseLinks pollChallengeForEmailMagicLink200ResponseLinks = (PollChallengeForEmailMagicLink200ResponseLinks) o;
    return Objects.equals(this.verify, pollChallengeForEmailMagicLink200ResponseLinks.verify) &&
        Objects.equals(this.poll, pollChallengeForEmailMagicLink200ResponseLinks.poll);
  }

  @Override
  public int hashCode() {
    return Objects.hash(verify, poll);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PollChallengeForEmailMagicLink200ResponseLinks {\n");
    sb.append("    verify: ").append(toIndentedString(verify)).append("\n");
    sb.append("    poll: ").append(toIndentedString(poll)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

