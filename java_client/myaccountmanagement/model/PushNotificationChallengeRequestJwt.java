/*
 * MyAccount Management
 * APIs for managing a user's own emails, phones, profile, and app authenticators. > **Note:** The MyAccount API doesn't support [delegated authentication](https://help.okta.com/okta_help.htm?id=ext_Security_Authentication).
 *
 * The version of the OpenAPI document: 2025.01.1
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.okta.myaccount.myaccountmanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.okta.myaccount.myaccountmanagement.model.PushNotificationChallengeRequestJwtChallengeContext;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.okta.myaccount.myaccountmanagement.invoker.JacksonConfig;

/**
 * JSON Web Token payload constructed by Okta for the push notification challenge request JWT
 */
@JsonPropertyOrder({
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_APP_INSTANCE_NAME,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_AUD,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_AUTHENTICATOR_ENROLLMENT_ID,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_AUTHORIZATION_SERVER_ID,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_CHALLENGE_CONTEXT,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_EXP,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_IAT,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_ISS,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_JTI,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_METHOD,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_METHOD_ENROLLMENT_ID,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_NONCE,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_ORG_ID,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_SIGNALS,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_TRANSACTION_ID,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_USER_ID,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_USER_MEDIATION,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_USER_VERIFICATION,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_VER,
  PushNotificationChallengeRequestJwt.JSON_PROPERTY_VERIFICATION_URI
})
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-08-13T20:31:08.570419254Z[GMT]", comments = "Generator version: unset")
public class PushNotificationChallengeRequestJwt {
  public static final String JSON_PROPERTY_APP_INSTANCE_NAME = "appInstanceName";
  @javax.annotation.Nullable
  private String appInstanceName;

  public static final String JSON_PROPERTY_AUD = "aud";
  @javax.annotation.Nullable
  private String aud;

  public static final String JSON_PROPERTY_AUTHENTICATOR_ENROLLMENT_ID = "authenticatorEnrollmentId";
  @javax.annotation.Nullable
  private String authenticatorEnrollmentId;

  public static final String JSON_PROPERTY_AUTHORIZATION_SERVER_ID = "authorizationServerId";
  @javax.annotation.Nullable
  private String authorizationServerId;

  public static final String JSON_PROPERTY_CHALLENGE_CONTEXT = "challengeContext";
  @javax.annotation.Nullable
  private PushNotificationChallengeRequestJwtChallengeContext challengeContext;

  public static final String JSON_PROPERTY_EXP = "exp";
  @javax.annotation.Nullable
  private String exp;

  public static final String JSON_PROPERTY_IAT = "iat";
  @javax.annotation.Nullable
  private String iat;

  public static final String JSON_PROPERTY_ISS = "iss";
  @javax.annotation.Nullable
  private String iss;

  public static final String JSON_PROPERTY_JTI = "jti";
  @javax.annotation.Nullable
  private String jti;

  /**
   * Method type requested for the response
   */
  public enum MethodEnum {
    PUSH(String.valueOf("push"));

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MethodEnum fromValue(String value) {
      for (MethodEnum b : MethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_METHOD = "method";
  @javax.annotation.Nullable
  private MethodEnum method;

  public static final String JSON_PROPERTY_METHOD_ENROLLMENT_ID = "methodEnrollmentId";
  @javax.annotation.Nullable
  private String methodEnrollmentId;

  public static final String JSON_PROPERTY_NONCE = "nonce";
  @javax.annotation.Nullable
  private String nonce;

  public static final String JSON_PROPERTY_ORG_ID = "orgId";
  @javax.annotation.Nullable
  private String orgId;

  public static final String JSON_PROPERTY_SIGNALS = "signals";
  @javax.annotation.Nullable
  private List<String> signals = new ArrayList<>();

  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  @javax.annotation.Nullable
  private String transactionId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private String userId;

  /**
   * Indicates if user mediation is required
   */
  public enum UserMediationEnum {
    NONE(String.valueOf("NONE")),
    
    OPTIONAL(String.valueOf("OPTIONAL")),
    
    REQUIRED(String.valueOf("REQUIRED"));

    private String value;

    UserMediationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UserMediationEnum fromValue(String value) {
      for (UserMediationEnum b : UserMediationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_USER_MEDIATION = "userMediation";
  @javax.annotation.Nullable
  private UserMediationEnum userMediation;

  /**
   * Indicates if user verification (biometrics) is used in the response
   */
  public enum UserVerificationEnum {
    NONE(String.valueOf("NONE")),
    
    DISCOURAGED(String.valueOf("DISCOURAGED")),
    
    PREFERRED(String.valueOf("PREFERRED")),
    
    REQUIRED(String.valueOf("REQUIRED"));

    private String value;

    UserVerificationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UserVerificationEnum fromValue(String value) {
      for (UserVerificationEnum b : UserVerificationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_USER_VERIFICATION = "userVerification";
  @javax.annotation.Nullable
  private UserVerificationEnum userVerification;

  public static final String JSON_PROPERTY_VER = "ver";
  @javax.annotation.Nullable
  private Integer ver;

  public static final String JSON_PROPERTY_VERIFICATION_URI = "verificationUri";
  @javax.annotation.Nullable
  private String verificationUri;

  public PushNotificationChallengeRequestJwt() {
  }

  public PushNotificationChallengeRequestJwt appInstanceName(@javax.annotation.Nullable String appInstanceName) {
    
    this.appInstanceName = appInstanceName;
    return this;
  }

  /**
   * Friendly name of the application for the authentication request
   * @return appInstanceName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APP_INSTANCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAppInstanceName() {
    return appInstanceName;
  }


  @JsonProperty(JSON_PROPERTY_APP_INSTANCE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppInstanceName(@javax.annotation.Nullable String appInstanceName) {
    this.appInstanceName = appInstanceName;
  }

  public PushNotificationChallengeRequestJwt aud(@javax.annotation.Nullable String aud) {
    
    this.aud = aud;
    return this;
  }

  /**
   * Audience (maps to the application ID)
   * @return aud
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAud() {
    return aud;
  }


  @JsonProperty(JSON_PROPERTY_AUD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAud(@javax.annotation.Nullable String aud) {
    this.aud = aud;
  }

  public PushNotificationChallengeRequestJwt authenticatorEnrollmentId(@javax.annotation.Nullable String authenticatorEnrollmentId) {
    
    this.authenticatorEnrollmentId = authenticatorEnrollmentId;
    return this;
  }

  /**
   * ID of the app authenticator enrollment
   * @return authenticatorEnrollmentId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATOR_ENROLLMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthenticatorEnrollmentId() {
    return authenticatorEnrollmentId;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATOR_ENROLLMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticatorEnrollmentId(@javax.annotation.Nullable String authenticatorEnrollmentId) {
    this.authenticatorEnrollmentId = authenticatorEnrollmentId;
  }

  public PushNotificationChallengeRequestJwt authorizationServerId(@javax.annotation.Nullable String authorizationServerId) {
    
    this.authorizationServerId = authorizationServerId;
    return this;
  }

  /**
   * ID of the authorization server that signed the challenge request
   * @return authorizationServerId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_SERVER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthorizationServerId() {
    return authorizationServerId;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_SERVER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorizationServerId(@javax.annotation.Nullable String authorizationServerId) {
    this.authorizationServerId = authorizationServerId;
  }

  public PushNotificationChallengeRequestJwt challengeContext(@javax.annotation.Nullable PushNotificationChallengeRequestJwtChallengeContext challengeContext) {
    
    this.challengeContext = challengeContext;
    return this;
  }

  /**
   * Get challengeContext
   * @return challengeContext
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHALLENGE_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PushNotificationChallengeRequestJwtChallengeContext getChallengeContext() {
    return challengeContext;
  }


  @JsonProperty(JSON_PROPERTY_CHALLENGE_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChallengeContext(@javax.annotation.Nullable PushNotificationChallengeRequestJwtChallengeContext challengeContext) {
    this.challengeContext = challengeContext;
  }

  public PushNotificationChallengeRequestJwt exp(@javax.annotation.Nullable String exp) {
    
    this.exp = exp;
    return this;
  }

  /**
   * Expiration time of token (UNIX timestamp)
   * @return exp
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExp() {
    return exp;
  }


  @JsonProperty(JSON_PROPERTY_EXP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExp(@javax.annotation.Nullable String exp) {
    this.exp = exp;
  }

  public PushNotificationChallengeRequestJwt iat(@javax.annotation.Nullable String iat) {
    
    this.iat = iat;
    return this;
  }

  /**
   * Issuing time of token (UNIX timestamp)
   * @return iat
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIat() {
    return iat;
  }


  @JsonProperty(JSON_PROPERTY_IAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIat(@javax.annotation.Nullable String iat) {
    this.iat = iat;
  }

  public PushNotificationChallengeRequestJwt iss(@javax.annotation.Nullable String iss) {
    
    this.iss = iss;
    return this;
  }

  /**
   * Issuer (maps to the org URL)
   * @return iss
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIss() {
    return iss;
  }


  @JsonProperty(JSON_PROPERTY_ISS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIss(@javax.annotation.Nullable String iss) {
    this.iss = iss;
  }

  public PushNotificationChallengeRequestJwt jti(@javax.annotation.Nullable String jti) {
    
    this.jti = jti;
    return this;
  }

  /**
   * Token ID (matches &#x60;transactionId&#x60;)
   * @return jti
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JTI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJti() {
    return jti;
  }


  @JsonProperty(JSON_PROPERTY_JTI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJti(@javax.annotation.Nullable String jti) {
    this.jti = jti;
  }

  public PushNotificationChallengeRequestJwt method(@javax.annotation.Nullable MethodEnum method) {
    
    this.method = method;
    return this;
  }

  /**
   * Method type requested for the response
   * @return method
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MethodEnum getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(@javax.annotation.Nullable MethodEnum method) {
    this.method = method;
  }

  public PushNotificationChallengeRequestJwt methodEnrollmentId(@javax.annotation.Nullable String methodEnrollmentId) {
    
    this.methodEnrollmentId = methodEnrollmentId;
    return this;
  }

  /**
   * ID of the push method enrollment
   * @return methodEnrollmentId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD_ENROLLMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMethodEnrollmentId() {
    return methodEnrollmentId;
  }


  @JsonProperty(JSON_PROPERTY_METHOD_ENROLLMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethodEnrollmentId(@javax.annotation.Nullable String methodEnrollmentId) {
    this.methodEnrollmentId = methodEnrollmentId;
  }

  public PushNotificationChallengeRequestJwt nonce(@javax.annotation.Nullable String nonce) {
    
    this.nonce = nonce;
    return this;
  }

  /**
   * Randomly generated nonce value
   * @return nonce
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NONCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNonce() {
    return nonce;
  }


  @JsonProperty(JSON_PROPERTY_NONCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNonce(@javax.annotation.Nullable String nonce) {
    this.nonce = nonce;
  }

  public PushNotificationChallengeRequestJwt orgId(@javax.annotation.Nullable String orgId) {
    
    this.orgId = orgId;
    return this;
  }

  /**
   * ID of the organization
   * @return orgId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrgId() {
    return orgId;
  }


  @JsonProperty(JSON_PROPERTY_ORG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrgId(@javax.annotation.Nullable String orgId) {
    this.orgId = orgId;
  }

  public PushNotificationChallengeRequestJwt signals(@javax.annotation.Nullable List<String> signals) {
    
    this.signals = signals;
    return this;
  }

  public PushNotificationChallengeRequestJwt addSignalsItem(String signalsItem) {
    if (this.signals == null) {
      this.signals = new ArrayList<>();
    }
    this.signals.add(signalsItem);
    return this;
  }

  /**
   * Array of string values describing client signals requested for collection
   * @return signals
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIGNALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSignals() {
    return signals;
  }


  @JsonProperty(JSON_PROPERTY_SIGNALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignals(@javax.annotation.Nullable List<String> signals) {
    this.signals = signals;
  }

  public PushNotificationChallengeRequestJwt transactionId(@javax.annotation.Nullable String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Transaction ID (matches the &#x60;challengeId&#x60; path parameter)
   * @return transactionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionId(@javax.annotation.Nullable String transactionId) {
    this.transactionId = transactionId;
  }

  public PushNotificationChallengeRequestJwt userId(@javax.annotation.Nullable String userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * ID of the user being challenged
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }

  public PushNotificationChallengeRequestJwt userMediation(@javax.annotation.Nullable UserMediationEnum userMediation) {
    
    this.userMediation = userMediation;
    return this;
  }

  /**
   * Indicates if user mediation is required
   * @return userMediation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_MEDIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserMediationEnum getUserMediation() {
    return userMediation;
  }


  @JsonProperty(JSON_PROPERTY_USER_MEDIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserMediation(@javax.annotation.Nullable UserMediationEnum userMediation) {
    this.userMediation = userMediation;
  }

  public PushNotificationChallengeRequestJwt userVerification(@javax.annotation.Nullable UserVerificationEnum userVerification) {
    
    this.userVerification = userVerification;
    return this;
  }

  /**
   * Indicates if user verification (biometrics) is used in the response
   * @return userVerification
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_VERIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserVerificationEnum getUserVerification() {
    return userVerification;
  }


  @JsonProperty(JSON_PROPERTY_USER_VERIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserVerification(@javax.annotation.Nullable UserVerificationEnum userVerification) {
    this.userVerification = userVerification;
  }

  public PushNotificationChallengeRequestJwt ver(@javax.annotation.Nullable Integer ver) {
    
    this.ver = ver;
    return this;
  }

  /**
   * Version of the JWT (supported value: 0)
   * @return ver
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVer() {
    return ver;
  }


  @JsonProperty(JSON_PROPERTY_VER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVer(@javax.annotation.Nullable Integer ver) {
    this.ver = ver;
  }

  public PushNotificationChallengeRequestJwt verificationUri(@javax.annotation.Nullable String verificationUri) {
    
    this.verificationUri = verificationUri;
    return this;
  }

  /**
   * The expected endpoint posted by the client for the challenge response
   * @return verificationUri
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFICATION_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVerificationUri() {
    return verificationUri;
  }


  @JsonProperty(JSON_PROPERTY_VERIFICATION_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerificationUri(@javax.annotation.Nullable String verificationUri) {
    this.verificationUri = verificationUri;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PushNotificationChallengeRequestJwt pushNotificationChallengeRequestJwt = (PushNotificationChallengeRequestJwt) o;
    return Objects.equals(this.appInstanceName, pushNotificationChallengeRequestJwt.appInstanceName) &&
        Objects.equals(this.aud, pushNotificationChallengeRequestJwt.aud) &&
        Objects.equals(this.authenticatorEnrollmentId, pushNotificationChallengeRequestJwt.authenticatorEnrollmentId) &&
        Objects.equals(this.authorizationServerId, pushNotificationChallengeRequestJwt.authorizationServerId) &&
        Objects.equals(this.challengeContext, pushNotificationChallengeRequestJwt.challengeContext) &&
        Objects.equals(this.exp, pushNotificationChallengeRequestJwt.exp) &&
        Objects.equals(this.iat, pushNotificationChallengeRequestJwt.iat) &&
        Objects.equals(this.iss, pushNotificationChallengeRequestJwt.iss) &&
        Objects.equals(this.jti, pushNotificationChallengeRequestJwt.jti) &&
        Objects.equals(this.method, pushNotificationChallengeRequestJwt.method) &&
        Objects.equals(this.methodEnrollmentId, pushNotificationChallengeRequestJwt.methodEnrollmentId) &&
        Objects.equals(this.nonce, pushNotificationChallengeRequestJwt.nonce) &&
        Objects.equals(this.orgId, pushNotificationChallengeRequestJwt.orgId) &&
        Objects.equals(this.signals, pushNotificationChallengeRequestJwt.signals) &&
        Objects.equals(this.transactionId, pushNotificationChallengeRequestJwt.transactionId) &&
        Objects.equals(this.userId, pushNotificationChallengeRequestJwt.userId) &&
        Objects.equals(this.userMediation, pushNotificationChallengeRequestJwt.userMediation) &&
        Objects.equals(this.userVerification, pushNotificationChallengeRequestJwt.userVerification) &&
        Objects.equals(this.ver, pushNotificationChallengeRequestJwt.ver) &&
        Objects.equals(this.verificationUri, pushNotificationChallengeRequestJwt.verificationUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appInstanceName, aud, authenticatorEnrollmentId, authorizationServerId, challengeContext, exp, iat, iss, jti, method, methodEnrollmentId, nonce, orgId, signals, transactionId, userId, userMediation, userVerification, ver, verificationUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PushNotificationChallengeRequestJwt {\n");
    sb.append("    appInstanceName: ").append(toIndentedString(appInstanceName)).append("\n");
    sb.append("    aud: ").append(toIndentedString(aud)).append("\n");
    sb.append("    authenticatorEnrollmentId: ").append(toIndentedString(authenticatorEnrollmentId)).append("\n");
    sb.append("    authorizationServerId: ").append(toIndentedString(authorizationServerId)).append("\n");
    sb.append("    challengeContext: ").append(toIndentedString(challengeContext)).append("\n");
    sb.append("    exp: ").append(toIndentedString(exp)).append("\n");
    sb.append("    iat: ").append(toIndentedString(iat)).append("\n");
    sb.append("    iss: ").append(toIndentedString(iss)).append("\n");
    sb.append("    jti: ").append(toIndentedString(jti)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    methodEnrollmentId: ").append(toIndentedString(methodEnrollmentId)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    signals: ").append(toIndentedString(signals)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userMediation: ").append(toIndentedString(userMediation)).append("\n");
    sb.append("    userVerification: ").append(toIndentedString(userVerification)).append("\n");
    sb.append("    ver: ").append(toIndentedString(ver)).append("\n");
    sb.append("    verificationUri: ").append(toIndentedString(verificationUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

