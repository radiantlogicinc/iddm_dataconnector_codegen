/*
 * MyAccount Management
 * APIs for managing a user's own emails, phones, profile, and app authenticators. > **Note:** The MyAccount API doesn't support [delegated authentication](https://help.okta.com/okta_help.htm?id=ext_Security_Authentication).
 *
 * The version of the OpenAPI document: 2025.01.1
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.okta.myaccount.myaccountmanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.okta.myaccount.myaccountmanagement.model.SendEmailChallenge201ResponseLinks;
import com.okta.myaccount.myaccountmanagement.model.SendEmailChallenge201ResponseProfile;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.okta.myaccount.myaccountmanagement.invoker.JacksonConfig;

/**
 * SendEmailChallenge201Response
 */
@JsonPropertyOrder({
  SendEmailChallenge201Response.JSON_PROPERTY_ID,
  SendEmailChallenge201Response.JSON_PROPERTY_STATUS,
  SendEmailChallenge201Response.JSON_PROPERTY_EXPIRES_AT,
  SendEmailChallenge201Response.JSON_PROPERTY_PROFILE,
  SendEmailChallenge201Response.JSON_PROPERTY_LINKS
})
@JsonTypeName("sendEmailChallenge_201_response")
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-08-13T20:31:08.570419254Z[GMT]", comments = "Generator version: unset")
public class SendEmailChallenge201Response {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private String id;

  /**
   * The challenge status of the caller&#39;s email
   */
  public enum StatusEnum {
    VERIFIED(String.valueOf("VERIFIED")),
    
    UNVERIFIED(String.valueOf("UNVERIFIED"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nonnull
  private StatusEnum status;

  public static final String JSON_PROPERTY_EXPIRES_AT = "expiresAt";
  @javax.annotation.Nonnull
  private String expiresAt;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  @javax.annotation.Nonnull
  private SendEmailChallenge201ResponseProfile profile;

  public static final String JSON_PROPERTY_LINKS = "_links";
  @javax.annotation.Nonnull
  private SendEmailChallenge201ResponseLinks links;

  public SendEmailChallenge201Response() {
  }

  public SendEmailChallenge201Response id(@javax.annotation.Nonnull String id) {
    
    this.id = id;
    return this;
  }

  /**
   * The email ID of the caller
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public SendEmailChallenge201Response status(@javax.annotation.Nonnull StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * The challenge status of the caller&#39;s email
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@javax.annotation.Nonnull StatusEnum status) {
    this.status = status;
  }

  public SendEmailChallenge201Response expiresAt(@javax.annotation.Nonnull String expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

  /**
   * The time when the challenge expires. A challenge has a lifetime of five minutes.
   * @return expiresAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExpiresAt() {
    return expiresAt;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpiresAt(@javax.annotation.Nonnull String expiresAt) {
    this.expiresAt = expiresAt;
  }

  public SendEmailChallenge201Response profile(@javax.annotation.Nonnull SendEmailChallenge201ResponseProfile profile) {
    
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SendEmailChallenge201ResponseProfile getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfile(@javax.annotation.Nonnull SendEmailChallenge201ResponseProfile profile) {
    this.profile = profile;
  }

  public SendEmailChallenge201Response links(@javax.annotation.Nonnull SendEmailChallenge201ResponseLinks links) {
    
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SendEmailChallenge201ResponseLinks getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLinks(@javax.annotation.Nonnull SendEmailChallenge201ResponseLinks links) {
    this.links = links;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendEmailChallenge201Response sendEmailChallenge201Response = (SendEmailChallenge201Response) o;
    return Objects.equals(this.id, sendEmailChallenge201Response.id) &&
        Objects.equals(this.status, sendEmailChallenge201Response.status) &&
        Objects.equals(this.expiresAt, sendEmailChallenge201Response.expiresAt) &&
        Objects.equals(this.profile, sendEmailChallenge201Response.profile) &&
        Objects.equals(this.links, sendEmailChallenge201Response.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, expiresAt, profile, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendEmailChallenge201Response {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

