/*
 * MyAccount Management
 * APIs for managing a user's own emails, phones, profile, and app authenticators. > **Note:** The MyAccount API doesn't support [delegated authentication](https://help.okta.com/okta_help.htm?id=ext_Security_Authentication).
 *
 * The version of the OpenAPI document: 2025.01.1
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.okta.myaccount.myaccountmanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.okta.myaccount.myaccountmanagement.model.AppAuthenticatorEnrollmentRequestMethodsPushKeys;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.okta.myaccount.myaccountmanagement.invoker.JacksonConfig;

/**
 * AppAuthenticatorEnrollmentRequestMethodsPush
 */
@JsonPropertyOrder({
  AppAuthenticatorEnrollmentRequestMethodsPush.JSON_PROPERTY_APS_ENVIRONMENT,
  AppAuthenticatorEnrollmentRequestMethodsPush.JSON_PROPERTY_PUSH_TOKEN,
  AppAuthenticatorEnrollmentRequestMethodsPush.JSON_PROPERTY_KEYS
})
@JsonTypeName("AppAuthenticatorEnrollmentRequest_methods_push")
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-08-13T20:31:08.570419254Z[GMT]", comments = "Generator version: unset")
public class AppAuthenticatorEnrollmentRequestMethodsPush {
  /**
   * Target APS type that application registers to. Required for iOS enrollments.
   */
  public enum ApsEnvironmentEnum {
    PRODUCTION(String.valueOf("PRODUCTION")),
    
    DEVELOPMENT(String.valueOf("DEVELOPMENT"));

    private String value;

    ApsEnvironmentEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ApsEnvironmentEnum fromValue(String value) {
      for (ApsEnvironmentEnum b : ApsEnvironmentEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_APS_ENVIRONMENT = "apsEnvironment";
  @javax.annotation.Nullable
  private ApsEnvironmentEnum apsEnvironment;

  public static final String JSON_PROPERTY_PUSH_TOKEN = "pushToken";
  @javax.annotation.Nonnull
  private String pushToken;

  public static final String JSON_PROPERTY_KEYS = "keys";
  @javax.annotation.Nonnull
  private AppAuthenticatorEnrollmentRequestMethodsPushKeys keys;

  public AppAuthenticatorEnrollmentRequestMethodsPush() {
  }

  public AppAuthenticatorEnrollmentRequestMethodsPush apsEnvironment(@javax.annotation.Nullable ApsEnvironmentEnum apsEnvironment) {
    
    this.apsEnvironment = apsEnvironment;
    return this;
  }

  /**
   * Target APS type that application registers to. Required for iOS enrollments.
   * @return apsEnvironment
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APS_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApsEnvironmentEnum getApsEnvironment() {
    return apsEnvironment;
  }


  @JsonProperty(JSON_PROPERTY_APS_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApsEnvironment(@javax.annotation.Nullable ApsEnvironmentEnum apsEnvironment) {
    this.apsEnvironment = apsEnvironment;
  }

  public AppAuthenticatorEnrollmentRequestMethodsPush pushToken(@javax.annotation.Nonnull String pushToken) {
    
    this.pushToken = pushToken;
    return this;
  }

  /**
   * Get pushToken
   * @return pushToken
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PUSH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPushToken() {
    return pushToken;
  }


  @JsonProperty(JSON_PROPERTY_PUSH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPushToken(@javax.annotation.Nonnull String pushToken) {
    this.pushToken = pushToken;
  }

  public AppAuthenticatorEnrollmentRequestMethodsPush keys(@javax.annotation.Nonnull AppAuthenticatorEnrollmentRequestMethodsPushKeys keys) {
    
    this.keys = keys;
    return this;
  }

  /**
   * Get keys
   * @return keys
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KEYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AppAuthenticatorEnrollmentRequestMethodsPushKeys getKeys() {
    return keys;
  }


  @JsonProperty(JSON_PROPERTY_KEYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKeys(@javax.annotation.Nonnull AppAuthenticatorEnrollmentRequestMethodsPushKeys keys) {
    this.keys = keys;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppAuthenticatorEnrollmentRequestMethodsPush appAuthenticatorEnrollmentRequestMethodsPush = (AppAuthenticatorEnrollmentRequestMethodsPush) o;
    return Objects.equals(this.apsEnvironment, appAuthenticatorEnrollmentRequestMethodsPush.apsEnvironment) &&
        Objects.equals(this.pushToken, appAuthenticatorEnrollmentRequestMethodsPush.pushToken) &&
        Objects.equals(this.keys, appAuthenticatorEnrollmentRequestMethodsPush.keys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apsEnvironment, pushToken, keys);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppAuthenticatorEnrollmentRequestMethodsPush {\n");
    sb.append("    apsEnvironment: ").append(toIndentedString(apsEnvironment)).append("\n");
    sb.append("    pushToken: ").append(toIndentedString(pushToken)).append("\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

