/*
 * MyAccount Management
 * APIs for managing a user's own emails, phones, profile, and app authenticators. > **Note:** The MyAccount API doesn't support [delegated authentication](https://help.okta.com/okta_help.htm?id=ext_Security_Authentication).
 *
 * The version of the OpenAPI document: 2025.01.1
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.okta.myaccount.myaccountmanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.okta.myaccount.myaccountmanagement.invoker.JacksonConfig;

/**
 * KeyEC
 */
@JsonPropertyOrder({
  KeyEC.JSON_PROPERTY_CRV,
  KeyEC.JSON_PROPERTY_KID,
  KeyEC.JSON_PROPERTY_KTY,
  KeyEC.JSON_PROPERTY_OKTA_KPR,
  KeyEC.JSON_PROPERTY_X,
  KeyEC.JSON_PROPERTY_Y
})
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-08-13T20:31:08.570419254Z[GMT]", comments = "Generator version: unset")
public class KeyEC implements KeyObject {
  public static final String JSON_PROPERTY_CRV = "crv";
  @javax.annotation.Nonnull
  private CrvEnum crv;

  public static final String JSON_PROPERTY_KID = "kid";
  @javax.annotation.Nonnull
  private String kid;

  public static final String JSON_PROPERTY_KTY = "kty";
  @javax.annotation.Nonnull
  private KtyEnum kty;

  public static final String JSON_PROPERTY_OKTA_KPR = "okta:kpr";
  @javax.annotation.Nonnull
  private OktaKprEnum oktaKpr;

  public static final String JSON_PROPERTY_X = "x";
  @javax.annotation.Nonnull
  private String x;

  public static final String JSON_PROPERTY_Y = "y";
  @javax.annotation.Nonnull
  private String y;

  public KeyEC() {
  }

  public KeyEC crv(@javax.annotation.Nonnull CrvEnum crv) {
    
    this.crv = crv;
    return this;
  }

  /**
   * Get crv
   * @return crv
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CRV)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CrvEnum getCrv() {
    return crv;
  }


  @JsonProperty(JSON_PROPERTY_CRV)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCrv(@javax.annotation.Nonnull CrvEnum crv) {
    this.crv = crv;
  }

  public KeyEC kid(@javax.annotation.Nonnull String kid) {
    
    this.kid = kid;
    return this;
  }

  /**
   * The unique identifier of the key
   * @return kid
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKid() {
    return kid;
  }


  @JsonProperty(JSON_PROPERTY_KID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKid(@javax.annotation.Nonnull String kid) {
    this.kid = kid;
  }

  public KeyEC kty(@javax.annotation.Nonnull KtyEnum kty) {
    
    this.kty = kty;
    return this;
  }

  /**
   * The type of public key
   * @return kty
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public KtyEnum getKty() {
    return kty;
  }


  @JsonProperty(JSON_PROPERTY_KTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKty(@javax.annotation.Nonnull KtyEnum kty) {
    this.kty = kty;
  }

  public KeyEC oktaKpr(@javax.annotation.Nonnull OktaKprEnum oktaKpr) {
    
    this.oktaKpr = oktaKpr;
    return this;
  }

  /**
   * Get oktaKpr
   * @return oktaKpr
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OKTA_KPR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OktaKprEnum getOktaKpr() {
    return oktaKpr;
  }


  @JsonProperty(JSON_PROPERTY_OKTA_KPR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOktaKpr(@javax.annotation.Nonnull OktaKprEnum oktaKpr) {
    this.oktaKpr = oktaKpr;
  }

  public KeyEC x(@javax.annotation.Nonnull String x) {
    
    this.x = x;
    return this;
  }

  /**
   * The public x coordinate for the elliptic curve point
   * @return x
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_X)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getX() {
    return x;
  }


  @JsonProperty(JSON_PROPERTY_X)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setX(@javax.annotation.Nonnull String x) {
    this.x = x;
  }

  public KeyEC y(@javax.annotation.Nonnull String y) {
    
    this.y = y;
    return this;
  }

  /**
   * The public y coordinate for the elliptic curve point
   * @return y
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_Y)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getY() {
    return y;
  }


  @JsonProperty(JSON_PROPERTY_Y)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setY(@javax.annotation.Nonnull String y) {
    this.y = y;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyEC keyEC = (KeyEC) o;
    return Objects.equals(this.crv, keyEC.crv) &&
        Objects.equals(this.kid, keyEC.kid) &&
        Objects.equals(this.kty, keyEC.kty) &&
        Objects.equals(this.oktaKpr, keyEC.oktaKpr) &&
        Objects.equals(this.x, keyEC.x) &&
        Objects.equals(this.y, keyEC.y);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crv, kid, kty, oktaKpr, x, y);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyEC {\n");
    sb.append("    crv: ").append(toIndentedString(crv)).append("\n");
    sb.append("    kid: ").append(toIndentedString(kid)).append("\n");
    sb.append("    kty: ").append(toIndentedString(kty)).append("\n");
    sb.append("    oktaKpr: ").append(toIndentedString(oktaKpr)).append("\n");
    sb.append("    x: ").append(toIndentedString(x)).append("\n");
    sb.append("    y: ").append(toIndentedString(y)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

