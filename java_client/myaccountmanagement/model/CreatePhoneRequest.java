/*
 * MyAccount Management
 * APIs for managing a user's own emails, phones, profile, and app authenticators. > **Note:** The MyAccount API doesn't support [delegated authentication](https://help.okta.com/okta_help.htm?id=ext_Security_Authentication).
 *
 * The version of the OpenAPI document: 2025.01.1
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.okta.myaccount.myaccountmanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.okta.myaccount.myaccountmanagement.model.CreatePhoneRequestProfile;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.okta.myaccount.myaccountmanagement.invoker.JacksonConfig;

/**
 * CreatePhoneRequest
 */
@JsonPropertyOrder({
  CreatePhoneRequest.JSON_PROPERTY_PROFILE,
  CreatePhoneRequest.JSON_PROPERTY_SEND_CODE,
  CreatePhoneRequest.JSON_PROPERTY_METHOD
})
@JsonTypeName("createPhone_request")
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-08-13T20:31:08.570419254Z[GMT]", comments = "Generator version: unset")
public class CreatePhoneRequest {
  public static final String JSON_PROPERTY_PROFILE = "profile";
  @javax.annotation.Nonnull
  private CreatePhoneRequestProfile profile;

  public static final String JSON_PROPERTY_SEND_CODE = "sendCode";
  @javax.annotation.Nullable
  private Boolean sendCode = true;

  /**
   * The method of the challenge sent to the newly added phone. Applicable when sendCode is true.
   */
  public enum MethodEnum {
    SMS(String.valueOf("SMS")),
    
    CALL(String.valueOf("CALL"));

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MethodEnum fromValue(String value) {
      for (MethodEnum b : MethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_METHOD = "method";
  @javax.annotation.Nullable
  private MethodEnum method;

  public CreatePhoneRequest() {
  }

  public CreatePhoneRequest profile(@javax.annotation.Nonnull CreatePhoneRequestProfile profile) {
    
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreatePhoneRequestProfile getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfile(@javax.annotation.Nonnull CreatePhoneRequestProfile profile) {
    this.profile = profile;
  }

  public CreatePhoneRequest sendCode(@javax.annotation.Nullable Boolean sendCode) {
    
    this.sendCode = sendCode;
    return this;
  }

  /**
   * Whether to send a challenge to the newly added phone
   * @return sendCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEND_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSendCode() {
    return sendCode;
  }


  @JsonProperty(JSON_PROPERTY_SEND_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendCode(@javax.annotation.Nullable Boolean sendCode) {
    this.sendCode = sendCode;
  }

  public CreatePhoneRequest method(@javax.annotation.Nullable MethodEnum method) {
    
    this.method = method;
    return this;
  }

  /**
   * The method of the challenge sent to the newly added phone. Applicable when sendCode is true.
   * @return method
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MethodEnum getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(@javax.annotation.Nullable MethodEnum method) {
    this.method = method;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePhoneRequest createPhoneRequest = (CreatePhoneRequest) o;
    return Objects.equals(this.profile, createPhoneRequest.profile) &&
        Objects.equals(this.sendCode, createPhoneRequest.sendCode) &&
        Objects.equals(this.method, createPhoneRequest.method);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profile, sendCode, method);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePhoneRequest {\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    sendCode: ").append(toIndentedString(sendCode)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

