/*
 * Harry Potter API
 * A REST Harry Potter API with images and information about books, characters and spells. Translated to many languages.  This documentation was built by VÃ­ctor Laurencena and it's available on [GitHub](https://github.com/vlaurencena/harry-potter-openapi-swagger-ui). 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radiantlogic.openapi.generated.harrypotterapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.radiantlogic.openapi.generated.harrypotterapi.invoker.JacksonConfig;

/**
 * House
 */
@JsonPropertyOrder({
  House.JSON_PROPERTY_HOUSE,
  House.JSON_PROPERTY_EMOJI,
  House.JSON_PROPERTY_FOUNDER,
  House.JSON_PROPERTY_COLORS,
  House.JSON_PROPERTY_ANIMAL,
  House.JSON_PROPERTY_INDEX
})
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-07-20T12:50:53.280565630Z[GMT]", comments = "Generator version: unset")
public class House {
  public static final String JSON_PROPERTY_HOUSE = "house";
  @javax.annotation.Nullable
  private String house;

  public static final String JSON_PROPERTY_EMOJI = "emoji";
  @javax.annotation.Nullable
  private String emoji;

  public static final String JSON_PROPERTY_FOUNDER = "founder";
  @javax.annotation.Nullable
  private String founder;

  public static final String JSON_PROPERTY_COLORS = "colors";
  @javax.annotation.Nullable
  private List<String> colors = new ArrayList<>();

  public static final String JSON_PROPERTY_ANIMAL = "animal";
  @javax.annotation.Nullable
  private String animal;

  public static final String JSON_PROPERTY_INDEX = "index";
  @javax.annotation.Nullable
  private BigDecimal index;

  public House() {
  }

  public House house(@javax.annotation.Nullable String house) {
    
    this.house = house;
    return this;
  }

  /**
   * Get house
   * @return house
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHouse() {
    return house;
  }


  @JsonProperty(JSON_PROPERTY_HOUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHouse(@javax.annotation.Nullable String house) {
    this.house = house;
  }

  public House emoji(@javax.annotation.Nullable String emoji) {
    
    this.emoji = emoji;
    return this;
  }

  /**
   * Get emoji
   * @return emoji
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMOJI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmoji() {
    return emoji;
  }


  @JsonProperty(JSON_PROPERTY_EMOJI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmoji(@javax.annotation.Nullable String emoji) {
    this.emoji = emoji;
  }

  public House founder(@javax.annotation.Nullable String founder) {
    
    this.founder = founder;
    return this;
  }

  /**
   * Get founder
   * @return founder
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOUNDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFounder() {
    return founder;
  }


  @JsonProperty(JSON_PROPERTY_FOUNDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFounder(@javax.annotation.Nullable String founder) {
    this.founder = founder;
  }

  public House colors(@javax.annotation.Nullable List<String> colors) {
    
    this.colors = colors;
    return this;
  }

  public House addColorsItem(String colorsItem) {
    if (this.colors == null) {
      this.colors = new ArrayList<>();
    }
    this.colors.add(colorsItem);
    return this;
  }

  /**
   * Get colors
   * @return colors
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COLORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getColors() {
    return colors;
  }


  @JsonProperty(JSON_PROPERTY_COLORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColors(@javax.annotation.Nullable List<String> colors) {
    this.colors = colors;
  }

  public House animal(@javax.annotation.Nullable String animal) {
    
    this.animal = animal;
    return this;
  }

  /**
   * Get animal
   * @return animal
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANIMAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnimal() {
    return animal;
  }


  @JsonProperty(JSON_PROPERTY_ANIMAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnimal(@javax.annotation.Nullable String animal) {
    this.animal = animal;
  }

  public House index(@javax.annotation.Nullable BigDecimal index) {
    
    this.index = index;
    return this;
  }

  /**
   * Get index
   * @return index
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndex(@javax.annotation.Nullable BigDecimal index) {
    this.index = index;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    House house = (House) o;
    return Objects.equals(this.house, house.house) &&
        Objects.equals(this.emoji, house.emoji) &&
        Objects.equals(this.founder, house.founder) &&
        Objects.equals(this.colors, house.colors) &&
        Objects.equals(this.animal, house.animal) &&
        Objects.equals(this.index, house.index);
  }

  @Override
  public int hashCode() {
    return Objects.hash(house, emoji, founder, colors, animal, index);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class House {\n");
    sb.append("    house: ").append(toIndentedString(house)).append("\n");
    sb.append("    emoji: ").append(toIndentedString(emoji)).append("\n");
    sb.append("    founder: ").append(toIndentedString(founder)).append("\n");
    sb.append("    colors: ").append(toIndentedString(colors)).append("\n");
    sb.append("    animal: ").append(toIndentedString(animal)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

